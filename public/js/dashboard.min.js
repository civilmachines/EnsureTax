
/*
 *
 * More info at [www.dropzonejs.com](http://www.dropzonejs.com)
 *
 * Copyright (c) 2012, Matias Meno
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 *
 */

(function() {
  var Dropzone, Emitter, camelize, contentLoaded, detectVerticalSquash, drawImageIOSFix, noop, without,
    __slice = [].slice,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  noop = function() {};

  Emitter = (function() {
    function Emitter() {}

    Emitter.prototype.addEventListener = Emitter.prototype.on;

    Emitter.prototype.on = function(event, fn) {
      this._callbacks = this._callbacks || {};
      if (!this._callbacks[event]) {
        this._callbacks[event] = [];
      }
      this._callbacks[event].push(fn);
      return this;
    };

    Emitter.prototype.emit = function() {
      var args, callback, callbacks, event, _i, _len;
      event = arguments[0], args = 2 <= arguments.length ? __slice.call(arguments, 1) : [];
      this._callbacks = this._callbacks || {};
      callbacks = this._callbacks[event];
      if (callbacks) {
        for (_i = 0, _len = callbacks.length; _i < _len; _i++) {
          callback = callbacks[_i];
          callback.apply(this, args);
        }
      }
      return this;
    };

    Emitter.prototype.removeListener = Emitter.prototype.off;

    Emitter.prototype.removeAllListeners = Emitter.prototype.off;

    Emitter.prototype.removeEventListener = Emitter.prototype.off;

    Emitter.prototype.off = function(event, fn) {
      var callback, callbacks, i, _i, _len;
      if (!this._callbacks || arguments.length === 0) {
        this._callbacks = {};
        return this;
      }
      callbacks = this._callbacks[event];
      if (!callbacks) {
        return this;
      }
      if (arguments.length === 1) {
        delete this._callbacks[event];
        return this;
      }
      for (i = _i = 0, _len = callbacks.length; _i < _len; i = ++_i) {
        callback = callbacks[i];
        if (callback === fn) {
          callbacks.splice(i, 1);
          break;
        }
      }
      return this;
    };

    return Emitter;

  })();

  Dropzone = (function(_super) {
    var extend, resolveOption;

    __extends(Dropzone, _super);

    Dropzone.prototype.Emitter = Emitter;


    /*
    This is a list of all available events you can register on a dropzone object.
    
    You can register an event handler like this:
    
        dropzone.on("dragEnter", function() { });
     */

    Dropzone.prototype.events = ["drop", "dragstart", "dragend", "dragenter", "dragover", "dragleave", "addedfile", "addedfiles", "removedfile", "thumbnail", "error", "errormultiple", "processing", "processingmultiple", "uploadprogress", "totaluploadprogress", "sending", "sendingmultiple", "success", "successmultiple", "canceled", "canceledmultiple", "complete", "completemultiple", "reset", "maxfilesexceeded", "maxfilesreached", "queuecomplete"];

    Dropzone.prototype.defaultOptions = {
      url: null,
      method: "post",
      withCredentials: false,
      parallelUploads: 2,
      uploadMultiple: false,
      maxFilesize: 256,
      paramName: "file",
      createImageThumbnails: true,
      maxThumbnailFilesize: 10,
      thumbnailWidth: 120,
      thumbnailHeight: 120,
      filesizeBase: 1000,
      maxFiles: null,
      params: {},
      clickable: true,
      ignoreHiddenFiles: true,
      acceptedFiles: null,
      acceptedMimeTypes: null,
      autoProcessQueue: true,
      autoQueue: true,
      addRemoveLinks: false,
      previewsContainer: null,
      hiddenInputContainer: "body",
      capture: null,
      renameFilename: null,
      dictDefaultMessage: "Drop files here to upload",
      dictFallbackMessage: "Your browser does not support drag'n'drop file uploads.",
      dictFallbackText: "Please use the fallback form below to upload your files like in the olden days.",
      dictFileTooBig: "File is too big ({{filesize}}MiB). Max filesize: {{maxFilesize}}MiB.",
      dictInvalidFileType: "You can't upload files of this type.",
      dictResponseError: "Server responded with {{statusCode}} code.",
      dictCancelUpload: "Cancel upload",
      dictCancelUploadConfirmation: "Are you sure you want to cancel this upload?",
      dictRemoveFile: "Remove file",
      dictRemoveFileConfirmation: null,
      dictMaxFilesExceeded: "You can not upload any more files.",
      accept: function(file, done) {
        return done();
      },
      init: function() {
        return noop;
      },
      forceFallback: false,
      fallback: function() {
        var child, messageElement, span, _i, _len, _ref;
        this.element.className = "" + this.element.className + " dz-browser-not-supported";
        _ref = this.element.getElementsByTagName("div");
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          child = _ref[_i];
          if (/(^| )dz-message($| )/.test(child.className)) {
            messageElement = child;
            child.className = "dz-message";
            continue;
          }
        }
        if (!messageElement) {
          messageElement = Dropzone.createElement("<div class=\"dz-message\"><span></span></div>");
          this.element.appendChild(messageElement);
        }
        span = messageElement.getElementsByTagName("span")[0];
        if (span) {
          if (span.textContent != null) {
            span.textContent = this.options.dictFallbackMessage;
          } else if (span.innerText != null) {
            span.innerText = this.options.dictFallbackMessage;
          }
        }
        return this.element.appendChild(this.getFallbackForm());
      },
      resize: function(file) {
        var info, srcRatio, trgRatio;
        info = {
          srcX: 0,
          srcY: 0,
          srcWidth: file.width,
          srcHeight: file.height
        };
        srcRatio = file.width / file.height;
        info.optWidth = this.options.thumbnailWidth;
        info.optHeight = this.options.thumbnailHeight;
        if ((info.optWidth == null) && (info.optHeight == null)) {
          info.optWidth = info.srcWidth;
          info.optHeight = info.srcHeight;
        } else if (info.optWidth == null) {
          info.optWidth = srcRatio * info.optHeight;
        } else if (info.optHeight == null) {
          info.optHeight = (1 / srcRatio) * info.optWidth;
        }
        trgRatio = info.optWidth / info.optHeight;
        if (file.height < info.optHeight || file.width < info.optWidth) {
          info.trgHeight = info.srcHeight;
          info.trgWidth = info.srcWidth;
        } else {
          if (srcRatio > trgRatio) {
            info.srcHeight = file.height;
            info.srcWidth = info.srcHeight * trgRatio;
          } else {
            info.srcWidth = file.width;
            info.srcHeight = info.srcWidth / trgRatio;
          }
        }
        info.srcX = (file.width - info.srcWidth) / 2;
        info.srcY = (file.height - info.srcHeight) / 2;
        return info;
      },

      /*
      Those functions register themselves to the events on init and handle all
      the user interface specific stuff. Overwriting them won't break the upload
      but can break the way it's displayed.
      You can overwrite them if you don't like the default behavior. If you just
      want to add an additional event handler, register it on the dropzone object
      and don't overwrite those options.
       */
      drop: function(e) {
        return this.element.classList.remove("dz-drag-hover");
      },
      dragstart: noop,
      dragend: function(e) {
        return this.element.classList.remove("dz-drag-hover");
      },
      dragenter: function(e) {
        return this.element.classList.add("dz-drag-hover");
      },
      dragover: function(e) {
        return this.element.classList.add("dz-drag-hover");
      },
      dragleave: function(e) {
        return this.element.classList.remove("dz-drag-hover");
      },
      paste: noop,
      reset: function() {
        return this.element.classList.remove("dz-started");
      },
      addedfile: function(file) {
        var node, removeFileEvent, removeLink, _i, _j, _k, _len, _len1, _len2, _ref, _ref1, _ref2, _results;
        if (this.element === this.previewsContainer) {
          this.element.classList.add("dz-started");
        }
        if (this.previewsContainer) {
          file.previewElement = Dropzone.createElement(this.options.previewTemplate.trim());
          file.previewTemplate = file.previewElement;
          this.previewsContainer.appendChild(file.previewElement);
          _ref = file.previewElement.querySelectorAll("[data-dz-name]");
          for (_i = 0, _len = _ref.length; _i < _len; _i++) {
            node = _ref[_i];
            node.textContent = this._renameFilename(file.name);
          }
          _ref1 = file.previewElement.querySelectorAll("[data-dz-size]");
          for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
            node = _ref1[_j];
            node.innerHTML = this.filesize(file.size);
          }
          if (this.options.addRemoveLinks) {
            file._removeLink = Dropzone.createElement("<a class=\"dz-remove\" href=\"javascript:undefined;\" data-dz-remove>" + this.options.dictRemoveFile + "</a>");
            file.previewElement.appendChild(file._removeLink);
          }
          removeFileEvent = (function(_this) {
            return function(e) {
              e.preventDefault();
              e.stopPropagation();
              if (file.status === Dropzone.UPLOADING) {
                return Dropzone.confirm(_this.options.dictCancelUploadConfirmation, function() {
                  return _this.removeFile(file);
                });
              } else {
                if (_this.options.dictRemoveFileConfirmation) {
                  return Dropzone.confirm(_this.options.dictRemoveFileConfirmation, function() {
                    return _this.removeFile(file);
                  });
                } else {
                  return _this.removeFile(file);
                }
              }
            };
          })(this);
          _ref2 = file.previewElement.querySelectorAll("[data-dz-remove]");
          _results = [];
          for (_k = 0, _len2 = _ref2.length; _k < _len2; _k++) {
            removeLink = _ref2[_k];
            _results.push(removeLink.addEventListener("click", removeFileEvent));
          }
          return _results;
        }
      },
      removedfile: function(file) {
        var _ref;
        if (file.previewElement) {
          if ((_ref = file.previewElement) != null) {
            _ref.parentNode.removeChild(file.previewElement);
          }
        }
        return this._updateMaxFilesReachedClass();
      },
      thumbnail: function(file, dataUrl) {
        var thumbnailElement, _i, _len, _ref;
        if (file.previewElement) {
          file.previewElement.classList.remove("dz-file-preview");
          _ref = file.previewElement.querySelectorAll("[data-dz-thumbnail]");
          for (_i = 0, _len = _ref.length; _i < _len; _i++) {
            thumbnailElement = _ref[_i];
            thumbnailElement.alt = file.name;
            thumbnailElement.src = dataUrl;
          }
          return setTimeout(((function(_this) {
            return function() {
              return file.previewElement.classList.add("dz-image-preview");
            };
          })(this)), 1);
        }
      },
      error: function(file, message) {
        var node, _i, _len, _ref, _results;
        if (file.previewElement) {
          file.previewElement.classList.add("dz-error");
          if (typeof message !== "String" && message.error) {
            message = message.error;
          }
          _ref = file.previewElement.querySelectorAll("[data-dz-errormessage]");
          _results = [];
          for (_i = 0, _len = _ref.length; _i < _len; _i++) {
            node = _ref[_i];
            _results.push(node.textContent = message);
          }
          return _results;
        }
      },
      errormultiple: noop,
      processing: function(file) {
        if (file.previewElement) {
          file.previewElement.classList.add("dz-processing");
          if (file._removeLink) {
            return file._removeLink.textContent = this.options.dictCancelUpload;
          }
        }
      },
      processingmultiple: noop,
      uploadprogress: function(file, progress, bytesSent) {
        var node, _i, _len, _ref, _results;
        if (file.previewElement) {
          _ref = file.previewElement.querySelectorAll("[data-dz-uploadprogress]");
          _results = [];
          for (_i = 0, _len = _ref.length; _i < _len; _i++) {
            node = _ref[_i];
            if (node.nodeName === 'PROGRESS') {
              _results.push(node.value = progress);
            } else {
              _results.push(node.style.width = "" + progress + "%");
            }
          }
          return _results;
        }
      },
      totaluploadprogress: noop,
      sending: noop,
      sendingmultiple: noop,
      success: function(file) {
        if (file.previewElement) {
          return file.previewElement.classList.add("dz-success");
        }
      },
      successmultiple: noop,
      canceled: function(file) {
        return this.emit("error", file, "Upload canceled.");
      },
      canceledmultiple: noop,
      complete: function(file) {
        if (file._removeLink) {
          file._removeLink.textContent = this.options.dictRemoveFile;
        }
        if (file.previewElement) {
          return file.previewElement.classList.add("dz-complete");
        }
      },
      completemultiple: noop,
      maxfilesexceeded: noop,
      maxfilesreached: noop,
      queuecomplete: noop,
      addedfiles: noop,
      previewTemplate: "<div class=\"dz-preview dz-file-preview\">\n  <div class=\"dz-image\"><img data-dz-thumbnail /></div>\n  <div class=\"dz-details\">\n    <div class=\"dz-size\"><span data-dz-size></span></div>\n    <div class=\"dz-filename\"><span data-dz-name></span></div>\n  </div>\n  <div class=\"dz-progress\"><span class=\"dz-upload\" data-dz-uploadprogress></span></div>\n  <div class=\"dz-error-message\"><span data-dz-errormessage></span></div>\n  <div class=\"dz-success-mark\">\n    <svg width=\"54px\" height=\"54px\" viewBox=\"0 0 54 54\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" xmlns:sketch=\"http://www.bohemiancoding.com/sketch/ns\">\n      <title>Check</title>\n      <defs></defs>\n      <g id=\"Page-1\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\" sketch:type=\"MSPage\">\n        <path d=\"M23.5,31.8431458 L17.5852419,25.9283877 C16.0248253,24.3679711 13.4910294,24.366835 11.9289322,25.9289322 C10.3700136,27.4878508 10.3665912,30.0234455 11.9283877,31.5852419 L20.4147581,40.0716123 C20.5133999,40.1702541 20.6159315,40.2626649 20.7218615,40.3488435 C22.2835669,41.8725651 24.794234,41.8626202 26.3461564,40.3106978 L43.3106978,23.3461564 C44.8771021,21.7797521 44.8758057,19.2483887 43.3137085,17.6862915 C41.7547899,16.1273729 39.2176035,16.1255422 37.6538436,17.6893022 L23.5,31.8431458 Z M27,53 C41.3594035,53 53,41.3594035 53,27 C53,12.6405965 41.3594035,1 27,1 C12.6405965,1 1,12.6405965 1,27 C1,41.3594035 12.6405965,53 27,53 Z\" id=\"Oval-2\" stroke-opacity=\"0.198794158\" stroke=\"#747474\" fill-opacity=\"0.816519475\" fill=\"#FFFFFF\" sketch:type=\"MSShapeGroup\"></path>\n      </g>\n    </svg>\n  </div>\n  <div class=\"dz-error-mark\">\n    <svg width=\"54px\" height=\"54px\" viewBox=\"0 0 54 54\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" xmlns:sketch=\"http://www.bohemiancoding.com/sketch/ns\">\n      <title>Error</title>\n      <defs></defs>\n      <g id=\"Page-1\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\" sketch:type=\"MSPage\">\n        <g id=\"Check-+-Oval-2\" sketch:type=\"MSLayerGroup\" stroke=\"#747474\" stroke-opacity=\"0.198794158\" fill=\"#FFFFFF\" fill-opacity=\"0.816519475\">\n          <path d=\"M32.6568542,29 L38.3106978,23.3461564 C39.8771021,21.7797521 39.8758057,19.2483887 38.3137085,17.6862915 C36.7547899,16.1273729 34.2176035,16.1255422 32.6538436,17.6893022 L27,23.3431458 L21.3461564,17.6893022 C19.7823965,16.1255422 17.2452101,16.1273729 15.6862915,17.6862915 C14.1241943,19.2483887 14.1228979,21.7797521 15.6893022,23.3461564 L21.3431458,29 L15.6893022,34.6538436 C14.1228979,36.2202479 14.1241943,38.7516113 15.6862915,40.3137085 C17.2452101,41.8726271 19.7823965,41.8744578 21.3461564,40.3106978 L27,34.6568542 L32.6538436,40.3106978 C34.2176035,41.8744578 36.7547899,41.8726271 38.3137085,40.3137085 C39.8758057,38.7516113 39.8771021,36.2202479 38.3106978,34.6538436 L32.6568542,29 Z M27,53 C41.3594035,53 53,41.3594035 53,27 C53,12.6405965 41.3594035,1 27,1 C12.6405965,1 1,12.6405965 1,27 C1,41.3594035 12.6405965,53 27,53 Z\" id=\"Oval-2\" sketch:type=\"MSShapeGroup\"></path>\n        </g>\n      </g>\n    </svg>\n  </div>\n</div>"
    };

    extend = function() {
      var key, object, objects, target, val, _i, _len;
      target = arguments[0], objects = 2 <= arguments.length ? __slice.call(arguments, 1) : [];
      for (_i = 0, _len = objects.length; _i < _len; _i++) {
        object = objects[_i];
        for (key in object) {
          val = object[key];
          target[key] = val;
        }
      }
      return target;
    };

    function Dropzone(element, options) {
      var elementOptions, fallback, _ref;
      this.element = element;
      this.version = Dropzone.version;
      this.defaultOptions.previewTemplate = this.defaultOptions.previewTemplate.replace(/\n*/g, "");
      this.clickableElements = [];
      this.listeners = [];
      this.files = [];
      if (typeof this.element === "string") {
        this.element = document.querySelector(this.element);
      }
      if (!(this.element && (this.element.nodeType != null))) {
        throw new Error("Invalid dropzone element.");
      }
      if (this.element.dropzone) {
        throw new Error("Dropzone already attached.");
      }
      Dropzone.instances.push(this);
      this.element.dropzone = this;
      elementOptions = (_ref = Dropzone.optionsForElement(this.element)) != null ? _ref : {};
      this.options = extend({}, this.defaultOptions, elementOptions, options != null ? options : {});
      if (this.options.forceFallback || !Dropzone.isBrowserSupported()) {
        return this.options.fallback.call(this);
      }
      if (this.options.url == null) {
        this.options.url = this.element.getAttribute("action");
      }
      if (!this.options.url) {
        throw new Error("No URL provided.");
      }
      if (this.options.acceptedFiles && this.options.acceptedMimeTypes) {
        throw new Error("You can't provide both 'acceptedFiles' and 'acceptedMimeTypes'. 'acceptedMimeTypes' is deprecated.");
      }
      if (this.options.acceptedMimeTypes) {
        this.options.acceptedFiles = this.options.acceptedMimeTypes;
        delete this.options.acceptedMimeTypes;
      }
      this.options.method = this.options.method.toUpperCase();
      if ((fallback = this.getExistingFallback()) && fallback.parentNode) {
        fallback.parentNode.removeChild(fallback);
      }
      if (this.options.previewsContainer !== false) {
        if (this.options.previewsContainer) {
          this.previewsContainer = Dropzone.getElement(this.options.previewsContainer, "previewsContainer");
        } else {
          this.previewsContainer = this.element;
        }
      }
      if (this.options.clickable) {
        if (this.options.clickable === true) {
          this.clickableElements = [this.element];
        } else {
          this.clickableElements = Dropzone.getElements(this.options.clickable, "clickable");
        }
      }
      this.init();
    }

    Dropzone.prototype.getAcceptedFiles = function() {
      var file, _i, _len, _ref, _results;
      _ref = this.files;
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        file = _ref[_i];
        if (file.accepted) {
          _results.push(file);
        }
      }
      return _results;
    };

    Dropzone.prototype.getRejectedFiles = function() {
      var file, _i, _len, _ref, _results;
      _ref = this.files;
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        file = _ref[_i];
        if (!file.accepted) {
          _results.push(file);
        }
      }
      return _results;
    };

    Dropzone.prototype.getFilesWithStatus = function(status) {
      var file, _i, _len, _ref, _results;
      _ref = this.files;
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        file = _ref[_i];
        if (file.status === status) {
          _results.push(file);
        }
      }
      return _results;
    };

    Dropzone.prototype.getQueuedFiles = function() {
      return this.getFilesWithStatus(Dropzone.QUEUED);
    };

    Dropzone.prototype.getUploadingFiles = function() {
      return this.getFilesWithStatus(Dropzone.UPLOADING);
    };

    Dropzone.prototype.getAddedFiles = function() {
      return this.getFilesWithStatus(Dropzone.ADDED);
    };

    Dropzone.prototype.getActiveFiles = function() {
      var file, _i, _len, _ref, _results;
      _ref = this.files;
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        file = _ref[_i];
        if (file.status === Dropzone.UPLOADING || file.status === Dropzone.QUEUED) {
          _results.push(file);
        }
      }
      return _results;
    };

    Dropzone.prototype.init = function() {
      var eventName, noPropagation, setupHiddenFileInput, _i, _len, _ref, _ref1;
      if (this.element.tagName === "form") {
        this.element.setAttribute("enctype", "multipart/form-data");
      }
      if (this.element.classList.contains("dropzone") && !this.element.querySelector(".dz-message")) {
        this.element.appendChild(Dropzone.createElement("<div class=\"dz-default dz-message\"><span>" + this.options.dictDefaultMessage + "</span></div>"));
      }
      if (this.clickableElements.length) {
        setupHiddenFileInput = (function(_this) {
          return function() {
            if (_this.hiddenFileInput) {
              _this.hiddenFileInput.parentNode.removeChild(_this.hiddenFileInput);
            }
            _this.hiddenFileInput = document.createElement("input");
            _this.hiddenFileInput.setAttribute("type", "file");
            if ((_this.options.maxFiles == null) || _this.options.maxFiles > 1) {
              _this.hiddenFileInput.setAttribute("multiple", "multiple");
            }
            _this.hiddenFileInput.className = "dz-hidden-input";
            if (_this.options.acceptedFiles != null) {
              _this.hiddenFileInput.setAttribute("accept", _this.options.acceptedFiles);
            }
            if (_this.options.capture != null) {
              _this.hiddenFileInput.setAttribute("capture", _this.options.capture);
            }
            _this.hiddenFileInput.style.visibility = "hidden";
            _this.hiddenFileInput.style.position = "absolute";
            _this.hiddenFileInput.style.top = "0";
            _this.hiddenFileInput.style.left = "0";
            _this.hiddenFileInput.style.height = "0";
            _this.hiddenFileInput.style.width = "0";
            document.querySelector(_this.options.hiddenInputContainer).appendChild(_this.hiddenFileInput);
            return _this.hiddenFileInput.addEventListener("change", function() {
              var file, files, _i, _len;
              files = _this.hiddenFileInput.files;
              if (files.length) {
                for (_i = 0, _len = files.length; _i < _len; _i++) {
                  file = files[_i];
                  _this.addFile(file);
                }
              }
              _this.emit("addedfiles", files);
              return setupHiddenFileInput();
            });
          };
        })(this);
        setupHiddenFileInput();
      }
      this.URL = (_ref = window.URL) != null ? _ref : window.webkitURL;
      _ref1 = this.events;
      for (_i = 0, _len = _ref1.length; _i < _len; _i++) {
        eventName = _ref1[_i];
        this.on(eventName, this.options[eventName]);
      }
      this.on("uploadprogress", (function(_this) {
        return function() {
          return _this.updateTotalUploadProgress();
        };
      })(this));
      this.on("removedfile", (function(_this) {
        return function() {
          return _this.updateTotalUploadProgress();
        };
      })(this));
      this.on("canceled", (function(_this) {
        return function(file) {
          return _this.emit("complete", file);
        };
      })(this));
      this.on("complete", (function(_this) {
        return function(file) {
          if (_this.getAddedFiles().length === 0 && _this.getUploadingFiles().length === 0 && _this.getQueuedFiles().length === 0) {
            return setTimeout((function() {
              return _this.emit("queuecomplete");
            }), 0);
          }
        };
      })(this));
      noPropagation = function(e) {
        e.stopPropagation();
        if (e.preventDefault) {
          return e.preventDefault();
        } else {
          return e.returnValue = false;
        }
      };
      this.listeners = [
        {
          element: this.element,
          events: {
            "dragstart": (function(_this) {
              return function(e) {
                return _this.emit("dragstart", e);
              };
            })(this),
            "dragenter": (function(_this) {
              return function(e) {
                noPropagation(e);
                return _this.emit("dragenter", e);
              };
            })(this),
            "dragover": (function(_this) {
              return function(e) {
                var efct;
                try {
                  efct = e.dataTransfer.effectAllowed;
                } catch (_error) {}
                e.dataTransfer.dropEffect = 'move' === efct || 'linkMove' === efct ? 'move' : 'copy';
                noPropagation(e);
                return _this.emit("dragover", e);
              };
            })(this),
            "dragleave": (function(_this) {
              return function(e) {
                return _this.emit("dragleave", e);
              };
            })(this),
            "drop": (function(_this) {
              return function(e) {
                noPropagation(e);
                return _this.drop(e);
              };
            })(this),
            "dragend": (function(_this) {
              return function(e) {
                return _this.emit("dragend", e);
              };
            })(this)
          }
        }
      ];
      this.clickableElements.forEach((function(_this) {
        return function(clickableElement) {
          return _this.listeners.push({
            element: clickableElement,
            events: {
              "click": function(evt) {
                if ((clickableElement !== _this.element) || (evt.target === _this.element || Dropzone.elementInside(evt.target, _this.element.querySelector(".dz-message")))) {
                  _this.hiddenFileInput.click();
                }
                return true;
              }
            }
          });
        };
      })(this));
      this.enable();
      return this.options.init.call(this);
    };

    Dropzone.prototype.destroy = function() {
      var _ref;
      this.disable();
      this.removeAllFiles(true);
      if ((_ref = this.hiddenFileInput) != null ? _ref.parentNode : void 0) {
        this.hiddenFileInput.parentNode.removeChild(this.hiddenFileInput);
        this.hiddenFileInput = null;
      }
      delete this.element.dropzone;
      return Dropzone.instances.splice(Dropzone.instances.indexOf(this), 1);
    };

    Dropzone.prototype.updateTotalUploadProgress = function() {
      var activeFiles, file, totalBytes, totalBytesSent, totalUploadProgress, _i, _len, _ref;
      totalBytesSent = 0;
      totalBytes = 0;
      activeFiles = this.getActiveFiles();
      if (activeFiles.length) {
        _ref = this.getActiveFiles();
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          file = _ref[_i];
          totalBytesSent += file.upload.bytesSent;
          totalBytes += file.upload.total;
        }
        totalUploadProgress = 100 * totalBytesSent / totalBytes;
      } else {
        totalUploadProgress = 100;
      }
      return this.emit("totaluploadprogress", totalUploadProgress, totalBytes, totalBytesSent);
    };

    Dropzone.prototype._getParamName = function(n) {
      if (typeof this.options.paramName === "function") {
        return this.options.paramName(n);
      } else {
        return "" + this.options.paramName + (this.options.uploadMultiple ? "[" + n + "]" : "");
      }
    };

    Dropzone.prototype._renameFilename = function(name) {
      if (typeof this.options.renameFilename !== "function") {
        return name;
      }
      return this.options.renameFilename(name);
    };

    Dropzone.prototype.getFallbackForm = function() {
      var existingFallback, fields, fieldsString, form;
      if (existingFallback = this.getExistingFallback()) {
        return existingFallback;
      }
      fieldsString = "<div class=\"dz-fallback\">";
      if (this.options.dictFallbackText) {
        fieldsString += "<p>" + this.options.dictFallbackText + "</p>";
      }
      fieldsString += "<input type=\"file\" name=\"" + (this._getParamName(0)) + "\" " + (this.options.uploadMultiple ? 'multiple="multiple"' : void 0) + " /><input type=\"submit\" value=\"Upload!\"></div>";
      fields = Dropzone.createElement(fieldsString);
      if (this.element.tagName !== "FORM") {
        form = Dropzone.createElement("<form action=\"" + this.options.url + "\" enctype=\"multipart/form-data\" method=\"" + this.options.method + "\"></form>");
        form.appendChild(fields);
      } else {
        this.element.setAttribute("enctype", "multipart/form-data");
        this.element.setAttribute("method", this.options.method);
      }
      return form != null ? form : fields;
    };

    Dropzone.prototype.getExistingFallback = function() {
      var fallback, getFallback, tagName, _i, _len, _ref;
      getFallback = function(elements) {
        var el, _i, _len;
        for (_i = 0, _len = elements.length; _i < _len; _i++) {
          el = elements[_i];
          if (/(^| )fallback($| )/.test(el.className)) {
            return el;
          }
        }
      };
      _ref = ["div", "form"];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        tagName = _ref[_i];
        if (fallback = getFallback(this.element.getElementsByTagName(tagName))) {
          return fallback;
        }
      }
    };

    Dropzone.prototype.setupEventListeners = function() {
      var elementListeners, event, listener, _i, _len, _ref, _results;
      _ref = this.listeners;
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        elementListeners = _ref[_i];
        _results.push((function() {
          var _ref1, _results1;
          _ref1 = elementListeners.events;
          _results1 = [];
          for (event in _ref1) {
            listener = _ref1[event];
            _results1.push(elementListeners.element.addEventListener(event, listener, false));
          }
          return _results1;
        })());
      }
      return _results;
    };

    Dropzone.prototype.removeEventListeners = function() {
      var elementListeners, event, listener, _i, _len, _ref, _results;
      _ref = this.listeners;
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        elementListeners = _ref[_i];
        _results.push((function() {
          var _ref1, _results1;
          _ref1 = elementListeners.events;
          _results1 = [];
          for (event in _ref1) {
            listener = _ref1[event];
            _results1.push(elementListeners.element.removeEventListener(event, listener, false));
          }
          return _results1;
        })());
      }
      return _results;
    };

    Dropzone.prototype.disable = function() {
      var file, _i, _len, _ref, _results;
      this.clickableElements.forEach(function(element) {
        return element.classList.remove("dz-clickable");
      });
      this.removeEventListeners();
      _ref = this.files;
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        file = _ref[_i];
        _results.push(this.cancelUpload(file));
      }
      return _results;
    };

    Dropzone.prototype.enable = function() {
      this.clickableElements.forEach(function(element) {
        return element.classList.add("dz-clickable");
      });
      return this.setupEventListeners();
    };

    Dropzone.prototype.filesize = function(size) {
      var cutoff, i, selectedSize, selectedUnit, unit, units, _i, _len;
      selectedSize = 0;
      selectedUnit = "b";
      if (size > 0) {
        units = ['TB', 'GB', 'MB', 'KB', 'b'];
        for (i = _i = 0, _len = units.length; _i < _len; i = ++_i) {
          unit = units[i];
          cutoff = Math.pow(this.options.filesizeBase, 4 - i) / 10;
          if (size >= cutoff) {
            selectedSize = size / Math.pow(this.options.filesizeBase, 4 - i);
            selectedUnit = unit;
            break;
          }
        }
        selectedSize = Math.round(10 * selectedSize) / 10;
      }
      return "<strong>" + selectedSize + "</strong> " + selectedUnit;
    };

    Dropzone.prototype._updateMaxFilesReachedClass = function() {
      if ((this.options.maxFiles != null) && this.getAcceptedFiles().length >= this.options.maxFiles) {
        if (this.getAcceptedFiles().length === this.options.maxFiles) {
          this.emit('maxfilesreached', this.files);
        }
        return this.element.classList.add("dz-max-files-reached");
      } else {
        return this.element.classList.remove("dz-max-files-reached");
      }
    };

    Dropzone.prototype.drop = function(e) {
      var files, items;
      if (!e.dataTransfer) {
        return;
      }
      this.emit("drop", e);
      files = e.dataTransfer.files;
      this.emit("addedfiles", files);
      if (files.length) {
        items = e.dataTransfer.items;
        if (items && items.length && (items[0].webkitGetAsEntry != null)) {
          this._addFilesFromItems(items);
        } else {
          this.handleFiles(files);
        }
      }
    };

    Dropzone.prototype.paste = function(e) {
      var items, _ref;
      if ((e != null ? (_ref = e.clipboardData) != null ? _ref.items : void 0 : void 0) == null) {
        return;
      }
      this.emit("paste", e);
      items = e.clipboardData.items;
      if (items.length) {
        return this._addFilesFromItems(items);
      }
    };

    Dropzone.prototype.handleFiles = function(files) {
      var file, _i, _len, _results;
      _results = [];
      for (_i = 0, _len = files.length; _i < _len; _i++) {
        file = files[_i];
        _results.push(this.addFile(file));
      }
      return _results;
    };

    Dropzone.prototype._addFilesFromItems = function(items) {
      var entry, item, _i, _len, _results;
      _results = [];
      for (_i = 0, _len = items.length; _i < _len; _i++) {
        item = items[_i];
        if ((item.webkitGetAsEntry != null) && (entry = item.webkitGetAsEntry())) {
          if (entry.isFile) {
            _results.push(this.addFile(item.getAsFile()));
          } else if (entry.isDirectory) {
            _results.push(this._addFilesFromDirectory(entry, entry.name));
          } else {
            _results.push(void 0);
          }
        } else if (item.getAsFile != null) {
          if ((item.kind == null) || item.kind === "file") {
            _results.push(this.addFile(item.getAsFile()));
          } else {
            _results.push(void 0);
          }
        } else {
          _results.push(void 0);
        }
      }
      return _results;
    };

    Dropzone.prototype._addFilesFromDirectory = function(directory, path) {
      var dirReader, errorHandler, readEntries;
      dirReader = directory.createReader();
      errorHandler = function(error) {
        return typeof console !== "undefined" && console !== null ? typeof console.log === "function" ? console.log(error) : void 0 : void 0;
      };
      readEntries = (function(_this) {
        return function() {
          return dirReader.readEntries(function(entries) {
            var entry, _i, _len;
            if (entries.length > 0) {
              for (_i = 0, _len = entries.length; _i < _len; _i++) {
                entry = entries[_i];
                if (entry.isFile) {
                  entry.file(function(file) {
                    if (_this.options.ignoreHiddenFiles && file.name.substring(0, 1) === '.') {
                      return;
                    }
                    file.fullPath = "" + path + "/" + file.name;
                    return _this.addFile(file);
                  });
                } else if (entry.isDirectory) {
                  _this._addFilesFromDirectory(entry, "" + path + "/" + entry.name);
                }
              }
              readEntries();
            }
            return null;
          }, errorHandler);
        };
      })(this);
      return readEntries();
    };

    Dropzone.prototype.accept = function(file, done) {
      if (file.size > this.options.maxFilesize * 1024 * 1024) {
        return done(this.options.dictFileTooBig.replace("{{filesize}}", Math.round(file.size / 1024 / 10.24) / 100).replace("{{maxFilesize}}", this.options.maxFilesize));
      } else if (!Dropzone.isValidFile(file, this.options.acceptedFiles)) {
        return done(this.options.dictInvalidFileType);
      } else if ((this.options.maxFiles != null) && this.getAcceptedFiles().length >= this.options.maxFiles) {
        done(this.options.dictMaxFilesExceeded.replace("{{maxFiles}}", this.options.maxFiles));
        return this.emit("maxfilesexceeded", file);
      } else {
        return this.options.accept.call(this, file, done);
      }
    };

    Dropzone.prototype.addFile = function(file) {
      file.upload = {
        progress: 0,
        total: file.size,
        bytesSent: 0
      };
      this.files.push(file);
      file.status = Dropzone.ADDED;
      this.emit("addedfile", file);
      this._enqueueThumbnail(file);
      return this.accept(file, (function(_this) {
        return function(error) {
          if (error) {
            file.accepted = false;
            _this._errorProcessing([file], error);
          } else {
            file.accepted = true;
            if (_this.options.autoQueue) {
              _this.enqueueFile(file);
            }
          }
          return _this._updateMaxFilesReachedClass();
        };
      })(this));
    };

    Dropzone.prototype.enqueueFiles = function(files) {
      var file, _i, _len;
      for (_i = 0, _len = files.length; _i < _len; _i++) {
        file = files[_i];
        this.enqueueFile(file);
      }
      return null;
    };

    Dropzone.prototype.enqueueFile = function(file) {
      if (file.status === Dropzone.ADDED && file.accepted === true) {
        file.status = Dropzone.QUEUED;
        if (this.options.autoProcessQueue) {
          return setTimeout(((function(_this) {
            return function() {
              return _this.processQueue();
            };
          })(this)), 0);
        }
      } else {
        throw new Error("This file can't be queued because it has already been processed or was rejected.");
      }
    };

    Dropzone.prototype._thumbnailQueue = [];

    Dropzone.prototype._processingThumbnail = false;

    Dropzone.prototype._enqueueThumbnail = function(file) {
      if (this.options.createImageThumbnails && file.type.match(/image.*/) && file.size <= this.options.maxThumbnailFilesize * 1024 * 1024) {
        this._thumbnailQueue.push(file);
        return setTimeout(((function(_this) {
          return function() {
            return _this._processThumbnailQueue();
          };
        })(this)), 0);
      }
    };

    Dropzone.prototype._processThumbnailQueue = function() {
      if (this._processingThumbnail || this._thumbnailQueue.length === 0) {
        return;
      }
      this._processingThumbnail = true;
      return this.createThumbnail(this._thumbnailQueue.shift(), (function(_this) {
        return function() {
          _this._processingThumbnail = false;
          return _this._processThumbnailQueue();
        };
      })(this));
    };

    Dropzone.prototype.removeFile = function(file) {
      if (file.status === Dropzone.UPLOADING) {
        this.cancelUpload(file);
      }
      this.files = without(this.files, file);
      this.emit("removedfile", file);
      if (this.files.length === 0) {
        return this.emit("reset");
      }
    };

    Dropzone.prototype.removeAllFiles = function(cancelIfNecessary) {
      var file, _i, _len, _ref;
      if (cancelIfNecessary == null) {
        cancelIfNecessary = false;
      }
      _ref = this.files.slice();
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        file = _ref[_i];
        if (file.status !== Dropzone.UPLOADING || cancelIfNecessary) {
          this.removeFile(file);
        }
      }
      return null;
    };

    Dropzone.prototype.createThumbnail = function(file, callback) {
      var fileReader;
      fileReader = new FileReader;
      fileReader.onload = (function(_this) {
        return function() {
          if (file.type === "image/svg+xml") {
            _this.emit("thumbnail", file, fileReader.result);
            if (callback != null) {
              callback();
            }
            return;
          }
          return _this.createThumbnailFromUrl(file, fileReader.result, callback);
        };
      })(this);
      return fileReader.readAsDataURL(file);
    };

    Dropzone.prototype.createThumbnailFromUrl = function(file, imageUrl, callback, crossOrigin) {
      var img;
      img = document.createElement("img");
      if (crossOrigin) {
        img.crossOrigin = crossOrigin;
      }
      img.onload = (function(_this) {
        return function() {
          var canvas, ctx, resizeInfo, thumbnail, _ref, _ref1, _ref2, _ref3;
          file.width = img.width;
          file.height = img.height;
          resizeInfo = _this.options.resize.call(_this, file);
          if (resizeInfo.trgWidth == null) {
            resizeInfo.trgWidth = resizeInfo.optWidth;
          }
          if (resizeInfo.trgHeight == null) {
            resizeInfo.trgHeight = resizeInfo.optHeight;
          }
          canvas = document.createElement("canvas");
          ctx = canvas.getContext("2d");
          canvas.width = resizeInfo.trgWidth;
          canvas.height = resizeInfo.trgHeight;
          drawImageIOSFix(ctx, img, (_ref = resizeInfo.srcX) != null ? _ref : 0, (_ref1 = resizeInfo.srcY) != null ? _ref1 : 0, resizeInfo.srcWidth, resizeInfo.srcHeight, (_ref2 = resizeInfo.trgX) != null ? _ref2 : 0, (_ref3 = resizeInfo.trgY) != null ? _ref3 : 0, resizeInfo.trgWidth, resizeInfo.trgHeight);
          thumbnail = canvas.toDataURL("image/png");
          _this.emit("thumbnail", file, thumbnail);
          if (callback != null) {
            return callback();
          }
        };
      })(this);
      if (callback != null) {
        img.onerror = callback;
      }
      return img.src = imageUrl;
    };

    Dropzone.prototype.processQueue = function() {
      var i, parallelUploads, processingLength, queuedFiles;
      parallelUploads = this.options.parallelUploads;
      processingLength = this.getUploadingFiles().length;
      i = processingLength;
      if (processingLength >= parallelUploads) {
        return;
      }
      queuedFiles = this.getQueuedFiles();
      if (!(queuedFiles.length > 0)) {
        return;
      }
      if (this.options.uploadMultiple) {
        return this.processFiles(queuedFiles.slice(0, parallelUploads - processingLength));
      } else {
        while (i < parallelUploads) {
          if (!queuedFiles.length) {
            return;
          }
          this.processFile(queuedFiles.shift());
          i++;
        }
      }
    };

    Dropzone.prototype.processFile = function(file) {
      return this.processFiles([file]);
    };

    Dropzone.prototype.processFiles = function(files) {
      var file, _i, _len;
      for (_i = 0, _len = files.length; _i < _len; _i++) {
        file = files[_i];
        file.processing = true;
        file.status = Dropzone.UPLOADING;
        this.emit("processing", file);
      }
      if (this.options.uploadMultiple) {
        this.emit("processingmultiple", files);
      }
      return this.uploadFiles(files);
    };

    Dropzone.prototype._getFilesWithXhr = function(xhr) {
      var file, files;
      return files = (function() {
        var _i, _len, _ref, _results;
        _ref = this.files;
        _results = [];
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          file = _ref[_i];
          if (file.xhr === xhr) {
            _results.push(file);
          }
        }
        return _results;
      }).call(this);
    };

    Dropzone.prototype.cancelUpload = function(file) {
      var groupedFile, groupedFiles, _i, _j, _len, _len1, _ref;
      if (file.status === Dropzone.UPLOADING) {
        groupedFiles = this._getFilesWithXhr(file.xhr);
        for (_i = 0, _len = groupedFiles.length; _i < _len; _i++) {
          groupedFile = groupedFiles[_i];
          groupedFile.status = Dropzone.CANCELED;
        }
        file.xhr.abort();
        for (_j = 0, _len1 = groupedFiles.length; _j < _len1; _j++) {
          groupedFile = groupedFiles[_j];
          this.emit("canceled", groupedFile);
        }
        if (this.options.uploadMultiple) {
          this.emit("canceledmultiple", groupedFiles);
        }
      } else if ((_ref = file.status) === Dropzone.ADDED || _ref === Dropzone.QUEUED) {
        file.status = Dropzone.CANCELED;
        this.emit("canceled", file);
        if (this.options.uploadMultiple) {
          this.emit("canceledmultiple", [file]);
        }
      }
      if (this.options.autoProcessQueue) {
        return this.processQueue();
      }
    };

    resolveOption = function() {
      var args, option;
      option = arguments[0], args = 2 <= arguments.length ? __slice.call(arguments, 1) : [];
      if (typeof option === 'function') {
        return option.apply(this, args);
      }
      return option;
    };

    Dropzone.prototype.uploadFile = function(file) {
      return this.uploadFiles([file]);
    };

    Dropzone.prototype.uploadFiles = function(files) {
      var file, formData, handleError, headerName, headerValue, headers, i, input, inputName, inputType, key, method, option, progressObj, response, updateProgress, url, value, xhr, _i, _j, _k, _l, _len, _len1, _len2, _len3, _m, _ref, _ref1, _ref2, _ref3, _ref4, _ref5;
      xhr = new XMLHttpRequest();
      for (_i = 0, _len = files.length; _i < _len; _i++) {
        file = files[_i];
        file.xhr = xhr;
      }
      method = resolveOption(this.options.method, files);
      url = resolveOption(this.options.url, files);
      xhr.open(method, url, true);
      xhr.withCredentials = !!this.options.withCredentials;
      response = null;
      handleError = (function(_this) {
        return function() {
          var _j, _len1, _results;
          _results = [];
          for (_j = 0, _len1 = files.length; _j < _len1; _j++) {
            file = files[_j];
            _results.push(_this._errorProcessing(files, response || _this.options.dictResponseError.replace("{{statusCode}}", xhr.status), xhr));
          }
          return _results;
        };
      })(this);
      updateProgress = (function(_this) {
        return function(e) {
          var allFilesFinished, progress, _j, _k, _l, _len1, _len2, _len3, _results;
          if (e != null) {
            progress = 100 * e.loaded / e.total;
            for (_j = 0, _len1 = files.length; _j < _len1; _j++) {
              file = files[_j];
              file.upload = {
                progress: progress,
                total: e.total,
                bytesSent: e.loaded
              };
            }
          } else {
            allFilesFinished = true;
            progress = 100;
            for (_k = 0, _len2 = files.length; _k < _len2; _k++) {
              file = files[_k];
              if (!(file.upload.progress === 100 && file.upload.bytesSent === file.upload.total)) {
                allFilesFinished = false;
              }
              file.upload.progress = progress;
              file.upload.bytesSent = file.upload.total;
            }
            if (allFilesFinished) {
              return;
            }
          }
          _results = [];
          for (_l = 0, _len3 = files.length; _l < _len3; _l++) {
            file = files[_l];
            _results.push(_this.emit("uploadprogress", file, progress, file.upload.bytesSent));
          }
          return _results;
        };
      })(this);
      xhr.onload = (function(_this) {
        return function(e) {
          var _ref;
          if (files[0].status === Dropzone.CANCELED) {
            return;
          }
          if (xhr.readyState !== 4) {
            return;
          }
          response = xhr.responseText;
          if (xhr.getResponseHeader("content-type") && ~xhr.getResponseHeader("content-type").indexOf("application/json")) {
            try {
              response = JSON.parse(response);
            } catch (_error) {
              e = _error;
              response = "Invalid JSON response from server.";
            }
          }
          updateProgress();
          if (!((200 <= (_ref = xhr.status) && _ref < 300))) {
            return handleError();
          } else {
            return _this._finished(files, response, e);
          }
        };
      })(this);
      xhr.onerror = (function(_this) {
        return function() {
          if (files[0].status === Dropzone.CANCELED) {
            return;
          }
          return handleError();
        };
      })(this);
      progressObj = (_ref = xhr.upload) != null ? _ref : xhr;
      progressObj.onprogress = updateProgress;
      headers = {
        "Accept": "application/json",
        "Cache-Control": "no-cache",
        "X-Requested-With": "XMLHttpRequest"
      };
      if (this.options.headers) {
        extend(headers, this.options.headers);
      }
      for (headerName in headers) {
        headerValue = headers[headerName];
        if (headerValue) {
          xhr.setRequestHeader(headerName, headerValue);
        }
      }
      formData = new FormData();
      if (this.options.params) {
        _ref1 = this.options.params;
        for (key in _ref1) {
          value = _ref1[key];
          formData.append(key, value);
        }
      }
      for (_j = 0, _len1 = files.length; _j < _len1; _j++) {
        file = files[_j];
        this.emit("sending", file, xhr, formData);
      }
      if (this.options.uploadMultiple) {
        this.emit("sendingmultiple", files, xhr, formData);
      }
      if (this.element.tagName === "FORM") {
        _ref2 = this.element.querySelectorAll("input, textarea, select, button");
        for (_k = 0, _len2 = _ref2.length; _k < _len2; _k++) {
          input = _ref2[_k];
          inputName = input.getAttribute("name");
          inputType = input.getAttribute("type");
          if (input.tagName === "SELECT" && input.hasAttribute("multiple")) {
            _ref3 = input.options;
            for (_l = 0, _len3 = _ref3.length; _l < _len3; _l++) {
              option = _ref3[_l];
              if (option.selected) {
                formData.append(inputName, option.value);
              }
            }
          } else if (!inputType || ((_ref4 = inputType.toLowerCase()) !== "checkbox" && _ref4 !== "radio") || input.checked) {
            formData.append(inputName, input.value);
          }
        }
      }
      for (i = _m = 0, _ref5 = files.length - 1; 0 <= _ref5 ? _m <= _ref5 : _m >= _ref5; i = 0 <= _ref5 ? ++_m : --_m) {
        formData.append(this._getParamName(i), files[i], this._renameFilename(files[i].name));
      }
      return this.submitRequest(xhr, formData, files);
    };

    Dropzone.prototype.submitRequest = function(xhr, formData, files) {
      return xhr.send(formData);
    };

    Dropzone.prototype._finished = function(files, responseText, e) {
      var file, _i, _len;
      for (_i = 0, _len = files.length; _i < _len; _i++) {
        file = files[_i];
        file.status = Dropzone.SUCCESS;
        this.emit("success", file, responseText, e);
        this.emit("complete", file);
      }
      if (this.options.uploadMultiple) {
        this.emit("successmultiple", files, responseText, e);
        this.emit("completemultiple", files);
      }
      if (this.options.autoProcessQueue) {
        return this.processQueue();
      }
    };

    Dropzone.prototype._errorProcessing = function(files, message, xhr) {
      var file, _i, _len;
      for (_i = 0, _len = files.length; _i < _len; _i++) {
        file = files[_i];
        file.status = Dropzone.ERROR;
        this.emit("error", file, message, xhr);
        this.emit("complete", file);
      }
      if (this.options.uploadMultiple) {
        this.emit("errormultiple", files, message, xhr);
        this.emit("completemultiple", files);
      }
      if (this.options.autoProcessQueue) {
        return this.processQueue();
      }
    };

    return Dropzone;

  })(Emitter);

  Dropzone.version = "4.3.0";

  Dropzone.options = {};

  Dropzone.optionsForElement = function(element) {
    if (element.getAttribute("id")) {
      return Dropzone.options[camelize(element.getAttribute("id"))];
    } else {
      return void 0;
    }
  };

  Dropzone.instances = [];

  Dropzone.forElement = function(element) {
    if (typeof element === "string") {
      element = document.querySelector(element);
    }
    if ((element != null ? element.dropzone : void 0) == null) {
      throw new Error("No Dropzone found for given element. This is probably because you're trying to access it before Dropzone had the time to initialize. Use the `init` option to setup any additional observers on your Dropzone.");
    }
    return element.dropzone;
  };

  Dropzone.autoDiscover = true;

  Dropzone.discover = function() {
    var checkElements, dropzone, dropzones, _i, _len, _results;
    if (document.querySelectorAll) {
      dropzones = document.querySelectorAll(".dropzone");
    } else {
      dropzones = [];
      checkElements = function(elements) {
        var el, _i, _len, _results;
        _results = [];
        for (_i = 0, _len = elements.length; _i < _len; _i++) {
          el = elements[_i];
          if (/(^| )dropzone($| )/.test(el.className)) {
            _results.push(dropzones.push(el));
          } else {
            _results.push(void 0);
          }
        }
        return _results;
      };
      checkElements(document.getElementsByTagName("div"));
      checkElements(document.getElementsByTagName("form"));
    }
    _results = [];
    for (_i = 0, _len = dropzones.length; _i < _len; _i++) {
      dropzone = dropzones[_i];
      if (Dropzone.optionsForElement(dropzone) !== false) {
        _results.push(new Dropzone(dropzone));
      } else {
        _results.push(void 0);
      }
    }
    return _results;
  };

  Dropzone.blacklistedBrowsers = [/opera.*Macintosh.*version\/12/i];

  Dropzone.isBrowserSupported = function() {
    var capableBrowser, regex, _i, _len, _ref;
    capableBrowser = true;
    if (window.File && window.FileReader && window.FileList && window.Blob && window.FormData && document.querySelector) {
      if (!("classList" in document.createElement("a"))) {
        capableBrowser = false;
      } else {
        _ref = Dropzone.blacklistedBrowsers;
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          regex = _ref[_i];
          if (regex.test(navigator.userAgent)) {
            capableBrowser = false;
            continue;
          }
        }
      }
    } else {
      capableBrowser = false;
    }
    return capableBrowser;
  };

  without = function(list, rejectedItem) {
    var item, _i, _len, _results;
    _results = [];
    for (_i = 0, _len = list.length; _i < _len; _i++) {
      item = list[_i];
      if (item !== rejectedItem) {
        _results.push(item);
      }
    }
    return _results;
  };

  camelize = function(str) {
    return str.replace(/[\-_](\w)/g, function(match) {
      return match.charAt(1).toUpperCase();
    });
  };

  Dropzone.createElement = function(string) {
    var div;
    div = document.createElement("div");
    div.innerHTML = string;
    return div.childNodes[0];
  };

  Dropzone.elementInside = function(element, container) {
    if (element === container) {
      return true;
    }
    while (element = element.parentNode) {
      if (element === container) {
        return true;
      }
    }
    return false;
  };

  Dropzone.getElement = function(el, name) {
    var element;
    if (typeof el === "string") {
      element = document.querySelector(el);
    } else if (el.nodeType != null) {
      element = el;
    }
    if (element == null) {
      throw new Error("Invalid `" + name + "` option provided. Please provide a CSS selector or a plain HTML element.");
    }
    return element;
  };

  Dropzone.getElements = function(els, name) {
    var e, el, elements, _i, _j, _len, _len1, _ref;
    if (els instanceof Array) {
      elements = [];
      try {
        for (_i = 0, _len = els.length; _i < _len; _i++) {
          el = els[_i];
          elements.push(this.getElement(el, name));
        }
      } catch (_error) {
        e = _error;
        elements = null;
      }
    } else if (typeof els === "string") {
      elements = [];
      _ref = document.querySelectorAll(els);
      for (_j = 0, _len1 = _ref.length; _j < _len1; _j++) {
        el = _ref[_j];
        elements.push(el);
      }
    } else if (els.nodeType != null) {
      elements = [els];
    }
    if (!((elements != null) && elements.length)) {
      throw new Error("Invalid `" + name + "` option provided. Please provide a CSS selector, a plain HTML element or a list of those.");
    }
    return elements;
  };

  Dropzone.confirm = function(question, accepted, rejected) {
    if (window.confirm(question)) {
      return accepted();
    } else if (rejected != null) {
      return rejected();
    }
  };

  Dropzone.isValidFile = function(file, acceptedFiles) {
    var baseMimeType, mimeType, validType, _i, _len;
    if (!acceptedFiles) {
      return true;
    }
    acceptedFiles = acceptedFiles.split(",");
    mimeType = file.type;
    baseMimeType = mimeType.replace(/\/.*$/, "");
    for (_i = 0, _len = acceptedFiles.length; _i < _len; _i++) {
      validType = acceptedFiles[_i];
      validType = validType.trim();
      if (validType.charAt(0) === ".") {
        if (file.name.toLowerCase().indexOf(validType.toLowerCase(), file.name.length - validType.length) !== -1) {
          return true;
        }
      } else if (/\/\*$/.test(validType)) {
        if (baseMimeType === validType.replace(/\/.*$/, "")) {
          return true;
        }
      } else {
        if (mimeType === validType) {
          return true;
        }
      }
    }
    return false;
  };

  if (typeof jQuery !== "undefined" && jQuery !== null) {
    jQuery.fn.dropzone = function(options) {
      return this.each(function() {
        return new Dropzone(this, options);
      });
    };
  }

  if (typeof module !== "undefined" && module !== null) {
    module.exports = Dropzone;
  } else {
    window.Dropzone = Dropzone;
  }

  Dropzone.ADDED = "added";

  Dropzone.QUEUED = "queued";

  Dropzone.ACCEPTED = Dropzone.QUEUED;

  Dropzone.UPLOADING = "uploading";

  Dropzone.PROCESSING = Dropzone.UPLOADING;

  Dropzone.CANCELED = "canceled";

  Dropzone.ERROR = "error";

  Dropzone.SUCCESS = "success";


  /*
  
  Bugfix for iOS 6 and 7
  Source: http://stackoverflow.com/questions/11929099/html5-canvas-drawimage-ratio-bug-ios
  based on the work of https://github.com/stomita/ios-imagefile-megapixel
   */

  detectVerticalSquash = function(img) {
    var alpha, canvas, ctx, data, ey, ih, iw, py, ratio, sy;
    iw = img.naturalWidth;
    ih = img.naturalHeight;
    canvas = document.createElement("canvas");
    canvas.width = 1;
    canvas.height = ih;
    ctx = canvas.getContext("2d");
    ctx.drawImage(img, 0, 0);
    data = ctx.getImageData(0, 0, 1, ih).data;
    sy = 0;
    ey = ih;
    py = ih;
    while (py > sy) {
      alpha = data[(py - 1) * 4 + 3];
      if (alpha === 0) {
        ey = py;
      } else {
        sy = py;
      }
      py = (ey + sy) >> 1;
    }
    ratio = py / ih;
    if (ratio === 0) {
      return 1;
    } else {
      return ratio;
    }
  };

  drawImageIOSFix = function(ctx, img, sx, sy, sw, sh, dx, dy, dw, dh) {
    var vertSquashRatio;
    vertSquashRatio = detectVerticalSquash(img);
    return ctx.drawImage(img, sx, sy, sw, sh, dx, dy, dw, dh / vertSquashRatio);
  };


  /*
   * contentloaded.js
   *
   * Author: Diego Perini (diego.perini at gmail.com)
   * Summary: cross-browser wrapper for DOMContentLoaded
   * Updated: 20101020
   * License: MIT
   * Version: 1.2
   *
   * URL:
   * http://javascript.nwbox.com/ContentLoaded/
   * http://javascript.nwbox.com/ContentLoaded/MIT-LICENSE
   */

  contentLoaded = function(win, fn) {
    var add, doc, done, init, poll, pre, rem, root, top;
    done = false;
    top = true;
    doc = win.document;
    root = doc.documentElement;
    add = (doc.addEventListener ? "addEventListener" : "attachEvent");
    rem = (doc.addEventListener ? "removeEventListener" : "detachEvent");
    pre = (doc.addEventListener ? "" : "on");
    init = function(e) {
      if (e.type === "readystatechange" && doc.readyState !== "complete") {
        return;
      }
      (e.type === "load" ? win : doc)[rem](pre + e.type, init, false);
      if (!done && (done = true)) {
        return fn.call(win, e.type || e);
      }
    };
    poll = function() {
      var e;
      try {
        root.doScroll("left");
      } catch (_error) {
        e = _error;
        setTimeout(poll, 50);
        return;
      }
      return init("poll");
    };
    if (doc.readyState !== "complete") {
      if (doc.createEventObject && root.doScroll) {
        try {
          top = !win.frameElement;
        } catch (_error) {}
        if (top) {
          poll();
        }
      }
      doc[add](pre + "DOMContentLoaded", init, false);
      doc[add](pre + "readystatechange", init, false);
      return win[add](pre + "load", init, false);
    }
  };

  Dropzone._autoDiscoverFunction = function() {
    if (Dropzone.autoDiscover) {
      return Dropzone.discover();
    }
  };

  contentLoaded(window, Dropzone._autoDiscoverFunction);

}).call(this);

angular.module("dashboardTemplates", []).run(["$templateCache", function($templateCache) {$templateCache.put("admin_itr_view.html","\n<div class=\"card-block post_property\">\n    <div class=\"admin-panel info-admin-panel\">\n\n        <div class=\"dashboard_title\" ng-hide=\"message\">\n            <h2>Remesh (ITR2)</h2>\n            <a href=\"#\" ui-sref=\"itr\" class=\"pull-right doc_close\"> <i class=\"fa fa-close\"></i> Close</a>\n        </div>\n\n\n\n        <div class=\"card en_doc mt-1\">\n            <div class=\"card-header\">\n                Profile\n            </div>\n            <div class=\"card-block admin_view\">\n                <div class=\"row\">\n                    <div class=\"col-md-4\">\n                        <label>Name</label>\n                        <h4>Rajesh Kumar</h4>\n                         </div>\n                    <div class=\"col-md-4\">\n                      <label>Email</label>\n                        <h4>rajesh@gmail.com</h4>\n                    </div>\n                    <div class=\"col-md-4\">\n                      <label>Mobile</label>\n                        <h4>9966887788 </h4>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-md-4\">\n                        <label>IFSC Code</label>\n                        <h4>Rajesh Kumar</h4>\n                         </div>\n                    <div class=\"col-md-4\">\n                      <label>Residential Status</label>\n                        <h4>rajesh@gmail.com</h4>\n                    </div>\n                    <div class=\"col-md-4\">\n                      <label>Employer Category</label>\n                        <h4>9966887788 </h4>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-md-12\">\n                        <label>Residence Address </label>\n                        <h4>B-816, Advant Navis Business Park, Sector 142, Noida UP - 201205</h4>\n                         </div>\n                   \n                </div>\n                \n                \n                <h3>Attach Documents</h3>\n                <hr>\n                <div class=\"down_img_sec\" ng-repeat=\"row in itr.form_16 track by $index\">\n                <div class=\"doc_img\">\n                    <img data-ng-src=\"<%row|imageUrl%>\" alt=\"img\">\n                    <a class=\"down_img\" href=\"<%row|imageUrl%>\" target=\"_self\" download><i class=\"fa fa-download\"></i></a>\n                </div>\n                    <p>Pan Card</p>\n            </div>\n            </div>\n        </div>\n\n\n         \n        \n        \n        \n        \n        \n        \n       \n\n                        <div class=\"card en_doc mt-2\">\n                            <div class=\"card-block\">\n                                <div class=\"row\">\n                                    <div class=\"col-md-9\">\n                                        <h6>1. Income Under the Head Salary</h6>\n                                        <p><strong>FORM 16</strong> - Form 16 is provided by employer containing the computation of income and tax deductions</p>\n                                    </div>\n                                    <div class=\"col-md-3\">\n                                        <input type=\"text\" name=\"form_16_amnt\" data-ng-model=\"itr.form_16_amnt\"\n                                               placeholder=\"Amount\">\n                                    </div>\n                                    \n                                </div>\n                                <div class=\"doc_img\" ng-repeat=\"row in itr.form_16 track by $index\">\n                                    <img data-ng-src=\"<%row|imageUrl%>\" alt=\"img\">\n                                   <a class=\"down_img\" data-ng-click=\"remove(row, \'form_16\')\"><i class=\"fa fa-download\"></i></a>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class=\"card en_doc mt-2\">\n                            <div class=\"card-block\">\n                                <div class=\"row\">\n                                    <div class=\"col-md-9\">\n                                        <h6>2. Income from One House Property</h6>\n                                        <p>Loan & Interest Certificate <br> (House property income pertains to rental income)</p>\n                                    </div>\n                                    <div class=\"col-md-3\">\n                                        <input type=\"text\" name=\"income_loss\" data-ng-model=\"itr.house_income\" placeholder=\"Amount\">\n                                    </div>\n                                    \n                                </div>\n                                <div class=\"doc_img\" ng-repeat=\"row in itr.loan_certificate track by $index\">\n                                    <img data-ng-src=\"<%row|imageUrl%>\" alt=\"img\">\n                                     <a class=\"down_img\" data-ng-click=\"remove(row, \'form_16\')\"><i class=\"fa fa-download\"></i></a>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class=\"card en_doc mt-2\">\n                            <div class=\"card-block\">\n                                <div class=\"row\">\n                                    <div class=\"col-md-9\">\n                                        <h6>3. Income from Other Sources</h6>\n                                        <p>Interest Certificate</p>\n                                    </div>\n                                    <div class=\"col-md-3\">\n                                        <input type=\"text\" name=\"interest_income\" data-ng-model=\"itr.interest_income\"\n                                               placeholder=\"Amount\">\n                                    </div>\n                                   \n                                </div>\n                                <div class=\"doc_img\" ng-repeat=\"row in itr.interest_certificate track by $index\">\n                                    <img data-ng-src=\"<%row|imageUrl%>\" alt=\"img\">\n                                     <a class=\"down_img\" data-ng-click=\"remove(row, \'form_16\')\"><i class=\"fa fa-download\"></i></a>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class=\"card en_doc mt-2\">\n                            <div class=\"card-block\">\n                                <h6>4. Details of Deduction to be Claimed Along with Proofs (If Any)</h6>\n                                <br>\n                                <div class=\"row bdr-btm\">\n                                    <div class=\"col-md-12\">\n                                        <h5>Deduction to be Claimed u/s 80C</h5>\n                                        <p>Deduction in respect of life insurance premia, installment paid for the purpose of purchase or construction of a residential house property, contribution to provident fund, contribution to public provident fund, contribution to fixed deposit with a scheduled bank for 5 years or more, subscription to certain equity shares or debentures, etc</p>\n\n                                    </div>\n                                    \n                                    <div class=\"col-md-12\">\n                                        <div class=\"doc_img\" ng-repeat=\"row in itr.claim_80C track by $index\">\n                                            <img data-ng-src=\"<%row|imageUrl%>\" alt=\"img\">\n                                             <a class=\"down_img\" data-ng-click=\"remove(row, \'form_16\')\"><i class=\"fa fa-download\"></i></a>\n                                        </div>\n                                    </div>\n\n                                </div>\n\n                                <div class=\"row bdr-btm\">\n                                    <div class=\"col-md-12\">\n                                        <h5>Deduction to be Claimed u/s 80D</h5>\n                                        <p>Deduction in respect of health insurance premia</p>\n                                    </div>\n                                    \n                                    <div class=\"col-md-12\">\n                                        <div class=\"doc_img\" ng-repeat=\"row in itr.claim_80D track by $index\">\n                                            <img data-ng-src=\"<%row|imageUrl%>\" alt=\"img\">\n                                             <a class=\"down_img\" data-ng-click=\"remove(row, \'form_16\')\"><i class=\"fa fa-download\"></i></a>\n                                        </div>\n                                    </div>\n\n                                </div>\n\n                                <div class=\"row bdr-btm\">\n                                    <div class=\"col-md-12\">\n                                        <h5>Deduction to be Claimed u/s 80G</h5>\n                                        <p>Deduction in respect of donations to certain funds, charitable institutions, etc</p>\n                                    </div>\n                                    \n                                    <div class=\"col-md-12\">\n                                        <div class=\"doc_img\" ng-repeat=\"row in itr.claim_80G track by $index\">\n                                            <img data-ng-src=\"<%row|imageUrl%>\" alt=\"img\">\n                                             <a class=\"down_img\" data-ng-click=\"remove(row, \'form_16\')\"><i class=\"fa fa-download\"></i></a>\n                                        </div>\n                                    </div>\n                                </div>\n\n                                <div class=\"row bdr-btm\">\n                                    <div class=\"col-md-12\">\n                                        <h5>Other Deduction</h5>\n                                        <p>Deduction in respect of interest on deposits in savings account</p>\n                                    \n                                        <div class=\"doc_img\" ng-repeat=\"row in itr.other_deduction track by $index\">\n                                            <img data-ng-src=\"<%row|imageUrl%>\" alt=\"img\">\n                                            <a class=\"down_img\" data-ng-click=\"remove(row, \'form_16\')\"><i class=\"fa fa-download\"></i></a>\n                                        </div>\n                                    </div>\n                                </div>    \n\n\n                                <div class=\"row bdr-btm\">  \n                                    <div class=\"col-md-12\">\n                                        <h5>Paid Tax Challan (If Any)</h5>\n                                     \n                                        <div class=\"doc_img\" ng-repeat=\"row in itr.tax_challan track by $index\">\n                                            <img data-ng-src=\"<%row|imageUrl%>\" alt=\"img\">\n                                             <a class=\"down_img\" data-ng-click=\"remove(row, \'form_16\')\"><i class=\"fa fa-download\"></i></a>\n                                        </div>\n                                    </div>\n                                </div>     \n\n                                <div class=\"row bdr-btm\">   \n                                    <div class=\"col-md-12\">\n                                        <h5>Form 26AS</h5>\n                                        <p>Form 26AS outlines tax deducted form your income by the persons responsible to pay the income. Same can be downloaded form the website <a href=\"www.incometaxindiaefiling.gov.in\" target=\"_blank\">\'www.incometaxindiaefiling.gov.in\'</a></p>\n                                     \n                                        <div class=\"doc_img\" ng-repeat=\"row in itr.form_26A track by $index\">\n                                            <img data-ng-src=\"<%row|imageUrl%>\" alt=\"img\">\n                                             <a class=\"down_img\" data-ng-click=\"remove(row, \'form_16\')\"><i class=\"fa fa-download\"></i></a>\n                                        </div>\n                                    </div>\n                                </div>   \n\n                            </div>\n                        </div>\n\n\n\n\n\n\n    </div>\n</div>");
$templateCache.put("change-password.html","<div class=\"card-block post_property\">\n    <div class=\"admin-panel info-admin-panel\">\n        <div class=\"dashboard_title\">\n            <h2>Password</h2>\n            <!--<p>Preliminary Data for Filing ITR</p>-->\n        </div>\n\n\n\n        <form name=\"passwordForm\" novalidate data-ng-submit=\"changePassword()\">\n            <div class=\"row\">\n                <div class=\"col-md-8\">\n                    <!--<md-input-container class=\"md-block\">-->\n                    <!--<label>Current Password</label>-->\n                    <!--<input required name=\"password\" data-ng-model=\"user.password\" id=\"password\" type=\"password\">-->\n                    <!--<div class=\"tooltip-error\">-->\n                    <!--<div ng-messages=\"passwordForm.password.$error\">-->\n                    <!--<span ng-message=\"required\">-->\n                    <!--<i class=\"fa fa-info-circle\"></i>-->\n                    <!--<md-tooltip md-direction=\"left\">-->\n                    <!--Enter your current password-->\n                    <!--</md-tooltip>-->\n                    <!--</span>-->\n                    <!--</div>-->\n                    <!--</div>-->\n                    <!--</md-input-container>-->\n                    <md-input-container class=\"md-block\">\n                        <label>New Password</label>\n                        <input required name=\"new_password\" data-ng-model=\"user.new_password\" id=\"new_password\"\n                               data-ng-minlength=\"6\" data-ng-maxlength=\"20\" type=\"password\">\n                        <div class=\"tooltip-error\">\n                            <div ng-messages=\"passwordForm.new_password.$error\">\n                                <span ng-message=\"required\">\n                                    <i class=\"fa fa-info-circle\"></i>\n                                    <md-tooltip md-direction=\"left\">\n                                        Enter your new password\n                                    </md-tooltip>\n                                </span>\n                                <span ng-message=\"minlength\">\n                                           <i class=\"fa fa-info-circle\"></i>\n                                               <md-tooltip md-direction=\"left\" md-z-index=\"99991\">\n                                                     Enter minimum 6 character password\n                                               </md-tooltip>\n                                        </span>\n                                <span ng-message=\"maxlength\">\n                                           <i class=\"fa fa-info-circle\"></i>\n                                               <md-tooltip md-direction=\"left\" md-z-index=\"99991\">\n                                                     Password, Maximum 20 Characters\n                                               </md-tooltip>\n                                        </span>\n                            </div>\n                        </div>\n                    </md-input-container>\n                    <md-input-container class=\"md-block\">\n                        <label>Confirm Password</label>\n                        <input required name=\"confirm_password\" data-ng-model=\"user.confirm_password\"\n                               id=\"confirm_password\" type=\"password\" compare-to=\"user.new_password\">\n                        <div class=\"tooltip-error\">\n                            <div ng-messages=\"passwordForm.confirm_password.$error\">\n                                <span ng-message=\"required\">\n                                    <i class=\"fa fa-info-circle\"></i>\n                                    <md-tooltip md-direction=\"left\">\n                                        Enter confirm password\n                                    </md-tooltip>\n                                </span>\n                                <span ng-message=\"compareTo\">\n                                    <i class=\"fa fa-info-circle\"></i>\n                                    <md-tooltip md-direction=\"left\">\n                                        Password not matched\n                                    </md-tooltip>\n                                </span>\n                            </div>\n                        </div>\n                    </md-input-container>\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col-md-2\">\n                    <button type=\"submit\" data-ng-disabled=\"activated\"\n                            class=\"btn btn-primary waves-input-wrapper waves-effec waves-lightt\">\n                        Update\n                    </button>\n                    <md-progress-linear data-ng-if=\"activated\" class=\"md-warn\" md-mode=\"buffer\"\n                                        value=\"<% determinateValue %>\"\n                                        md-buffer-value=\"<% determinateValue2 %>\"\n                                        data-ng-disable=\"activated\"></md-progress-linear>\n                </div>\n            </div>\n            <!-- /.Fourth row -->\n        </form>\n\n    </div>\n</div>");
$templateCache.put("corporate_itr.html","<div class=\"card-block post_property\">\n    <div class=\"admin-panel info-admin-panel\">\n        <div class=\"dashboard_title\" ng-hide=\"message\">\n            <h2>FY : 2016-17</h2>\n            <a href=\"#\" ui-sref=\"corporate-itr\" class=\"pull-right doc_close\"> <i class=\"fa fa-close\"></i> Close</a>\n        </div>\n        <div class=\"post-success\" ng-show=\"message\">\n            <div>\n                <i class=\"fa fa-check fa-4x\"></i>\n            </div>\n            <h2>Thank you</h2>\n            <p> Your ITR has been saved successfully. <br>\n                You can check and edit your ITR in ITR section.</p>\n            <a href=\"#\" ui-sref=\"corporate-itr\" class=\"btn btn-info ok\"> OK </a>\n        </div>\n        <md-tabs md-dynamic-height=\"true\" md-no-ink-bar=\"true\" md-border-bottom=\"true\" md-center-tabs=\"true\"\n                 md-selected=\"tabs.selectedIndex\" md-no-ink=\"true\" ng-hide=\"message\">\n            <md-tab>\n                <md-tab-label>Company Details</md-tab-label>\n                <md-tab-body>\n                    <form name=\"DetailsForm\" novalidate data-ng-submit=\"corporateDetails()\" enctype=\"multipart/form-data\">\n                        <div class=\"row\">\n                            <div class=\"col-md-4\">\n                                <md-input-container class=\"md-block\">\n                                    <label>Company Name</label>\n                                    <input type=\"text\" name=\"company_name\" data-ng-model=\"company.name\" required>\n                                    <div class=\"tooltip-error\">\n                                        <div ng-messages=\"DetailsForm.company_name.$error\">\n                                            <span ng-message=\"required\">\n                                                <i class=\"fa fa-info-circle\"></i>\n                                                <md-tooltip md-direction=\"left\">\n                                                    Please Enter Your Company Name\n                                                </md-tooltip>\n                                            </span>\n                                        </div>\n                                    </div>\n                                </md-input-container>\n                            </div>\n                            <div class=\"col-md-4\">\n                                <md-input-container class=\"md-block\">\n                                    <label>Contact Number</label>\n                                    <input type=\"text\" name=\"contact\" data-ng-model=\"company.contact\" required>\n                                    <div class=\"tooltip-error\">\n                                        <div ng-messages=\"DetailsForm.contact.$error\">\n                                            <span ng-message=\"required\">\n                                                <i class=\"fa fa-info-circle\"></i>\n                                                <md-tooltip md-direction=\"left\">\n                                                    Please Enter Your Contact Number\n                                                </md-tooltip>\n                                            </span>\n                                        </div>\n                                    </div>\n                                </md-input-container>\n                            </div>\n                            <div class=\"col-md-4\">\n                                <md-input-container class=\"md-block\">\n                                    <label>Bank Name</label>\n                                    <input type=\"text\" name=\"bank_name\" data-ng-model=\"company.bank_name\">\n                                </md-input-container>\n                            </div>\n                        </div>\n                        <div class=\"row\">\n                            <div class=\"col-md-4\">\n                                <md-input-container class=\"md-block\">\n                                    <label>Bank IFSC</label>\n                                    <input type=\"text\" name=\"ifsc\" data-ng-model=\"company.ifsc_code\">\n                                </md-input-container>\n                            </div>\n                        </div>\n                        <div class=\"card en_doc mt-2\">\n                            <div class=\"card-block\">\n                                <div class=\"row\">\n                                    <div class=\"col-md-4\">\n                                        <fieldset class=\"form-group\">\n                                            <span>Upload Pan Card</span>\n                                        </fieldset>\n                                    </div>\n                                    <div class=\"col-md-4\">\n                                        <input type=\"text\" name=\"pan_no\" data-ng-model=\"company.pan_no\"\n                                               placeholder=\"Pan Number\">\n                                    </div>\n                                    <div class=\"col-md-4 text-center\">\n                                        <label class=\"dp-upload\">\n                                            <input type=\"file\" name=\"pan_image\" ng-file-model=\"company.pan_image\" multiple>\n                                            <i class=\"fa fa-upload\"></i> <span>Upload doc</span>\n                                        </label>\n                                    </div>\n                                </div>\n                                <div class=\"doc_img\" data-ng-repeat=\"row in company.pan_image track by $index\">\n                                    <img data-ng-src=\"<%row|corpImageUrl%>\" alt=\"img\">\n                                    <a class=\"down_img\" href=\"<%row|downCorpImage%>\" target=\"_self\" download><i class=\"fa fa-download\"></i></a>\n                                    <del-image data-ng-click=\"remove(row,\'pan_image\')\"></del-image>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"card en_doc mt-2\">\n                            <div class=\"card-block\">\n                                <div class=\"row\">\n                                    <div class=\"col-md-4\">\n                                        <fieldset class=\"form-group\">\n                                            <span>Upload Adhaar Card</span>\n                                        </fieldset>\n                                    </div>\n                                    <div class=\"col-md-4\">\n                                        <input type=\"text\" name=\"adhar_no\" data-ng-model=\"company.adhar_no\"\n                                               placeholder=\"Adhar Number\">\n                                    </div>\n                                    <div class=\"col-md-4 text-center\">\n                                        <label class=\"dp-upload\">\n                                            <input type=\"file\" name=\"adhar_image\" ng-file-model=\"company.adhar_image\"\n                                                   multiple>\n                                            <i class=\"fa fa-upload\"></i> <span>Upload doc</span>\n                                        </label>\n                                    </div>\n                                </div>\n                                <div class=\"doc_img\" data-ng-repeat=\"row in company.adhar_image track by $index\">\n                                    <img data-ng-src=\"<%row|corpImageUrl%>\" alt=\"img\">\n                                    <a class=\"down_img\" href=\"<%row|downCorpImage%>\" target=\"_self\" download><i class=\"fa fa-download\"></i></a>\n                                    <del-image data-ng-click=\"remove(row,\'adhar_image\')\"></del-image>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"card-block bdr-btm\">\n                            <div class=\"row\">\n                                <div class=\"col-md-8\">\n                                    <fieldset class=\"form-group\">\n                                        <span>Bank Statement</span>\n                                    </fieldset>\n                                </div>\n\n                                <div class=\"col-md-4 text-center\">\n                                    <label class=\"dp-upload\">\n                                        <input type=\"file\" name=\"bank_statement\" ng-file-model=\"company.bank_statement\" multiple>\n                                        <i class=\"fa fa-upload\"></i> <span>Upload doc</span>\n                                    </label>\n                                </div>\n                            </div>\n                            <div class=\"doc_img\" data-ng-repeat=\"row in company.bank_statement track by $index\">\n                                <img data-ng-src=\"<%row|corpImageUrl%>\" alt=\"img\">\n                                <a class=\"down_img\" href=\"<%row|downCorpImage%>\" target=\"_self\" download><i class=\"fa fa-download\"></i></a>\n                                <del-image data-ng-click=\"remove(row,\'bank_statement\')\"></del-image>\n                            </div>\n                        </div>\n                        <md-input-container class=\"md-block\">\n                            <label>Company Address</label>\n                            <textarea data-ng-model=\"company.address\" name=\"address\" rows=\"3\"\n                                      md-select-on-focus></textarea>\n                        </md-input-container>\n                        <div class=\"modal-footer border-top-0 text-center\">\n                            <md-progress-linear data-ng-if=\"activated\" class=\"md-warn\" md-mode=\"buffer\"\n                                                value=\"<% determinateValue %>\"\n                                                md-buffer-value=\"<% determinateValue2 %>\"\n                                                data-ng-disable=\"activated\"></md-progress-linear>\n                            <input data-ng-model=\"company.id\" type=\"hidden\" name=\"id\"/>\n                            <save-btn></save-btn>\n                            <next-btn></next-btn>\n                        </div>\n                    </form>\n                </md-tab-body>\n            </md-tab>\n            <md-tab>\n                <md-tab-label>Step 1 <br> <span class=\"txt\">Fill ITR Details</span></md-tab-label>\n                <md-tab-body>\n                    <form name=\"taxForm\" novalidate data-ng-submit=\"submitITR5()\" enctype=\"multipart/form-data\">\n                        <hr>\n                        <div class=\"row\">\n                            <div class=\"col-md-4\">\n                                <md-input-container class=\"md-block\">\n                                    <label>Select ITR</label>\n                                    <md-select name=\"ITR\" data-ng-model=\"company.ITR\" disabled>\n                                        <md-option ng-repeat=\"t in ITR track by $index\"\n                                                   ng-value=\"<%t.value%>\">\n                                            <%t.text%>\n                                        </md-option>\n                                    </md-select>\n                                    <div class=\"tooltip-error\">\n                                        <div ng-messages=\"taxForm.ITR.$error\">\n                                            <span ng-message=\"required\">\n                                                <i class=\"fa fa-info-circle\"></i>\n                                                <md-tooltip md-direction=\"left\">\n                                                    Please Select ITR\n                                                </md-tooltip>\n                                            </span>\n                                        </div>\n                                    </div>\n                                </md-input-container>\n                            </div>\n                        </div>\n                        <div class=\"card en_doc mt-2\">\n                            <div class=\"card-block\">\n                                <div class=\"row bdr-btm\">\n                                    <div class=\"col-md-8\">\n                                        <h5>Audit Report</h5>\n                                    </div>\n                                    <upload-btn name=\"company.audit_report_img\"></upload-btn>\n                                    <div class=\"col-md-12\">\n                                        <div class=\"doc_img\" ng-repeat=\"row in company.audit_report_img track by $index\">\n                                            <img data-ng-src=\"<%row|corpImageUrl%>\" alt=\"img\">\n                                            <a class=\"down_img\" href=\"<%row|downCorpImage%>\" target=\"_self\" download><i\n                                                    class=\"fa fa-download\"></i></a>\n                                            <del-image data-ng-click=\"remove(row,\'audit_report_img\')\"></del-image>\n                                        </div>\n                                    </div>\n                                </div>\n\n                                <div class=\"row bdr-btm\">\n                                    <div class=\"col-md-8\">\n                                        <h5>Previous Year ITR</h5>\n                                    </div>\n                                    <upload-btn name=\"company.previous_return_image\"></upload-btn>\n                                    <div class=\"col-md-12\">\n                                        <div class=\"doc_img\" ng-repeat=\"row in company.previous_return_image track by $index\">\n                                            <img data-ng-src=\"<%row|corpImageUrl%>\" alt=\"img\">\n                                            <a class=\"down_img\" href=\"<%row|downCorpImage%>\" target=\"_self\" download><i\n                                                    class=\"fa fa-download\"></i></a>\n                                            <del-image data-ng-click=\"remove(row,\'previous_return_image\')\"></del-image>\n                                        </div>\n                                    </div>\n                                </div>\n\n                                <div class=\"row bdr-btm\">\n                                    <div class=\"col-md-8\">\n                                        <h5>Form 26AS</h5>\n                                        <p>Form 26AS outlines tax deducted form your income by the persons responsible\n                                            to pay the income. Same can be downloaded form the website <a\n                                                    href=\"www.incometaxindiaefiling.gov.in\" target=\"_blank\">\'www.incometaxindiaefiling.gov.in\'</a>\n                                        </p>\n                                    </div>\n                                    <upload-btn name=\"company.form_26A\"></upload-btn>\n                                    <div class=\"col-md-12\">\n                                        <div class=\"doc_img\" ng-repeat=\"row in company.form_26A track by $index\">\n                                            <img data-ng-src=\"<%row|corpImageUrl%>\" alt=\"img\">\n                                            <a class=\"down_img\" href=\"<%row|downCorpImage%>\" target=\"_self\" download><i\n                                                    class=\"fa fa-download\"></i></a>\n                                            <del-image data-ng-click=\"remove(row,\'form_26A\')\"></del-image>\n                                        </div>\n                                    </div>\n                                </div>\n\n                                <div class=\"row bdr-btm\">\n                                    <div class=\"col-md-8\">\n                                        <h5>Audited Financial Documents</h5>\n                                    </div>\n                                    <upload-btn name=\"company.financial_documents\"></upload-btn>\n                                    <div class=\"col-md-12\">\n                                        <div class=\"doc_img\" ng-repeat=\"row in company.financial_documents track by $index\">\n                                            <img data-ng-src=\"<%row|corpImageUrl%>\" alt=\"img\">\n                                            <a class=\"down_img\" href=\"<%row|downCorpImage%>\" target=\"_self\" download><i\n                                                    class=\"fa fa-download\"></i></a>\n                                            <del-image data-ng-click=\"remove(row,\'financial_documents\')\"></del-image>\n                                        </div>\n                                    </div>\n                                </div>\n\n                                <div class=\"row bdr-btm\">\n                                    <div class=\"col-md-8\">\n                                        <h5>Draft Computation of Income</h5>\n                                    </div>\n                                    <upload-btn name=\"company.income_computation\"></upload-btn>\n                                    <div class=\"col-md-12\">\n                                        <div class=\"doc_img\" ng-repeat=\"row in company.income_computation track by $index\">\n                                            <img data-ng-src=\"<%row|corpImageUrl%>\" alt=\"img\">\n                                            <a class=\"down_img\" href=\"<%row|downCorpImage%>\" target=\"_self\" download><i\n                                                    class=\"fa fa-download\"></i></a>\n                                            <del-image data-ng-click=\"remove(row,\'income_computation\')\"></del-image>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"row bdr-btm\">\n                                    <div class=\"col-md-8\">\n                                        <h5>Change in Share Holding</h5>\n                                    </div>\n                                    <upload-btn name=\"company.share_holders\"></upload-btn>\n                                    <div class=\"col-md-12\">\n                                        <div class=\"doc_img\" ng-repeat=\"row in company.share_holders track by $index\">\n                                            <img data-ng-src=\"<%row|corpImageUrl%>\" alt=\"img\">\n                                            <a class=\"down_img\" href=\"<%row|downCorpImage%>\" target=\"_self\" download><i\n                                                    class=\"fa fa-download\"></i></a>\n                                            <del-image data-ng-click=\"remove(row,\'share_holders\')\"></del-image>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"modal-footer border-top-0 text-center pt-0\">\n                            <md-progress-linear data-ng-if=\"activated\" class=\"md-warn\" md-mode=\"buffer\"\n                                                value=\"<% determinateValue %>\"\n                                                md-buffer-value=\"<% determinateValue2 %>\"\n                                                data-ng-disable=\"activated\"></md-progress-linear>\n                            <input data-ng-model=\"company.id\" type=\"hidden\" name=\"id\"/>\n                            <a class=\"btn btn-rounded btn-lg waves-effect waves-light mt-1\"\n                               data-ng-click=\"backTab()\">Back\n                            </a>\n                            <next-btn></next-btn>\n                            <save-btn></save-btn>\n                        </div>\n                    </form>\n                </md-tab-body>\n            </md-tab>\n            <itr-mode></itr-mode>\n        </md-tabs>\n    </div>\n</div>");
$templateCache.put("corporate_itr_list.html","<div class=\"card-block\">\n    <div class=\"dashboard_sec text-center\" data-ng-hide=\"not_found\">\n        <div class=\"admin-panel info-admin-panel\">\n            <div class=\"dashboard_title\">\n                <h2>Corporate ITR</h2>\n                <p>Preliminary Data for Filing Corporate ITR</p>\n            </div>\n            <div class=\"empty_dash text-center\">\n                <div class=\"card-block\">\n                    <figure><img src=\"images/tax_dashboard.png\" class=\"img-fluid\" alt=\"dashboard\"></figure>\n                    <h3 class=\"mt-1\">You have not filled your Business ITR</h3>\n                    <!-- <a href=\"#\" class=\"btn btn-primary\">Fill ITR 1</a>-->\n                    <a ui-sref=\"add-corp-itr\" class=\"btn btn-primary\">Add ITR </a>\n                    <!--<a href=\"#\" class=\"btn btn-primary\">Fill ITR 3</a>-->\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"row\">\n        <itr-status></itr-status>\n\n        <sort-by>\n            <div data-ng-click=\"porder = !porder; sortby(\'create_date\', porder)\"><label style=\"color: green\">Sort\n                By:</label> <span> Date\n                <i data-ng-class=\"porder?\'fa fa-arrow-up\':\'fa fa-arrow-down\'\"></i></span></div>\n        </sort-by>\n\n        <!--<p>\n                <sort-by></sort-by>\n            </p>\n            <div class=\"collapse\" id=\"collapseExample\">\n                <div class=\"card card-block\">\n                    <ul>\n                        <li data-ng-click=\"porder = !porder; sortby(\'create_date\', porder)\">Date\n                            <i data-ng-class=\"porder?\'fa fa-arrow-up\':\'fa fa-arrow-down\'\"></i> </li>\n                        <li data-ng-click=\"iorder = !iorder; sortby(\'ITR\', iorder)\">ITR<i\n                                data-ng-class=\"iorder?\'fa fa-arrow-up\':\'fa fa-arrow-down\'\"></i></li>\n                        <li data-ng-click=\"sorder = !sorder; sortby(\'status\', sorder)\">Status<i\n                                data-ng-class=\"sorder?\'fa fa-arrow-up\':\'fa fa-arrow-down\'\"></i></li>\n                    </ul>\n                </div>\n            </div>-->\n        <!--</div>-->\n    </div>\n    <add-corp-itr></add-corp-itr>\n    <!--<div class=\"row\" data-ng-if=\"itr_exists\">\n        <div class=\"col-sm-12 col-md-3 text-right\">\n            <a ui-sref=\"add-corp-itr\" class=\"btn btn-primary\">\n                ADD ITR</a>\n        </div>\n    </div>-->\n    <section class=\"section mb-0 properties\">\n        <div class=\"no-property-sec\" data-ng-show=\"no_item\">\n            <div class=\"animated fadeInDown\">\n                <p><strong>Sorry! No Items Match Your Search.</strong></p>\n                <p>ThankYou </p>\n            </div>\n        </div>\n        <div data-ng-hide=\"hide_list\">\n            <div class=\"itr_list\" data-ng-repeat=\"row in ITR track by row.id\">\n                <div class=\"row\">\n                    <div class=\"col-sm-12 col-md-2\">\n                        <itr-check></itr-check>\n                    </div>\n                    <div class=\"col-sm-12 col-md-8\">\n                        <a href=\"#\">\n                            <div class=\"row\">\n                                <div class=\"col-sm-12 col-md-6\">\n                                    <span><%row.company_name%></span><br>\n                                    <small><%row.contact%></small>\n                                    <br>\n                                    <!--<small><%row.user_details.email%></small>-->\n                                </div>\n                                <div class=\"col-sm-12 col-md-3\">\n                                    <span data-ng-if=\"row.ITR\"><strong style=\"color: #00A000\"><%row.i_t_r.category_name%></strong></span>\n                                    | FY: 16-17<br>\n                                    <small> <%row.create_date%></small>\n                                </div>\n                                <div class=\"col-sm-12 col-md-3\">\n                                    <!--<span>Status:</span><br>-->\n                                    <small data-ng-if=\"row.ITR\"><strong><%row.status.category_name%></strong>\n                                    </small>\n                                </div>\n                            </div>\n                        </a>\n                    </div>\n                    <div class=\"col-sm-12 col-md-2 text-right\">\n                        <a href=\"javascript:void(0);\" ng-click=\"editTabDialog(row)\" class=\"btn btn-success btn-sm\">\n                            Edit</a>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <nav aria-label=\"Page navigation\" class=\"pull-right\">\n            <ul data-ng-if=\"pager.totalItem > 0\" uib-pagination total-items=\"pager.totalItem\"\n                ng-model=\"pager.currentPage\"\n                items-per-page=\"pager.itemPerPage\"\n                max-size=\"pager.maxSize\" ng-change=\"nextPage()\" class=\"pagination\"\n                boundary-link-numbers=\"true\"\n                force-ellipses=\"true\" rotate=\"true\">\n            </ul>\n        </nav>\n    </section>\n\n    <!--<button class=\"add_property_btn\" aria-label=\"Add ITR\" ui-sref=\"add-itr\">\n        <i class=\"fa fa-plus\"></i>\n        <md-tooltip md-direction=\"top\">Add ITR</md-tooltip>\n    </button>-->\n</div>\n");
$templateCache.put("dashboard-link.html","<main>\n    <div class=\"container-fluid\">\n        <!-- Section: Edit Account -->\n        <section class=\"section\">\n            <!-- First row -->\n            <div class=\"row\">\n                <!-- First column -->\n                <div class=\"col-lg-3 dash_sidebar\">\n                    <div class=\"dashboard_link\">\n                        <div class=\"admin-panel info-admin-panel\">\n                            <div class=\"card-block text-center\">\n                                <img src=\'images/default-user.png\' alt=\"User Photo\"\n                                     class=\"rounded-circle center-block contact-avatar \">\n                                <h4><%authUser.name%></h4>\n                                <p>\n                                    <small><%authUser.email%></small>\n                                </p>\n                            </div>\n                            <div class=\"list-group\">\n                                <!--<a ui-sref-active=\"active\" ui-sref=\"dashboard\" data-ng-click=\"user_menu=!user_menu\"-->\n                                <!--class=\"list-group-item\">-->\n                                <!--<i class=\"fa fa-dashboard\"></i> &nbsp; Dashboard-->\n                                <!--</a>-->\n                                <a ui-sref-active=\"active\" ui-sref=\"itr\" data-ng-click=\"user_menu=!user_menu\"\n                                   class=\"list-group-item\">\n                                    <i class=\"fa fa-user\"></i> &nbsp; ITR\n                                </a>\n\n                                <a ui-sref-active=\"active\" ui-sref=\"corporate-itr\" data-ng-click=\"user_menu=!user_menu\"\n                                   class=\"list-group-item\">\n                                    <i class=\"fa fa-user\"></i> &nbsp; Corporate ITR\n                                </a>\n                                <a ui-sref-active=\"active\" ui-sref=\"gst-files\" data-ng-click=\"user_menu=!user_menu\"\n                                   class=\"list-group-item\">\n                                    <i class=\"fa fa-user\"></i> &nbsp; GST 3-B\n                                </a>\n                                <a ui-sref-active=\"active\" ui-sref=\"profile\" data-ng-click=\"user_menu=!user_menu\"\n                                   class=\"list-group-item\">\n                                    <i class=\"fa fa-user\"></i> &nbsp; My Profile\n                                </a>\n\n                                <a ui-sref-active=\"active\" ui-sref=\"password\" data-ng-click=\"user_menu=!user_menu\"\n                                   class=\"list-group-item\">\n                                    <i class=\"fa fa-lock\"></i> &nbsp; Change Password\n                                </a>\n                            </div>\n\n                        </div>\n                    </div>\n                </div>\n                <div class=\"col-lg-9 anim_view\" ui-view=\"\"></div>\n            </div>\n        </section>\n    </div>\n</main>");
$templateCache.put("dashboard.html","<section class=\"section section-intro mb-0\">\n    <!--\n     <div class=\"row mb-0\">\n         <div class=\"col-md-4 mb-1\">\n             <div class=\"card card-cascade cascading-admin-card\">\n                 <div class=\"admin-up\"><i class=\"fa fa-building-o light-green darken-3\"></i>\n                     <div class=\"data\">\n                         <p>Property</p>\n                         <h3>00</h3>\n                     </div>\n                 </div>\n             </div>\n         </div>\n         <div class=\"col-md-4 mb-1\">\n             <div class=\"card card-cascade cascading-admin-card\">\n                 <div class=\"admin-up\"><i class=\"fa fa-user lime darken-4\"></i>\n                     <div class=\"data\">\n                         <p>Owner Enquiry</p>\n                         <h3>00</h3>\n                     </div>\n                 </div>\n             </div>\n         </div>\n         <div class=\"col-md-4 mb-1\">\n             <div class=\"card card-cascade cascading-admin-card\">\n                 <div class=\"admin-up\"><i class=\"fa fa-list-alt pink darken-4\"></i>\n                     <div class=\"data\">\n                         <p>Buyer Enquiry</p>\n                         <h3>00</h3>\n                     </div>\n                 </div>\n             </div>\n         </div>\n     </div>\n     -->\n</section>\n\n<div class=\"card-block admin-panel info-admin-panel\">\n    <div class=\"dashboard_title\">\n        <h2>Welcome EnsureTax.com</h2>\n        <p>Preliminary Data for Filing ITR</p>\n    </div>\n    <div class=\"empty_dash text-center\">\n        <div class=\"card-block\">\n            <figure><img src=\"images/101housing/tax_dashboard.png\" class=\"img-fluid\" alt=\"dashboard\"></figure>\n            <h3 class=\"mt-1\">You have no any activities yet!</h3>\n            <a href=\"#\" class=\"btn btn-success\">Fill ITR 1</a>\n            <a href=\"#\" class=\"btn btn-primary\">Fill ITR 2</a>\n            <a href=\"#\" class=\"btn btn-primary\">Fill ITR 3</a>\n\n        </div>\n    </div>\n</div>\n");
$templateCache.put("empty.html","<div class=\"post-sucess\">\n    Not Authorized\n</div>");
$templateCache.put("gst_files.html","<div class=\"card-block\">\n    <div data-ng-if=\"not_found\" class=\"dashboard_sec text-center\">\n        <div class=\"admin-panel info-admin-panel\">\n            <div class=\"dashboard_title\">\n                <h2>GST 3-B</h2>\n                <p>Preliminary Data for GST 3-B</p>\n            </div>\n            <div class=\"empty_dash text-center\">\n                <div class=\"card-block\">\n                    <figure><img src=\"images/tax_dashboard.png\" class=\"img-fluid\" alt=\"dashboard\"></figure>\n                    <h3 class=\"mt-1\">You have not uploaded any GST Files.</h3>\n                    <a ui-sref=\"upload-gst\" class=\"btn btn-primary\">Upload Files </a>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"row\">\n        <itr-status></itr-status>\n\n        <sort-by>\n            <div data-ng-click=\"porder = !porder; sortby(\'create_date\', porder)\"><label style=\"color: green\">Sort\n                By:</label> <span> Date\n                <i data-ng-class=\"porder?\'fa fa-arrow-up\':\'fa fa-arrow-down\'\"></i></span></div>\n        </sort-by>\n    </div>\n    <section class=\"section mb-0 properties\">\n        <div data-ng-show=\"no_item\" class=\"no-property-sec\">\n            <div class=\"animated fadeInDown\">\n                <p><strong>Sorry! No Items Match Your Search.</strong></p>\n                <p>ThankYou </p>\n            </div>\n        </div>\n        <div data-ng-hide=\"hide_list\">\n            <div class=\"itr_list\" data-ng-repeat=\"row in GST track by $index\">\n                <div class=\"row\">\n                    <div class=\"col-sm-12 col-md-2\">\n                        <!--<itr-check></itr-check>-->\n                    </div>\n                    <div class=\"col-sm-12 col-md-8\">\n                        <a href=\"#\">\n                            <div class=\"row\">\n                                <div class=\"col-sm-12 col-md-6\">\n                                    <span><%row.user_details.name%></span><br>\n                                    <small><%row.user_details.mobile%></small>\n                                    <br>\n                                </div>\n                                <div class=\"col-sm-12 col-md-3\">\n                                    <span data-ng-if=\"row.ITR\"><strong style=\"color: #00A000\">GST</strong></span> | FY:\n                                    16-17<br>\n                                    <small> <%row.create_date%></small>\n                                </div>\n                                <div class=\"col-sm-12 col-md-3\">\n                                    <!--<span>Status:</span><br>-->\n                                    <!--<small data-ng-if=\"row.ITR\"><strong><%row.s_t_a_t_u_s.category_name%></strong></small>-->\n                                </div>\n                            </div>\n                        </a>\n                    </div>\n                    <div class=\"col-sm-12 col-md-2 text-right\">\n                        <a href=\"javascript:void(0);\" ng-click=\"editTabDialog(row)\" class=\"btn btn-success btn-sm\">\n                            Edit</a>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <nav aria-label=\"Page navigation\" class=\"pull-right\">\n            <ul data-ng-if=\"pager.totalItem > 0\" uib-pagination total-items=\"pager.totalItem\"\n                ng-model=\"pager.currentPage\"\n                items-per-page=\"pager.itemPerPage\"\n                max-size=\"pager.maxSize\" ng-change=\"nextPage()\" class=\"pagination\"\n                boundary-link-numbers=\"true\"\n                force-ellipses=\"true\" rotate=\"true\">\n            </ul>\n        </nav>\n    </section>\n\n    <!--<button class=\"add_property_btn\" aria-label=\"Add ITR\" ui-sref=\"add-itr\">\n        <i class=\"fa fa-plus\"></i>\n        <md-tooltip md-direction=\"top\">Add ITR</md-tooltip>\n    </button>-->\n</div>");
$templateCache.put("gst_upload.html","<div class=\"card-block post_property\">\n    <div class=\"admin-panel info-admin-panel\">\n        <div class=\"dashboard_title\" ng-hide=\"message\">\n            <h2>FY : 2016-17</h2>\n            <a href=\"#\" ui-sref=\"gst-files\" class=\"pull-right doc_close\"> <i class=\"fa fa-close\"></i> Close</a>\n        </div>\n        <div class=\"post-success\" ng-show=\"message\">\n            <div>\n                <i class=\"fa fa-check fa-4x\"></i>\n            </div>\n            <h2>Thank you</h2>\n            <p> Your ITR has been saved successfully. <br>\n                You can check and edit your ITR in ITR section.</p>\n            <a href=\"#\" ui-sref=\"gst-files\" class=\"btn btn-info ok\"> OK </a>\n        </div>\n                    <form name=\"uploadGSTForm\" novalidate data-ng-submit=\"uploadGST()\" enctype=\"multipart/form-data\">\n                        <div class=\"card en_doc mt-2\">\n                            <div class=\"card-block\">\n                                <div class=\"row bdr-btm\">\n                                    <div class=\"col-md-8\">\n                                        <h5>Upload GST Files</h5>\n                                    </div>\n                                    <upload-btn name=\"gst.gst_files\"></upload-btn>\n                                    <div class=\"col-md-12\">\n                                        <div class=\"doc_img\" ng-repeat=\"row in gst.gst_files track by $index\">\n                                            <img data-ng-src=\"<%row|gstImageUrl%>\" alt=\"img\">\n                                            <a class=\"down_img\" href=\"<%row|downGSTImg%>\" target=\"_self\" download><i\n                                                    class=\"fa fa-download\"></i></a>\n                                            <del-image data-ng-click=\"remove(row,\'gst_files\')\"></del-image>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                       <!-- <div class=\"modal-footer border-top-0 text-center pt-0\">\n                            <md-progress-linear data-ng-if=\"activated\" class=\"md-warn\" md-mode=\"buffer\"\n                                                value=\"<% determinateValue %>\"\n                                                md-buffer-value=\"<% determinateValue2 %>\"\n                                                data-ng-disable=\"activated\"></md-progress-linear>\n\n                            <input data-ng-model=\"itr.id\" type=\"hidden\" name=\"id\"/>\n                            <button class=\"btn btn-rounded btn-lg waves-effect waves-light mt-1\"\n                                    data-ng-disabled=\"activated\">Upload\n                            </button>\n                        </div>-->\n\n                        <div class=\"modal-footer border-top-0 text-center pt-0\">\n                            <md-progress-linear data-ng-if=\"activated\" class=\"md-warn\" md-mode=\"buffer\"\n                                                value=\"<% determinateValue %>\"\n                                                md-buffer-value=\"<% determinateValue2 %>\"\n                                                data-ng-disable=\"activated\"></md-progress-linear>\n                            <input data-ng-model=\"itr.id\" type=\"hidden\" name=\"id\"/>\n                            <save-btn></save-btn>\n                           <!-- <a class=\"btn btn-rounded btn-lg waves-effect waves-light mt-1\"\n                               data-ng-click=\"backTab()\">Back\n                            </a>-->\n                         <!--   <next-btn></next-btn>\n                            <save-btn></save-btn>-->\n                        </div>\n                    </form>\n    </div>\n</div>");
$templateCache.put("itr_3.html","<md-tab ng-disabled=\"tabs.disable\">\n    <md-tab-label>Next Step<br> <span class=\"txt\"> ITR 2 </span></md-tab-label>\n    <md-tab-body>\n        <form name=\"ITR2Form\" novalidate data-ng-submit=\"submitITR2()\">\n            <hr>\n            <div class=\"card en_doc f-2 mt-2\">\n                <div class=\"card-block bdr-btm\">\n                    <div class=\"row\">\n                        <div class=\"col-md-8\">\n                            <fieldset class=\"form-group\">\n                                <input type=\"checkbox\" id=\"co_owned_prop\" data-ng-model=\"itr.co_owned_prop\">\n                                <label for=\"co_owned_prop\">Income from House Property</label>\n                            </fieldset>\n                        </div>\n                        <upload-btn name=\"itr.co_owned_prop_image\" data-ng-if=\"itr.co_owned_prop\"></upload-btn>\n                    </div>\n                    <div class=\"doc_img\" data-ng-if=\"itr.co_owned_prop\" ng-repeat=\"row in itr.co_owned_prop_image track by $index\">\n                        <img data-ng-src=\"<%row|imageUrl%>\" alt=\"img\">\n                        <a class=\"down_img\" href=\"<%row|downloadImg%>\" target=\"_self\" download><i class=\"fa fa-download\"></i></a>\n                        <del-image data-ng-click=\"remove(row,\'co_owned_prop_image\')\"></del-image>\n                    </div>\n                </div>\n                <div class=\"card-block bdr-btm\">\n                    <div class=\"row\">\n                        <div class=\"col-md-8\">\n                            <fieldset class=\"form-group\">\n                                <input type=\"checkbox\" id=\"partner_firms\" data-ng-model=\"itr.partner_firms\">\n                                <label for=\"partner_firms\">Income from Partner\'s Firms</label>\n                            </fieldset></div>\n                        <upload-btn name=\"itr.partner_firm_image\" data-ng-if=\"itr.partner_firms\"></upload-btn>\n                    </div>\n                    <div class=\"doc_img\" data-ng-if=\"itr.partner_firms\" ng-repeat=\"row in itr.partner_firm_image track by $index\">\n                        <img data-ng-src=\"<%row|imageUrl%>\" alt=\"img\">\n                        <a class=\"down_img\" href=\"<%row|downloadImg%>\" target=\"_self\" download><i class=\"fa fa-download\"></i></a>\n                        <del-image data-ng-click=\"remove(row,\'partner_firm_image\')\"></del-image>\n                    </div>\n                </div>\n\n                <div class=\"card-block bdr-btm\">\n                    <div class=\"row\">\n                        <div class=\"col-md-8\">\n                            <fieldset class=\"form-group\">\n                                <input type=\"checkbox\" id=\"capital_gains\" data-ng-model=\"itr.capital_gains\">\n                                <label for=\"capital_gains\">Income from Capital Gains</label>\n                                <p>Statement received from broker outlining the stock exchange transactions</p>\n                            </fieldset>\n                        </div>\n                        <upload-btn name=\"itr.capital_gain_image\" data-ng-if=\"itr.capital_gains\"></upload-btn>\n                    </div>\n                    <div class=\"doc_img\" data-ng-if=\"itr.capital_gains\" ng-repeat=\"row in itr.capital_gain_image track by $index\">\n                        <img data-ng-src=\"<%row|imageUrl%>\" alt=\"img\">\n                        <a class=\"down_img\" href=\"<%row|downloadImg%>\" target=\"_self\" download><i class=\"fa fa-download\"></i></a>\n                        <del-image data-ng-click=\"remove(row,\'capital_gain_image\')\"></del-image>\n                    </div>\n                </div>\n                <div class=\"card-block bdr-btm\">\n                    <div class=\"row\">\n                        <div class=\"col-md-8\">\n                            <fieldset class=\"form-group\">\n                                <input type=\"checkbox\" id=\"other_source_income\"\n                                       data-ng-model=\"itr.other_source_income\">\n                                <label for=\"other_source_income\">Income from Other Sources</label>\n                            </fieldset>\n                        </div>\n                        <upload-btn name=\"itr.othr_source_incm_image\" data-ng-if=\"itr.other_source_income\"></upload-btn>\n                    </div>\n                    <div class=\"doc_img\" data-ng-if=\"itr.other_source_income\" ng-repeat=\"row in itr.othr_source_incm_image track by $index\">\n                        <img data-ng-src=\"<%row|imageUrl%>\" alt=\"img\">\n                        <a class=\"down_img\" href=\"<%row|downloadImg%>\" target=\"_self\" download><i class=\"fa fa-download\"></i></a>\n                        <del-image data-ng-click=\"remove(row,\'othr_source_incm_image\')\"></del-image>\n                    </div>\n                </div>\n                <div class=\"card-block bdr-btm\">\n                    <div class=\"row\">\n                        <div class=\"col-md-8\">\n                            <fieldset class=\"form-group\">\n                                <input type=\"checkbox\" id=\"outside_income\"\n                                       data-ng-model=\"itr.outside_income\">\n                                <label for=\"outside_income\">Income from Outside India</label>\n                            </fieldset>\n                        </div>\n                        <upload-btn name=\"itr.outside_income_image\" data-ng-if=\"itr.outside_income\"></upload-btn>\n                    </div>\n                    <div class=\"doc_img\" data-ng-if=\"itr.outside_income\" ng-repeat=\"row in itr.outside_income_image track by $index\">\n                        <img data-ng-src=\"<%row|imageUrl%>\" alt=\"img\">\n                        <a class=\"down_img\" href=\"<%row|downloadImg%>\" target=\"_self\" download><i class=\"fa fa-download\"></i></a>\n                        <del-image data-ng-click=\"remove(row,\'outside_income_image\')\"></del-image>\n                    </div>\n                </div>\n                <div class=\"card-block bdr-btm\">\n                    <div class=\"row\">\n                        <div class=\"col-md-8\">\n                            <fieldset class=\"form-group\">\n                                <input type=\"checkbox\" id=\"other_cntry_tax\"\n                                       data-ng-model=\"itr.other_cntry_tax\"\n                                       name=\"partner\">\n                                <label for=\"other_cntry_tax\">Relief of Tax Paid (If Paid in Other Country)</label>\n                            </fieldset>\n                        </div>\n                        <upload-btn name=\"itr.othr_cntry_tax_paid_img\" data-ng-if=\"itr.other_cntry_tax\"></upload-btn>\n                    </div>\n                    <div class=\"doc_img\" data-ng-if=\"itr.other_cntry_tax\" ng-repeat=\"row in itr.othr_cntry_tax_paid_img track by $index\">\n                        <img data-ng-src=\"<%row|imageUrl%>\" alt=\"img\">\n                        <a class=\"down_img\" href=\"<%row|downloadImg%>\" target=\"_self\" download><i class=\"fa fa-download\"></i></a>\n                        <del-image data-ng-click=\"remove(row,\'othr_cntry_tax_paid_img\')\"></del-image>\n                    </div>\n                </div>\n            </div>\n\n            <div class=\"card f-2 mt-2\">\n                <div class=\"card-block bdr-btm\">\n                    <h6>If Total Income Exceeds INR 50 Lakhs</h6>\n                    <div class=\"card-block bdr-btm\">\n                        <div class=\"row\">\n                            <div class=\"col-md-8\">\n                                <h6><fieldset class=\"form-group\">\n                                    <input type=\"checkbox\" id=\"immovable_assets\"\n                                           data-ng-model=\"itr.immovable_assets\">\n                                    <label for=\"immovable_assets\">Immovable Assets</label>\n                                </fieldset></h6>\n                            </div>\n                            <upload-btn name=\"itr.immovable_asset_image\" data-ng-if=\"itr.immovable_assets\"></upload-btn>\n                        </div>\n                        <div class=\"doc_img\" data-ng-if=\"itr.immovable_assets\" ng-repeat=\"row in itr.immovable_asset_image track by $index\">\n                            <img data-ng-src=\"<%row|imageUrl%>\" alt=\"img\">\n                            <a class=\"down_img\" href=\"<%row|downloadImg%>\" target=\"_self\" download><i class=\"fa fa-download\"></i></a>\n                            <del-image data-ng-click=\"remove(row,\'immovable_asset_image\')\"></del-image>\n                        </div>\n                    </div>\n                    <div class=\"card-block bdr-btm\">\n                        <div class=\"row\">\n                            <div class=\"col-md-8\">\n                                <h6><fieldset class=\"form-group\">\n                                    <input type=\"checkbox\" id=\"assets_partner\"\n                                           data-ng-model=\"itr.assets_partner\"\n                                           name=\"partner\">\n                                    <label for=\"assets_partner\">Partner in the Firm</label>\n                                </fieldset></h6>\n                            </div>\n                            <upload-btn name=\"itr.assets_partner_image\" data-ng-if=\"itr.assets_partner\"></upload-btn>\n                        </div>\n                        <div class=\"doc_img\" data-ng-if=\"itr.assets_partner\" ng-repeat=\"row in itr.assets_partner_image track by $index\">\n                            <img data-ng-src=\"<%row|imageUrl%>\" alt=\"img\">\n                            <a class=\"down_img\" href=\"<%row|downloadImg%>\" target=\"_self\" download><i class=\"fa fa-download\"></i></a>\n                            <del-image data-ng-click=\"remove(row,\'assets_partner_image\')\"></del-image>\n                        </div>\n                    </div>\n                    <div class=\"card-block bdr-btm\">\n                        <h6> Movable Assets </h6>\n                        <div class=\"row\">\n                            <div class=\"col-md-4\">\n                                <md-input-container class=\"md-block\">\n                                    <label>Jewellery Amount</label>\n                                    <input type=\"text\" name=\"jewellery_amnt\" data-ng-model=\"itr.jewellery_amnt\">\n                                </md-input-container>\n                            </div>\n                            <div class=\"col-md-4\">\n                                <md-input-container class=\"md-block\">\n                                    <label>Vehicles Amount</label>\n                                    <input type=\"text\" name=\"paintings_amnt\" data-ng-model=\"itr.paintings_amnt\">\n                                </md-input-container>\n                            </div>\n                            <div class=\"col-md-4\">\n                                <md-input-container class=\"md-block\">\n                                    <label>Paintings Amount</label>\n                                    <input type=\"text\" name=\"vehicles_amnt\" data-ng-model=\"itr.vehicles_amnt\">\n                                </md-input-container>\n                            </div>\n                            <div class=\"col-md-4\">\n                                <md-input-container class=\"md-block\">\n                                    <label>Amount in Bank</label>\n                                    <input type=\"text\" name=\"bank_amnt\" data-ng-model=\"itr.bank_amnt\">\n                                </md-input-container>\n                            </div>\n                            <div class=\"col-md-4\">\n                                <md-input-container class=\"md-block\">\n                                    <label>Shares & Securities</label>\n                                    <input type=\"text\" name=\"share_amnt\" data-ng-model=\"itr.share_amnt\">\n                                </md-input-container>\n                            </div>\n                            <div class=\"col-md-4\">\n                                <md-input-container class=\"md-block\">\n                                    <label>Loans & Advances Given</label>\n                                    <input type=\"text\" name=\"loan_amnt\" data-ng-model=\"itr.loan_amnt\">\n                                </md-input-container>\n                            </div>\n                            <div class=\"col-md-4\">\n                                <md-input-container class=\"md-block\">\n                                    <label>In-Hand Cash</label>\n                                    <input type=\"text\" name=\"cash_amnt\" data-ng-model=\"itr.cash_amnt\">\n                                </md-input-container>\n                            </div>\n                            <div class=\"col-md-4\">\n                                <md-input-container class=\"md-block\">\n                                    <label>Any Other Liabilities (In INR)</label>\n                                    <input type=\"text\" name=\"other_liability_amnt\"\n                                           data-ng-model=\"itr.other_liability_amnt\">\n                                </md-input-container>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <div class=\"card f-2 mt-2\">\n                <div class=\"card-block bdr-btm\">\n                    <h6>Details of Brought Forward Losses</h6>\n                    <div class=\"row\">\n                        <div class=\"col-md-6\">\n                            <md-input-container class=\"md-block\">\n                                <label>Date of Filing Return</label>\n                                <md-datepicker ng-model=\"itr.return_filing_date\"\n                                               md-placeholder=\"Enter date\"></md-datepicker>\n                            </md-input-container>\n                        </div>\n                        <div class=\"col-md-6\">\n                            <md-input-container class=\"md-block\">\n                                <label>Forward Loss of Respective Heads</label>\n                                <input type=\"text\" name=\"loss_amnt\" data-ng-model=\"itr.loss_amnt\">\n                            </md-input-container>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <div class=\"modal-footer border-top-0 text-center pt-0\">\n                <md-progress-linear data-ng-if=\"activated\" class=\"md-warn\" md-mode=\"buffer\"\n                                    value=\"<% determinateValue %>\"\n                                    md-buffer-value=\"<% determinateValue2 %>\"\n                                    data-ng-disable=\"activated\"></md-progress-linear>\n                <input data-ng-model=\"itr.id\" type=\"hidden\" name=\"id\"/>\n                <a class=\"btn btn-rounded btn-lg waves-effect waves-light mt-1\"\n                   data-ng-click=\"backTab()\">Back\n                </a>\n                <save-btn></save-btn>\n            </div>\n        </form>\n    </md-tab-body>\n</md-tab>");
$templateCache.put("itr_4.html","<md-tab ng-disabled=\"tabs.disable\">\n    <md-tab-label>Next Step <br> <span class=\"txt\"> ITR 3 </span></md-tab-label>\n    <md-tab-body>\n        <form name=\"ITR3Form\" novalidate data-ng-submit=\"submitITR3()\">\n            <hr>\n\n            <div class=\"card en_doc mt-2\">\n                <div class=\"card-block bdr-btm\">\n                    <h6>Income Under the Head Business & Profession</h6>\n                    <div class=\"card-block bdr-btm\">\n                        <div class=\"row\">\n                            <div class=\"col-md-9\">\n                                <h6>Nature of Business</h6>\n                            </div>\n                            <div class=\"col-md-3\">\n                                <input type=\"text\" name=\"business_nature\" data-ng-model=\"itr.business_nature\"\n                                       placeholder=\"Business Nature\">\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"card-block bdr-btm\">\n                        <div class=\"row\">\n                            <div class=\"col-md-8\">\n                                <h6>Complete Financial</h6>\n                            </div>\n                            <upload-btn name=\"itr.complete_finance_image\"></upload-btn>\n\n                        </div>\n                        <div class=\"doc_img\" ng-repeat=\"row in itr.complete_finance_image track by $index\">\n                            <img data-ng-src=\"<%row|imageUrl%>\" alt=\"img\">\n                            <a class=\"down_img\" href=\"<%row|downloadImg%>\" target=\"_self\" download><i class=\"fa fa-download\"></i></a>\n                            <del-image data-ng-click=\"remove(row,\'complete_finance_image\')\"></del-image>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <div class=\"card en_doc mt-2\">\n                <div class=\"card-block bdr-btm\">\n                    <div class=\"row\">\n                        <div class=\"col-md-8\">\n                            <fieldset class=\"form-group\">\n                                <input type=\"checkbox\" id=\"co_owner_prop\" data-ng-model=\"itr.co_owned_prop\">\n                                <label for=\"co_owner_prop\">Income from House Property </label>\n                            </fieldset>\n                        </div>\n                        <upload-btn name=\"itr.co_owned_prop_image\" data-ng-if=\"itr.co_owned_prop\"></upload-btn>\n                    </div>\n                    <div class=\"doc_img\" data-ng-if=\"itr.co_owned_prop\" ng-repeat=\"row in itr.co_owned_prop_image track by $index\">\n                        <img data-ng-src=\"<%row|imageUrl%>\" alt=\"img\">\n                        <a class=\"down_img\" href=\"<%row|downloadImg%>\" target=\"_self\" download><i class=\"fa fa-download\"></i></a>\n                        <del-image data-ng-click=\"remove(row,\'co_owned_prop_image\')\"></del-image>\n                    </div>\n                </div>\n\n                <div class=\"card-block bdr-btm\">\n                    <div class=\"row\">\n                        <div class=\"col-md-8\">\n                            <fieldset class=\"form-group\">\n                                <input type=\"checkbox\" id=\"partner_firm\" data-ng-model=\"itr.partner_firms\">\n                                <label for=\"partner_firm\">Income from Partner\'s Firms</label>\n                            </fieldset>\n                        </div>\n                        <upload-btn name=\"itr.partner_firm_image\" data-ng-if=\"itr.partner_firms\"></upload-btn>\n                    </div>\n                    <div class=\"doc_img\" data-ng-if=\"itr.partner_firm_image\" ng-repeat=\"row in itr.partner_firm_image track by $index\">\n                        <img data-ng-src=\"<%row|imageUrl%>\" alt=\"img\">\n                        <a class=\"down_img\" href=\"<%row|downloadImg%>\" target=\"_self\" download><i class=\"fa fa-download\"></i></a>\n                        <del-image data-ng-click=\"remove(row,\'partner_firm_image\')\"></del-image>\n                    </div>\n                </div>\n                <div class=\"card-block bdr-btm\">\n                    <div class=\"row\">\n                        <div class=\"col-md-8\">\n                            <fieldset class=\"form-group\">\n                                <input type=\"checkbox\" id=\"capital_gain\" data-ng-model=\"itr.capital_gains\">\n                                <label for=\"capital_gain\">Income from Capital Gains</label>\n                            </fieldset>\n                        </div>\n                        <upload-btn name=\"itr.capital_gain_image\" data-ng-if=\"itr.capital_gains\"></upload-btn>\n                    </div>\n                    <div class=\"doc_img\" data-ng-if=\"itr.capital_gains\" ng-repeat=\"row in itr.capital_gain_image track by $index\">\n                        <img data-ng-src=\"<%row|imageUrl%>\" alt=\"img\">\n                        <a class=\"down_img\" href=\"<%row|downloadImg%>\" target=\"_self\" download><i class=\"fa fa-download\"></i></a>\n                        <del-image data-ng-click=\"remove(row,\'capital_gain_image\')\"></del-image>\n                    </div>\n                </div>\n                <div class=\"card-block bdr-btm\">\n                    <div class=\"row\">\n                        <div class=\"col-md-8\">\n                            <fieldset class=\"form-group\">\n                                <input type=\"checkbox\" id=\"othr_source_income\"\n                                       data-ng-model=\"itr.other_source_income\">\n                                <label for=\"othr_source_income\">Income from Other Sources</label>\n                            </fieldset>\n                        </div>\n                        <upload-btn name=\"itr.othr_source_incm_image\" data-ng-if=\"itr.other_source_income\"></upload-btn>\n                    </div>\n                    <div class=\"doc_img\" data-ng-if=\"itr.other_source_income\" ng-repeat=\"row in itr.othr_source_incm_image track by $index\">\n                        <img data-ng-src=\"<%row|imageUrl%>\" alt=\"img\">\n                        <a class=\"down_img\" href=\"<%row|downloadImg%>\" target=\"_self\" download><i class=\"fa fa-download\"></i></a>\n                        <del-image data-ng-click=\"remove(row,\'othr_source_incm_image\')\"></del-image>\n                    </div>\n                </div>\n                <div class=\"card-block bdr-btm\">\n                    <div class=\"row\">\n                        <div class=\"col-md-8\">\n                            <fieldset class=\"form-group\">\n                                <input type=\"checkbox\" id=\"outside_incomes\"\n                                       data-ng-model=\"itr.outside_income\">\n                                <label for=\"outside_incomes\">Income from Outside India</label>\n                            </fieldset>\n                        </div>\n                        <upload-btn name=\"itr.outside_income_image\" data-ng-if=\"itr.outside_income\"></upload-btn>\n                    </div>\n                    <div class=\"doc_img\" data-ng-if=\"itr.outside_income\" ng-repeat=\"row in itr.outside_income_image track by $index\">\n                        <img data-ng-src=\"<%row|imageUrl%>\" alt=\"img\">\n                        <a class=\"down_img\" href=\"<%row|downloadImg%>\" target=\"_self\" download><i class=\"fa fa-download\"></i></a>\n                        <del-image data-ng-click=\"remove(row,\'outside_income_image\')\"></del-image>\n                    </div>\n                </div>\n            </div>\n            <div class=\"card en_doc mt-2\">\n                <div class=\"card-block bdr-btm\">\n                    <div class=\"row\">\n                        <div class=\"col-md-8\">\n                            <fieldset class=\"form-group\">\n                                <input type=\"checkbox\" id=\"other_cntry_tax\"\n                                       data-ng-model=\"itr.other_cntry_tax\"\n                                       name=\"partner\">\n                                <label for=\"other_cntry_tax\">Relief of Tax Paid (If Paid in Other Country)</label>\n                            </fieldset>\n                        </div>\n                        <upload-btn name=\"itr.othr_cntry_tax_paid_img\" name=\"itr.othr_cntry_tax_paid_img\" data-ng-if=\"itr.other_cntry_tax\"></upload-btn>\n                    </div>\n                    <div class=\"doc_img\" data-ng-if=\"itr.other_cntry_tax\" ng-repeat=\"row in itr.othr_cntry_tax_paid_img track by $index\">\n                        <img data-ng-src=\"<%row|imageUrl%>\" alt=\"img\">\n                        <a class=\"down_img\" href=\"<%row|downloadImg%>\" target=\"_self\" download><i class=\"fa fa-download\"></i></a>\n                        <del-image data-ng-click=\"remove(row,\'othr_cntry_tax_paid_img\')\"></del-image>\n                    </div>\n                </div>\n\n                <div class=\"card-block bdr-btm\">\n                    <div class=\"row\">\n                        <div class=\"col-md-8\">\n                            <fieldset class=\"form-group\">\n                                <input type=\"checkbox\" id=\"audit_report\"\n                                       data-ng-model=\"itr.audit_report\"\n                                       name=\"partner\">\n                                <label for=\"audit_report\">Tax Audit Report</label>\n                            </fieldset>\n                            <h6></h6>\n                        </div>\n                        <upload-btn name=\"itr.audit_report_img\" data-ng-if=\"itr.audit_report\"></upload-btn>\n                    </div>\n                    <div class=\"doc_img\" data-ng-if=\"itr.audit_report\" ng-repeat=\"row in itr.audit_report_img track by $index\">\n                        <img data-ng-src=\"<%row|imageUrl%>\" alt=\"img\">\n                        <a class=\"down_img\" href=\"<%row|downloadImg%>\" target=\"_self\" download><i class=\"fa fa-download\"></i></a>\n                        <del-image data-ng-click=\"remove(row,\'audit_report_img\')\"></del-image>\n                    </div>\n                </div>\n            </div>\n\n            <div class=\"card f-2 mt-2\">\n                <div class=\"card-block bdr-btm\">\n                    <h6>If Total Income Exceeds INR 50 Lakhs</h6>\n                    <div class=\"card-block bdr-btm\">\n                        <div class=\"row\">\n                            <div class=\"col-md-8\">\n                                <h6><fieldset class=\"form-group\">\n                                    <input type=\"checkbox\" id=\"immovable_assets\"\n                                           data-ng-model=\"itr.immovable_assets\">\n                                    <label for=\"immovable_assets\">Immovable Assets</label>\n                                </fieldset></h6>\n                            </div>\n                            <upload-btn name=\"itr.immovable_asset_image\" data-ng-if=\"itr.immovable_assets\"></upload-btn>\n                        </div>\n                        <div class=\"doc_img\" data-ng-if=\"itr.immovable_assets\" ng-repeat=\"row in itr.immovable_asset_image track by $index\">\n                            <img data-ng-src=\"<%row|imageUrl%>\" alt=\"img\">\n                            <a class=\"down_img\" href=\"<%row|downloadImg%>\" target=\"_self\" download><i class=\"fa fa-download\"></i></a>\n                            <del-image data-ng-click=\"remove(row,\'immovable_asset_image\')\"></del-image>\n                        </div>\n                    </div>\n                    <div class=\"card-block bdr-btm\">\n                        <div class=\"row\">\n                            <div class=\"col-md-8\">\n                                <h6><fieldset class=\"form-group\">\n                                    <input type=\"checkbox\" id=\"assets_partner\"\n                                           data-ng-model=\"itr.assets_partner\"\n                                           name=\"partner\">\n                                    <label for=\"assets_partner\">Partner in the Firm</label>\n                                </fieldset></h6>\n                            </div>\n                            <upload-btn name=\"itr.assets_partner_image\" data-ng-if=\"itr.assets_partner\"></upload-btn>\n                        </div>\n                        <div class=\"doc_img\" data-ng-if=\"itr.assets_partner\" ng-repeat=\"row in itr.assets_partner_image track by $index\">\n                            <img data-ng-src=\"<%row|imageUrl%>\" alt=\"img\">\n                            <a class=\"down_img\" href=\"<%row|downloadImg%>\" target=\"_self\" download><i class=\"fa fa-download\"></i></a>\n                            <del-image data-ng-click=\"remove(row,\'assets_partner_image\')\"></del-image>\n                        </div>\n                    </div>\n                    <div class=\"card-block bdr-btm\">\n                        <h6> Movable Assets </h6>\n                        <div class=\"row\">\n                            <div class=\"col-md-4\">\n                                <md-input-container class=\"md-block\">\n                                    <label>Jewellery Amount</label>\n                                    <input type=\"text\" name=\"jewellery_amnt\" data-ng-model=\"itr.jewellery_amnt\">\n                                </md-input-container>\n                            </div>\n                            <div class=\"col-md-4\">\n                                <md-input-container class=\"md-block\">\n                                    <label>Vehicles Amount</label>\n                                    <input type=\"text\" name=\"paintings_amnt\" data-ng-model=\"itr.paintings_amnt\">\n                                </md-input-container>\n                            </div>\n                            <div class=\"col-md-4\">\n                                <md-input-container class=\"md-block\">\n                                    <label>Paintings Amount</label>\n                                    <input type=\"text\" name=\"vehicles_amnt\" data-ng-model=\"itr.vehicles_amnt\">\n                                </md-input-container>\n                            </div>\n                            <div class=\"col-md-4\">\n                                <md-input-container class=\"md-block\">\n                                    <label>Amount in Bank</label>\n                                    <input type=\"text\" name=\"bank_amnt\" data-ng-model=\"itr.bank_amnt\">\n                                </md-input-container>\n                            </div>\n                            <div class=\"col-md-4\">\n                                <md-input-container class=\"md-block\">\n                                    <label>Shares & Securities</label>\n                                    <input type=\"text\" name=\"share_amnt\" data-ng-model=\"itr.share_amnt\">\n                                </md-input-container>\n                            </div>\n                            <div class=\"col-md-4\">\n                                <md-input-container class=\"md-block\">\n                                    <label>Loans & Advances Given</label>\n                                    <input type=\"text\" name=\"loan_amnt\" data-ng-model=\"itr.loan_amnt\">\n                                </md-input-container>\n                            </div>\n                            <div class=\"col-md-4\">\n                                <md-input-container class=\"md-block\">\n                                    <label>In-Hand Cash</label>\n                                    <input type=\"text\" name=\"cash_amnt\" data-ng-model=\"itr.cash_amnt\">\n                                </md-input-container>\n                            </div>\n                            <div class=\"col-md-4\">\n                                <md-input-container class=\"md-block\">\n                                    <label>Any Other Liabilities (In INR)</label>\n                                    <input type=\"text\" name=\"other_liability_amnt\"\n                                           data-ng-model=\"itr.other_liability_amnt\">\n                                </md-input-container>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <div class=\"card f-2 mt-2\">\n                <div class=\"card-block bdr-btm\">\n                    <h6>Details of Brought Forward Losses</h6>\n                    <div class=\"row\">\n                        <div class=\"col-md-6\">\n                            <md-input-container class=\"md-block\">\n                                <label>Date of Filing Return</label>\n                                <md-datepicker ng-model=\"itr.return_filing_date\"\n                                               md-placeholder=\"Enter date\"></md-datepicker>\n                            </md-input-container>\n                        </div>\n                        <div class=\"col-md-6\">\n                            <md-input-container class=\"md-block\">\n                                <label>Forward Loss of Respective Heads</label>\n                                <input type=\"text\" name=\"loss_amnt\" data-ng-model=\"itr.loss_amnt\">\n                            </md-input-container>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <div class=\"modal-footer border-top-0 text-center pt-0\">\n                <md-progress-linear data-ng-if=\"activated\" class=\"md-warn\" md-mode=\"buffer\"\n                                    value=\"<% determinateValue %>\"\n                                    md-buffer-value=\"<% determinateValue2 %>\"\n                                    data-ng-disable=\"activated\"></md-progress-linear>\n                <input data-ng-model=\"itr.id\" type=\"hidden\" name=\"id\"/>\n                <a class=\"btn btn-rounded btn-lg waves-effect waves-light mt-1\"\n                   data-ng-click=\"backTab()\">Back\n                </a>\n                <save-btn></save-btn>\n            </div>\n        </form>\n    </md-tab-body>\n</md-tab>");
$templateCache.put("itr_5.html","<md-tab ng-disabled=\"tabs.disable\">\n    <md-tab-label>Next Step <br> <span class=\"txt\"> ITR 4 </span></md-tab-label>\n    <md-tab-body>\n        <form name=\"ITR4Form\" novalidate data-ng-submit=\"submitITR4()\">\n            <hr>\n            <div class=\"card f-2 mt-2\">\n                <div class=\"card-block bdr-btm\">\n                    <h6> Income Under the Head Business & Profession </h6>\n                    <div class=\"row\">\n                        <div class=\"col-md-4\">\n                            <md-input-container class=\"md-block\">\n                                <label>Nature of business</label>\n                                <input type=\"text\" name=\"business_nature\"\n                                       data-ng-model=\"itr.business_nature\">\n                            </md-input-container>\n                        </div>\n                        <div class=\"col-md-4\">\n                            <md-input-container class=\"md-block\">\n                                <label>Presumptive Turnover(In INR)</label>\n                                <input type=\"text\" name=\"turnover\" data-ng-model=\"itr.turnover\">\n                            </md-input-container>\n                        </div>\n                        <div class=\"col-md-4\">\n                            <md-input-container class=\"md-block\">\n                                <label>Net Profit to be Considered(In INR)</label>\n                                <input type=\"text\" name=\"net_profit\" data-ng-model=\"itr.net_profit\">\n                            </md-input-container>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"card f-2 mt-2\">\n                <div class=\"card-block bdr-btm\">\n                    <h6>If Total Income Exceeds INR 50 Lakhs</h6>\n                    <div class=\"card-block bdr-btm\">\n                        <div class=\"row\">\n                            <div class=\"col-md-8\">\n                                <h6><fieldset class=\"form-group\">\n                                    <input type=\"checkbox\" id=\"immovable_assets\"\n                                           data-ng-model=\"itr.immovable_assets\">\n                                    <label for=\"immovable_assets\">Immovable Assets</label>\n                                </fieldset></h6>\n                            </div>\n                            <upload-btn name=\"itr.immovable_asset_image\" data-ng-if=\"itr.immovable_assets\"></upload-btn>\n                        </div>\n                        <div class=\"doc_img\" data-ng-if=\"itr.immovable_assets\" ng-repeat=\"row in itr.immovable_asset_image track by $index\">\n                            <img data-ng-src=\"<%row|imageUrl%>\" alt=\"img\">\n                            <a class=\"down_img\" href=\"<%row|downloadImg%>\" target=\"_self\" download><i class=\"fa fa-download\"></i></a>\n                            <del-image data-ng-click=\"remove(row,\'immovable_asset_image\')\"></del-image>\n                        </div>\n                    </div>\n                    <div class=\"card-block bdr-btm\">\n                        <div class=\"row\">\n                            <div class=\"col-md-8\">\n                                <h6><fieldset class=\"form-group\">\n                                    <input type=\"checkbox\" id=\"assets_partner\"\n                                           data-ng-model=\"itr.assets_partner\"\n                                           name=\"partner\">\n                                    <label for=\"assets_partner\">Partner in the Firm</label>\n                                </fieldset></h6>\n                            </div>\n                            <upload-btn name=\"itr.assets_partner_image\" data-ng-if=\"itr.assets_partner\"></upload-btn>\n                        </div>\n                        <div class=\"doc_img\" data-ng-if=\"itr.assets_partner\" ng-repeat=\"row in itr.assets_partner_image track by $index\">\n                            <img data-ng-src=\"<%row|imageUrl%>\" alt=\"img\">\n                            <a class=\"down_img\" href=\"<%row|downloadImg%>\" target=\"_self\" download><i class=\"fa fa-download\"></i></a>\n                            <del-image data-ng-click=\"remove(row,\'assets_partner_image\')\"></del-image>\n                        </div>\n                    </div>\n                    <div class=\"card-block bdr-btm\">\n                        <h6> Movable Assets </h6>\n                        <div class=\"row\">\n                            <div class=\"col-md-4\">\n                                <md-input-container class=\"md-block\">\n                                    <label>Jewellery Amount</label>\n                                    <input type=\"text\" name=\"jewellery_amnt\" data-ng-model=\"itr.jewellery_amnt\">\n                                </md-input-container>\n                            </div>\n                            <div class=\"col-md-4\">\n                                <md-input-container class=\"md-block\">\n                                    <label>Vehicles Amount</label>\n                                    <input type=\"text\" name=\"paintings_amnt\" data-ng-model=\"itr.paintings_amnt\">\n                                </md-input-container>\n                            </div>\n                            <div class=\"col-md-4\">\n                                <md-input-container class=\"md-block\">\n                                    <label>Paintings Amount</label>\n                                    <input type=\"text\" name=\"vehicles_amnt\" data-ng-model=\"itr.vehicles_amnt\">\n                                </md-input-container>\n                            </div>\n                            <div class=\"col-md-4\">\n                                <md-input-container class=\"md-block\">\n                                    <label>Amount in Bank</label>\n                                    <input type=\"text\" name=\"bank_amnt\" data-ng-model=\"itr.bank_amnt\">\n                                </md-input-container>\n                            </div>\n                            <div class=\"col-md-4\">\n                                <md-input-container class=\"md-block\">\n                                    <label>Shares & Securities</label>\n                                    <input type=\"text\" name=\"share_amnt\" data-ng-model=\"itr.share_amnt\">\n                                </md-input-container>\n                            </div>\n                            <div class=\"col-md-4\">\n                                <md-input-container class=\"md-block\">\n                                    <label>Loans & Advances Given</label>\n                                    <input type=\"text\" name=\"loan_amnt\" data-ng-model=\"itr.loan_amnt\">\n                                </md-input-container>\n                            </div>\n                            <div class=\"col-md-4\">\n                                <md-input-container class=\"md-block\">\n                                    <label>In-Hand Cash</label>\n                                    <input type=\"text\" name=\"cash_amnt\" data-ng-model=\"itr.cash_amnt\">\n                                </md-input-container>\n                            </div>\n                            <div class=\"col-md-4\">\n                                <md-input-container class=\"md-block\">\n                                    <label>Any Other Liabilities (In INR)</label>\n                                    <input type=\"text\" name=\"other_liability_amnt\"\n                                           data-ng-model=\"itr.other_liability_amnt\">\n                                </md-input-container>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"card en_doc mt-2\">\n                <div class=\"card-block bdr-btm\">\n                    <div class=\"row\">\n                        <div class=\"col-md-8\">\n                            <fieldset class=\"form-group\">\n                                <input type=\"checkbox\" id=\"other_source_income4\"\n                                       data-ng-model=\"itr.other_source_income\">\n                                <label for=\"other_source_income4\">Income from Other Sources</label>\n                            </fieldset>\n                        </div>\n                        <upload-btn name=\"itr.othr_source_incm_image\" data-ng-if=\"itr.other_source_income\"></upload-btn>\n                    </div>\n                    <div class=\"doc_img\" data-ng-if=\"itr.other_source_income\" ng-repeat=\"row in itr.othr_source_incm_image track by $index\">\n                        <img data-ng-src=\"<%row|imageUrl%>\" alt=\"img\">\n                        <a class=\"down_img\" href=\"<%row|downloadImg%>\" target=\"_self\" download><i class=\"fa fa-download\"></i></a>\n                        <del-image data-ng-click=\"remove(row,\'othr_source_incm_image\')\"></del-image>\n                    </div>\n                </div>\n                </div>\n            <div class=\"modal-footer border-top-0 text-center pt-0\">\n                <md-progress-linear data-ng-if=\"activated\" class=\"md-warn\" md-mode=\"buffer\"\n                                    value=\"<% determinateValue %>\"\n                                    md-buffer-value=\"<% determinateValue2 %>\"\n                                    data-ng-disable=\"activated\"></md-progress-linear>\n                <input data-ng-model=\"itr.id\" type=\"hidden\" name=\"id\"/>\n                <a class=\"btn btn-rounded btn-lg waves-effect waves-light mt-1\"\n                   data-ng-click=\"backTab()\">Back\n                </a>\n                <save-btn></save-btn>\n            </div>\n        </form>\n    </md-tab-body>\n</md-tab>");
$templateCache.put("itr_add.html","<div class=\"card-block post_property\">\n    <div class=\"admin-panel info-admin-panel\">\n        <div class=\"dashboard_title\" ng-hide=\"message\">\n            <h2>FY : 2016-17</h2>\n            <a href=\"#\" ui-sref=\"itr\" class=\"pull-right doc_close\"> <i class=\"fa fa-close\"></i> Close</a>\n        </div>\n        <div class=\"post-success\" ng-show=\"message\">\n            <div>\n                <i class=\"fa fa-check fa-4x\"></i>\n            </div>\n            <h2>Thank you</h2>\n            <p> Your ITR has been saved successfully. <br>\n                You can check and edit your ITR in ITR section.</p>\n            <a href=\"#\" ui-sref=\"itr\" class=\"btn btn-info ok\"> OK </a>\n        </div>\n        <md-tabs md-dynamic-height=\"true\" md-no-ink-bar=\"true\" md-border-bottom=\"true\" md-center-tabs=\"true\"\n                 md-selected=\"tabs.selectedIndex\" md-no-ink=\"true\" ng-hide=\"message\">\n        <md-tab>\n            <md-tab-label>User Details</md-tab-label>\n            <md-tab-body>\n                <form name=\"profileForm\" novalidate data-ng-submit=\"postProfile()\" enctype=\"multipart/form-data\">\n                    <div class=\"row\">\n                        <div class=\"col-md-4\">\n                            <md-input-container class=\"md-block\">\n                                <label>Name</label>\n                                <input type=\"text\" name=\"name\" data-ng-model=\"user.name\">\n                            </md-input-container>\n                        </div>\n                        <div class=\"col-md-4\">\n                            <md-input-container class=\"md-block\">\n                                <label>Email Id</label>\n                                <input type=\"text\" name=\"email\" data-ng-model=\"user.email\">\n                            </md-input-container>\n                        </div>\n                        <div class=\"col-md-4\">\n                            <md-input-container class=\"md-block\">\n                                <label>Mobile</label>\n                                <input type=\"text\" name=\"mobile\" data-ng-model=\"user.mobile\">\n                            </md-input-container>\n                        </div>\n                    </div>\n\n                    <div class=\"row\">\n                        <div class=\"col-md-4\">\n                            <md-input-container class=\"md-block\">\n                                <label>IFSC Code</label>\n                                <input type=\"text\" name=\"ifsc\" data-ng-model=\"user.ifsc_code\">\n                            </md-input-container>\n                        </div>\n                        <div class=\"col-md-4\">\n                            <md-input-container class=\"md-block\">\n                                <label>Residential Status</label>\n                                <md-select name=\"ITR\" data-ng-model=\"user.residential_status\">\n                                    <md-option ng-repeat=\"res in residence track by $index\" ng-value=\"<%res.value%>\">\n                                        <%res.text%>\n                                    </md-option>\n                                </md-select>\n                            </md-input-container>\n                        </div>\n                        <div class=\"col-md-4\">\n                            <md-input-container class=\"md-block\">\n                                <label>Employer Category</label>\n                                <md-select name=\"employer\" data-ng-model=\"user.employer_category\">\n                                    <md-option ng-repeat=\"emp in employer track by $index\" ng-value=\"<%emp.value%>\">\n                                        <%emp.text%>\n                                    </md-option>\n                                </md-select>\n                            </md-input-container>\n                        </div>\n                    </div>\n                    <div class=\"card-block bdr-btm\">\n                        <div class=\"row\">\n                            <div class=\"col-md-8\">\n                                <fieldset class=\"form-group\">\n                                    <span>Upload Pan Card</span>\n                                </fieldset>\n                            </div>\n\n                            <div class=\"col-md-4 text-center\">\n                                <label class=\"dp-upload\">\n                                    <input type=\"file\" name=\"pan_image\" ng-file-model=\"user.pan_image\" multiple>\n                                    <i class=\"fa fa-upload\"></i> <span>Upload doc</span>\n                                </label>\n                            </div>\n                        </div>\n                        <div class=\"doc_img\" data-ng-repeat=\"row in user.pan_image track by $index\">\n                            <img data-ng-src=\"<%row|proImageUrl%>\" alt=\"img\">\n                            <a class=\"down_img\" href=\"<%row|downloadProImage%>\" target=\"_self\" download><i class=\"fa fa-download\"></i></a>\n                            <del-image data-ng-click=\"remove(row,\'pan_image\')\"></del-image>\n                        </div>\n                    </div>\n                    <div class=\"card-block bdr-btm\">\n                        <div class=\"row\">\n                            <div class=\"col-md-8\">\n                                <fieldset class=\"form-group\">\n                                    <span>Previous Year Return</span>\n                                </fieldset>\n                            </div>\n\n                            <div class=\"col-md-4 text-center\">\n                                <label class=\"dp-upload\">\n                                    <input type=\"file\" name=\"previous_return_image\" ng-file-model=\"user.previous_return_image\"\n                                           multiple>\n                                    <i class=\"fa fa-upload\"></i> <span>Upload doc</span>\n                                </label>\n                            </div>\n                        </div>\n                        <div class=\"doc_img\" data-ng-repeat=\"row in user.previous_return_image track by $index\">\n                            <img data-ng-src=\"<%row|proImageUrl%>\" alt=\"img\">\n                            <a class=\"down_img\" href=\"<%row|downloadProImage%>\" target=\"_self\" download><i class=\"fa fa-download\"></i></a>\n                            <del-image data-ng-click=\"remove(row,\'previous_return_image\')\"></del-image>\n                        </div>\n                    </div>\n                    <div class=\"card-block bdr-btm\">\n                        <div class=\"row\">\n                            <div class=\"col-md-8\">\n                                <fieldset class=\"form-group\">\n                                    <span>Bank Statement</span>\n                                </fieldset>\n                            </div>\n\n                            <div class=\"col-md-4 text-center\">\n                                <label class=\"dp-upload\">\n                                    <input type=\"file\" name=\"bank_statement\" ng-file-model=\"user.bank_statement\" multiple>\n                                    <i class=\"fa fa-upload\"></i> <span>Upload doc</span>\n                                </label>\n                            </div>\n                        </div>\n                        <div class=\"doc_img\" data-ng-repeat=\"row in user.bank_statement track by $index\">\n                            <img data-ng-src=\"<%row|proImageUrl%>\" alt=\"img\">\n                            <a class=\"down_img\" href=\"<%row|downloadProImage%>\" target=\"_self\" download><i class=\"fa fa-download\"></i></a>\n                            <del-image data-ng-click=\"remove(row,\'bank_statement\')\"></del-image>\n                        </div>\n                    </div>\n                    <md-input-container class=\"md-block\">\n                        <label>Residence Address</label>\n                        <textarea data-ng-model=\"user.address\" name=\"address\" rows=\"3\"\n                                  md-select-on-focus></textarea>\n                    </md-input-container>\n                    <div class=\"modal-footer border-top-0 text-center\">\n                        <md-progress-linear data-ng-if=\"activated\" class=\"md-warn\" md-mode=\"buffer\"\n                                            value=\"<% determinateValue %>\"\n                                            md-buffer-value=\"<% determinateValue2 %>\"\n                                            data-ng-disable=\"activated\"></md-progress-linear>\n                        <input data-ng-model=\"propLoc.id\" type=\"hidden\" name=\"id\"/>\n                        <save-btn></save-btn>\n                        <next-btn></next-btn>\n                    </div>\n                </form>\n            </md-tab-body>\n        </md-tab>\n        <md-tab>\n            <md-tab-label>Step 1 <br> <span class=\"txt\">Fill ITR Details</span></md-tab-label>\n            <md-tab-body>\n                <form name=\"taxForm\" novalidate data-ng-submit=\"submitITR1()\" enctype=\"multipart/form-data\">\n                    <hr>\n                    <div class=\"row\">\n                        <div class=\"col-md-4\">\n                            <md-input-container class=\"md-block\">\n                                <label>Select ITR</label>\n                                <md-select name=\"ITR\" data-ng-model=\"itr.ITR\" required>\n                                    <md-option ng-repeat=\"t in ITR track by $index\"\n                                               ng-value=\"<%t.value%>\">\n                                        <%t.text%>\n                                    </md-option>\n                                </md-select>\n                                <div class=\"tooltip-error\">\n                                    <div ng-messages=\"taxForm.ITR.$error\">\n                                            <span ng-message=\"required\">\n                                                <i class=\"fa fa-info-circle\"></i>\n                                                <md-tooltip md-direction=\"left\">\n                                                    Please Select ITR\n                                                </md-tooltip>\n                                            </span>\n                                    </div>\n                                </div>\n                            </md-input-container>\n                        </div>\n                    </div>\n\n                    <div class=\"card en_doc mt-2\">\n                        <div class=\"card-block\">\n                            <div class=\"row\">\n                                <div class=\"col-md-6\">\n                                    <h6>1. Income Under the Head Salary</h6>\n                                    <p><strong>FORM 16</strong> - Form 16 is provided by employer containing the\n                                        computation of income and tax deductions</p>\n                                </div>\n                                <div class=\"col-md-2\">\n                                    <input type=\"text\" name=\"form_16_amnt\" data-ng-model=\"itr.form_16_amnt\"\n                                           placeholder=\"Amount\">\n                                </div>\n                                <upload-btn name=\"itr.form_16\"></upload-btn>\n                            </div>\n                            <div class=\"doc_img\" ng-repeat=\"row in itr.form_16 track by $index\">\n                                <img data-ng-src=\"<%row|imageUrl%>\" alt=\"img\">\n                                <a class=\"down_img\" href=\"<%row|downloadImg%>\" target=\"_self\" download><i\n                                        class=\"fa fa-download\"></i></a>\n                                <del-image data-ng-click=\"remove(row,\'form_16\')\"></del-image>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"card en_doc mt-2\">\n                        <div class=\"card-block\">\n                            <div class=\"row\">\n                                <div class=\"col-md-6\">\n                                    <h6>2. Income from One House Property</h6>\n                                    <p>Loan & Interest Certificate <br> (House property income pertains to rental\n                                        income)</p>\n                                </div>\n                                <div class=\"col-md-2\">\n                                    <input type=\"text\" name=\"income_loss\" data-ng-model=\"itr.house_income\"\n                                           placeholder=\"Amount\">\n                                </div>\n                                <upload-btn name=\"itr.loan_certificate\"></upload-btn>\n                            </div>\n                            <div class=\"doc_img\" ng-repeat=\"row in itr.loan_certificate track by $index\">\n                                <img data-ng-src=\"<%row|imageUrl%>\" alt=\"img\">\n                                <a class=\"down_img\" href=\"<%row|downloadImg%>\" target=\"_self\" download><i\n                                        class=\"fa fa-download\"></i></a>\n                                <del-image data-ng-click=\"remove(row,\'loan_certificate\')\"></del-image>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"card en_doc mt-2\">\n                        <div class=\"card-block\">\n                            <div class=\"row\">\n                                <div class=\"col-md-6\">\n                                    <h6>3. Income from Other Sources</h6>\n                                    <p>Interest Certificate</p>\n                                </div>\n                                <div class=\"col-md-2\">\n                                    <input type=\"text\" name=\"interest_income\" data-ng-model=\"itr.interest_income\"\n                                           placeholder=\"Amount\">\n                                </div>\n                                <upload-btn name=\"itr.interest_certificate\"></upload-btn>\n                            </div>\n                            <div class=\"doc_img\" ng-repeat=\"row in itr.interest_certificate track by $index\">\n                                <img data-ng-src=\"<%row|imageUrl%>\" alt=\"img\">\n                                <a class=\"down_img\" href=\"<%row|downloadImg%>\" target=\"_self\" download><i\n                                        class=\"fa fa-download\"></i></a>\n                                <del-image data-ng-click=\"remove(row,\'interest_certificate\')\"></del-image>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"card en_doc mt-2\">\n                        <div class=\"card-block\">\n                            <h6>4. Details of Deduction to be Claimed Along with Proofs (If Any)</h6>\n                            <br>\n                            <div class=\"row bdr-btm\">\n                                <div class=\"col-md-8\">\n                                    <h5>Deduction to be Claimed u/s 80C</h5>\n                                    <p>Deduction in respect of life insurance premia, installment paid for the\n                                        purpose of purchase or construction of a residential house property,\n                                        contribution to provident fund, contribution to public provident fund,\n                                        contribution to fixed deposit with a scheduled bank for 5 years or more,\n                                        subscription to certain equity shares or debentures, etc</p>\n\n                                </div>\n                                <upload-btn name=\"itr.claim_80C\"></upload-btn>\n                                <div class=\"col-md-12\">\n                                    <div class=\"doc_img\" ng-repeat=\"row in itr.claim_80C track by $index\">\n                                        <img data-ng-src=\"<%row|imageUrl%>\" alt=\"img\">\n                                        <a class=\"down_img\" href=\"<%row|downloadImg%>\" target=\"_self\" download><i\n                                                class=\"fa fa-download\"></i></a>\n                                        <del-image data-ng-click=\"remove(row,\'claim_80C\')\"></del-image>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div class=\"row bdr-btm\">\n                                <div class=\"col-md-8\">\n                                    <h5>Deduction to be Claimed u/s 80D</h5>\n                                    <p>Deduction in respect of health insurance premia</p>\n                                </div>\n                                <upload-btn name=\"itr.claim_80D\"></upload-btn>\n                                <div class=\"col-md-12\">\n                                    <div class=\"doc_img\" ng-repeat=\"row in itr.claim_80D track by $index\">\n                                        <img data-ng-src=\"<%row|imageUrl%>\" alt=\"img\">\n                                        <a class=\"down_img\" href=\"<%row|downloadImg%>\" target=\"_self\" download><i\n                                                class=\"fa fa-download\"></i></a>\n                                        <del-image data-ng-click=\"remove(row,\'claim_80D\')\"></del-image>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"row bdr-btm\">\n                                <div class=\"col-md-8\">\n                                    <h5>Deduction to be Claimed u/s 80G</h5>\n                                    <p>Deduction in respect of donations to certain funds, charitable institutions,\n                                        etc</p>\n                                </div>\n                                <upload-btn name=\"itr.claim_80G\"></upload-btn>\n                                <div class=\"col-md-12\">\n                                    <div class=\"doc_img\" ng-repeat=\"row in itr.claim_80G track by $index\">\n                                        <img data-ng-src=\"<%row|imageUrl%>\" alt=\"img\">\n                                        <a class=\"down_img\" href=\"<%row|downloadImg%>\" target=\"_self\" download><i\n                                                class=\"fa fa-download\"></i></a>\n                                        <del-image data-ng-click=\"remove(row,\'claim_80G\')\"></del-image>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div class=\"row bdr-btm\">\n                                <div class=\"col-md-8\">\n                                    <h5>Other Deduction</h5>\n                                    <p>Deduction in respect of interest on deposits in savings account</p>\n                                </div>\n                                <upload-btn name=\"itr.other_deduction\"></upload-btn>\n                                <div class=\"col-md-12\">\n                                    <div class=\"doc_img\" ng-repeat=\"row in itr.other_deduction track by $index\">\n                                        <img data-ng-src=\"<%row|imageUrl%>\" alt=\"img\">\n                                        <a class=\"down_img\" href=\"<%row|downloadImg%>\" target=\"_self\" download><i\n                                                class=\"fa fa-download\"></i></a>\n                                        <del-image data-ng-click=\"remove(row,\'other_deduction\')\"></del-image>\n                                    </div>\n                                </div>\n                            </div>\n\n\n                            <div class=\"row bdr-btm\">\n                                <div class=\"col-md-8\">\n                                    <h5>Paid Tax Challan (If Any)</h5>\n                                </div>\n                                <upload-btn name=\"itr.tax_challan\"></upload-btn>\n                                <div class=\"col-md-12\">\n                                    <div class=\"doc_img\" ng-repeat=\"row in itr.tax_challan track by $index\">\n                                        <img data-ng-src=\"<%row|imageUrl%>\" alt=\"img\">\n                                        <a class=\"down_img\" href=\"<%row|downloadImg%>\" target=\"_self\" download><i\n                                                class=\"fa fa-download\"></i></a>\n                                        <del-image data-ng-click=\"remove(row,\'tax_challan\')\"></del-image>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div class=\"row bdr-btm\">\n                                <div class=\"col-md-8\">\n                                    <h5>Form 26AS</h5>\n                                    <p>Form 26AS outlines tax deducted form your income by the persons responsible\n                                        to pay the income. Same can be downloaded form the website <a\n                                                href=\"www.incometaxindiaefiling.gov.in\" target=\"_blank\">\'www.incometaxindiaefiling.gov.in\'</a>\n                                    </p>\n                                </div>\n                                <upload-btn name=\"itr.form_26A\"></upload-btn>\n                                <div class=\"col-md-12\">\n                                    <div class=\"doc_img\" ng-repeat=\"row in itr.form_26A track by $index\">\n                                        <img data-ng-src=\"<%row|imageUrl%>\" alt=\"img\">\n                                        <a class=\"down_img\" href=\"<%row|downloadImg%>\" target=\"_self\" download><i\n                                                class=\"fa fa-download\"></i></a>\n                                        <del-image data-ng-click=\"remove(row,\'form_26A\')\"></del-image>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"modal-footer border-top-0 text-center pt-0\">\n                        <md-progress-linear data-ng-if=\"activated\" class=\"md-warn\" md-mode=\"buffer\"\n                                            value=\"<% determinateValue %>\"\n                                            md-buffer-value=\"<% determinateValue2 %>\"\n                                            data-ng-disable=\"activated\"></md-progress-linear>\n                        <input data-ng-model=\"itr.id\" type=\"hidden\" name=\"id\"/>\n                        <a class=\"btn btn-rounded btn-lg waves-effect waves-light mt-1\"\n                           data-ng-click=\"backTab()\">Back\n                        </a>\n                        <next-btn></next-btn>\n                        <save-btn></save-btn>\n                    </div>\n                </form>\n            </md-tab-body>\n        </md-tab>\n        <itr-mode></itr-mode>\n        </md-tabs>\n    </div>\n</div>");
$templateCache.put("itr_list.html","<div class=\"card-block\">\n    <div data-ng-if=\"not_found\" class=\"dashboard_sec text-center\">\n        <div class=\"admin-panel info-admin-panel\">\n            <div class=\"dashboard_title\">\n                <h2>Individual ITR</h2>\n                <p>Preliminary Data for Filing ITR</p>\n            </div>\n            <div class=\"empty_dash text-center\">\n                <div class=\"card-block\">\n                    <figure><img src=\"images/tax_dashboard.png\" class=\"img-fluid\" alt=\"dashboard\"></figure>\n                    <h3 class=\"mt-1\">You have not filled your ITR.</h3>\n                    <!-- <a href=\"#\" class=\"btn btn-primary\">Fill ITR 1</a>-->\n                    <a ui-sref=\"add-itr\" class=\"btn btn-primary\">Add ITR </a>\n                    <!--<a href=\"#\" class=\"btn btn-primary\">Fill ITR 3</a>-->\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"row\">\n        <itr-status></itr-status>\n\n        <sort-by>\n            <div data-ng-click=\"porder = !porder; sortby(\'create_date\', porder)\"><label style=\"color: green\">Sort\n                By:</label> <span> Date\n                <i data-ng-class=\"porder?\'fa fa-arrow-up\':\'fa fa-arrow-down\'\"></i></span></div>\n        </sort-by>\n\n        <!--<p>\n                <sort-by></sort-by>\n            </p>\n            <div class=\"collapse\" id=\"collapseExample\">\n                <div class=\"card card-block\">\n                    <ul>\n                        <li data-ng-click=\"porder = !porder; sortby(\'create_date\', porder)\">Date\n                            <i data-ng-class=\"porder?\'fa fa-arrow-up\':\'fa fa-arrow-down\'\"></i> </li>\n                        <li data-ng-click=\"iorder = !iorder; sortby(\'ITR\', iorder)\">ITR<i\n                                data-ng-class=\"iorder?\'fa fa-arrow-up\':\'fa fa-arrow-down\'\"></i></li>\n                        <li data-ng-click=\"sorder = !sorder; sortby(\'status\', sorder)\">Status<i\n                                data-ng-class=\"sorder?\'fa fa-arrow-up\':\'fa fa-arrow-down\'\"></i></li>\n                    </ul>\n                </div>\n            </div>-->\n        <!--</div>-->\n    </div>\n    <section class=\"section mb-0 properties\">\n        <div data-ng-show=\"no_item\" class=\"no-property-sec\">\n            <div class=\"animated fadeInDown\">\n                <p><strong>Sorry! No Items Match Your Search.</strong></p>\n                <p>ThankYou </p>\n            </div>\n        </div>\n        <div data-ng-hide=\"hide_list\">\n            <div class=\"itr_list\" data-ng-repeat=\"row in ITR track by row.id\">\n                <div class=\"row\">\n                    <div class=\"col-sm-12 col-md-2\">\n                        <itr-check></itr-check>\n                    </div>\n                    <div class=\"col-sm-12 col-md-8\">\n                        <a href=\"#\">\n                            <div class=\"row\">\n                                <div class=\"col-sm-12 col-md-6\">\n                                    <span><%row.user_details.name%></span><br>\n                                    <small><%row.user_details.mobile%></small>\n                                    <br>\n                                    <small><%row.user_details.email%></small>\n                                </div>\n                                <div class=\"col-sm-12 col-md-3\">\n                                    <span data-ng-if=\"row.ITR\"><strong><%row.i_t_r.category_name%></strong></span> | FY:\n                                    16-17<br>\n                                    <small> <%row.create_date%></small>\n                                </div>\n                                <div class=\"col-sm-12 col-md-3\">\n                                    <!--<span>Status:</span><br>-->\n                                    <small data-ng-if=\"row.ITR\"><strong><%row.s_t_a_t_u_s.category_name%></strong>\n                                    </small>\n                                </div>\n                            </div>\n                        </a>\n                    </div>\n                    <div class=\"col-sm-12 col-md-2 text-right\">\n                        <a href=\"javascript:void(0);\" ng-click=\"editTabDialog(row)\" class=\"btn btn-success btn-sm\">\n                            Edit</a>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <nav aria-label=\"Page navigation\" class=\"pull-right\">\n            <ul data-ng-if=\"pager.totalItem > 0\" uib-pagination total-items=\"pager.totalItem\"\n                ng-model=\"pager.currentPage\"\n                items-per-page=\"pager.itemPerPage\"\n                max-size=\"pager.maxSize\" ng-change=\"nextPage()\" class=\"pagination\"\n                boundary-link-numbers=\"true\"\n                force-ellipses=\"true\" rotate=\"true\">\n            </ul>\n        </nav>\n    </section>\n\n    <!--<button class=\"add_property_btn\" aria-label=\"Add ITR\" ui-sref=\"add-itr\">\n        <i class=\"fa fa-plus\"></i>\n        <md-tooltip md-direction=\"top\">Add ITR</md-tooltip>\n    </button>-->\n</div>\n");
$templateCache.put("my-profile.html","<div class=\"card card-cascade narrower post_property\">\n    <div class=\"admin-panel info-admin-panel\">\n        <div class=\"card-header success-color white-text\">\n            My Profile\n        </div>\n        <div class=\"card-block\">\n            <form name=\"profileForm\" novalidate data-ng-submit=\"postProfile()\" enctype=\"multipart/form-data\">\n                <div class=\"row\">\n                    <div class=\"col-md-4\">\n                        <md-input-container class=\"md-block\">\n                            <label>Name</label>\n                            <input type=\"text\" name=\"name\" data-ng-model=\"profile.name\">\n                        </md-input-container>\n                    </div>\n                    <div class=\"col-md-4\">\n                        <md-input-container class=\"md-block\">\n                            <label>Email Id</label>\n                            <input type=\"text\" name=\"email\" data-ng-model=\"profile.email\">\n                        </md-input-container>\n                    </div>\n                    <div class=\"col-md-4\">\n                        <md-input-container class=\"md-block\">\n                            <label>Mobile</label>\n                            <input type=\"text\" name=\"mobile\" data-ng-model=\"profile.mobile\">\n                        </md-input-container>\n                    </div>\n                </div>\n\n                <div class=\"row\">\n                    <div class=\"col-md-4\">\n                        <md-input-container class=\"md-block\">\n                            <label>IFSC Code</label>\n                            <input type=\"text\" name=\"ifsc\" data-ng-model=\"profile.ifsc_code\">\n                        </md-input-container>\n                    </div>\n                    <div class=\"col-md-4\">\n                        <md-input-container class=\"md-block\">\n                            <label>Residential Status</label>\n                            <md-select name=\"ITR\" data-ng-model=\"profile.residential_status\">\n                                <md-option ng-repeat=\"res in residence track by $index\" ng-value=\"<%res.value%>\">\n                                    <%res.text%>\n                                </md-option>\n                            </md-select>\n                        </md-input-container>\n                    </div>\n                    <div class=\"col-md-4\">\n                        <md-input-container class=\"md-block\">\n                            <label>Employer Category</label>\n                            <md-select name=\"employer\" data-ng-model=\"profile.employer_category\">\n                                <md-option ng-repeat=\"emp in employer track by $index\" ng-value=\"<%emp.value%>\">\n                                    <%emp.text%>\n                                </md-option>\n                            </md-select>\n                        </md-input-container>\n                    </div>\n                </div>\n                <div class=\"card-block bdr-btm\">\n                    <div class=\"row\">\n                        <div class=\"col-md-8\">\n                            <fieldset class=\"form-group\">\n                                <span>Upload Pan Card</span>\n                            </fieldset>\n                        </div>\n\n                        <div class=\"col-md-4 text-center\">\n                            <label class=\"dp-upload\">\n                                <input type=\"file\" name=\"pan_image\" ng-file-model=\"profile.pan_image\" multiple>\n                                <i class=\"fa fa-upload\"></i> <span>Upload doc</span>\n                            </label>\n                        </div>\n                    </div>\n                    <div class=\"doc_img\" data-ng-repeat=\"row in profile.pan_image track by $index\">\n                        <img data-ng-src=\"<%row|proImageUrl%>\" alt=\"img\">\n                        <a class=\"down_img\" href=\"<%row|downloadProImage%>\" target=\"_self\" download><i class=\"fa fa-download\"></i></a>\n                        <a class=\"remove_img\" data-ng-click=\"remove(row,\'pan_image\')\"><i class=\"fa fa-close\"></i></a>\n                    </div>\n                </div>\n                <div class=\"card-block bdr-btm\">\n                    <div class=\"row\">\n                        <div class=\"col-md-8\">\n                            <fieldset class=\"form-group\">\n                                <span>Previous Year Return</span>\n                            </fieldset>\n                        </div>\n\n                        <div class=\"col-md-4 text-center\">\n                            <label class=\"dp-upload\">\n                                <input type=\"file\" name=\"previous_return_image\" ng-file-model=\"profile.previous_return_image\"\n                                       multiple>\n                                <i class=\"fa fa-upload\"></i> <span>Upload doc</span>\n                            </label>\n                        </div>\n                    </div>\n                    <div class=\"doc_img\" data-ng-repeat=\"row in profile.previous_return_image track by $index\">\n                        <img data-ng-src=\"<%row|proImageUrl%>\" alt=\"img\">\n                        <a class=\"down_img\" href=\"<%row|downloadProImage%>\" target=\"_self\" download><i class=\"fa fa-download\"></i></a>\n                        <a class=\"remove_img\" data-ng-click=\"remove(row,\'previous_return_image\')\"><i class=\"fa fa-close\"></i></a>\n                    </div>\n                </div>\n                <div class=\"card-block bdr-btm\">\n                    <div class=\"row\">\n                        <div class=\"col-md-8\">\n                            <fieldset class=\"form-group\">\n                                <span>Bank Statement</span>\n                            </fieldset>\n                        </div>\n\n                        <div class=\"col-md-4 text-center\">\n                            <label class=\"dp-upload\">\n                                <input type=\"file\" name=\"bank_statement\" ng-file-model=\"profile.bank_statement\" multiple>\n                                <i class=\"fa fa-upload\"></i> <span>Upload doc</span>\n                            </label>\n                        </div>\n                    </div>\n                    <div class=\"doc_img\" data-ng-repeat=\"row in profile.bank_statement track by $index\">\n                        <img data-ng-src=\"<%row|proImageUrl%>\" alt=\"img\">\n                        <a class=\"down_img\" href=\"<%row|downloadProImage%>\" target=\"_self\" download><i class=\"fa fa-download\"></i></a>\n                        <a class=\"remove_img\" data-ng-click=\"remove(row,\'bank_statement\')\"><i class=\"fa fa-close\"></i></a>\n                    </div>\n                </div>\n                <md-input-container class=\"md-block\">\n                    <label>Residence Address</label>\n                    <textarea data-ng-model=\"profile.address\" name=\"address\" rows=\"3\"\n                              md-select-on-focus></textarea>\n                </md-input-container>\n                <div class=\"modal-footer border-top-0 text-center\">\n                    <input data-ng-model=\"propLoc.id\" type=\"hidden\" name=\"id\"/>\n                    <button class=\"btn btn-rounded btn-lg waves-effect waves-light\"\n                            data-ng-disabled=\"activated\">Save\n                    </button>\n                </div>\n            </form>\n        </div>\n    </div>\n</div>");}]);
//# sourceMappingURL=dashboardTemplates.js.map

/**
 * Created by Admin on 5/26/2017.
 */
app
/* .directive('hscp', ['$authModel', '$CONFIG', function ($authModel, $CONFIG) {
 return {
 restrict: 'E', //This menas that it will be used as an attribute and NOT as an element. I don't like creating custom HTML elements
 replace: false,
 templateUrl: function () {
 if ($authModel.viewPermission($CONFIG.$VIEWS_PERMISSION.CHANNEL_PARTNER))
 return "channel-partner.html";
 else
 return "empty.html";
 },
 }
 }])*/
/*.directive('hsOwner', ['$authModel', '$CONFIG', function ($authModel, $CONFIG) {
 return {
 restrict: 'E', //This menas that it will be used as an attribute and NOT as an element. I don't like creating custom HTML elements
 replace: true,
 template: function (element, attrs) {
 var html = '<p></p>';
 if ($authModel.viewPermission($CONFIG.$VIEWS_PERMISSION.CHANNEL_PARTNER)) {
 html = '<p class="pull-right"><span class="owner_name" data-ng-if="row.owner_name"><i class="fa fa-user-md"></i> '
 html += '<span data-ng-bind="row.owner_name"></span><md-tooltip md-direction="top">Owner</md-tooltip></span></p>';
 }
 return html
 },
 }
 }])*/
/* .directive('hsDealAdd', ['$authModel', '$CONFIG', function ($authModel, $CONFIG) {
 return {
 restrict: 'E', //This menas that it will be used as an attribute and NOT as an element. I don't like creating custom HTML elements
 replace: true,
 template: function (element, attrs) {
 var html = '<div></div>';
 if ($authModel.viewPermission($CONFIG.$VIEWS_PERMISSION.ADD_DEAL)) {
 html = '<button class="add_property_btn" aria-label="Add Offers" data-ng-click="addDeal();">'
 html += '<i class="fa fa-plus"></i><md-tooltip md-direction="top">Add Offers</md-tooltip></button>';
 }
 return html
 },
 }
 }])*/
/*.directive('hsDealAction', ['$authModel', '$CONFIG', function ($authModel, $CONFIG) {
 return {
 restrict: 'E', //This menas that it will be used as an attribute and NOT as an element. I don't like creating custom HTML elements
 replace: true,
 template: function (element, attrs) {
 var cls = false;
 var html = '';
 if ($authModel.viewPermission($CONFIG.$VIEWS_PERMISSION.EDIT_DEAL))
 cls = true, html += '<a data-ng-click="edit(row)" class="teal-text"><i class="fa fa-pencil"></i><md-tooltip md-direction="top"> Edit </md-tooltip></a>';
 if ($authModel.viewPermission($CONFIG.$VIEWS_PERMISSION.PUBLISH_DEAL))
 cls = true, html += '&nbsp;&nbsp;&nbsp; <a class="<%row.is_active>0?\'green-text\':\'red-text\'%>" data-ng-click="publish(row)"><i class="fa <%row.is_active>0?\'fa-check\':\'fa-times\'%>"></i> <md-tooltip md-direction="top"><%row.is_active>0?\'Published\':\'UnPublished\'%>  Created By: <%row.created_by.name%></md-tooltip></a>';
 if ($authModel.viewPermission($CONFIG.$VIEWS_PERMISSION.APPROVE_DEAL))
 cls = true, html += '&nbsp;&nbsp;&nbsp; <a class="<%row.is_approved>0?\'blue-text\':\'orange-text\'%>" data-ng-click="approve(row)" class="teal-text"><i class="fa <%row.is_approved>0?\'fa-arrow-circle-up\':\'fa-arrow-circle-down\'%>"></i><md-tooltip md-direction="top"><%row.is_approved>0?\'Approved,\':\'Pending,\'%> Approved By: <%row.approved_by.name%> </md-tooltip></a>';
 return cls ? '<span class="btn btn-outline-info btn-rounded">' + html + '</span>' : '<span></span>'
 },
 }
 }])*/
    .directive('itrMode', function () {
        return {
            restrict: 'E',
            replace: true,
            link: function (scope, element, attrs) {
                scope.$watch('itr.ITR', function (newValue, oldValue) {
                    if (newValue && newValue > 2) {
                        scope.getContentUrl = function () {
                            return 'itr_' + parseInt(newValue) + '.html';
                        }
                    } else {
                        scope.getContentUrl = function () {
                            return 'empty.html';
                        }
                    }
                });

            },
            template: '<div ng-include="getContentUrl()"></div>'
        }
    })
    .directive('saveBtn', ['$authModel', '$CONFIG', function ($authModel, $CONFIG) {
        return {
            restrict: 'E',
            replace: true,
            template: function (element, attrs) {
                var html =
                    '<button class="btn btn-rounded btn-lg waves-effect waves-light mt-1"' +
                    'data-ng-disabled="activated">Save' +
                    '</button>';
                return !$authModel.viewPermission($CONFIG.$ROLES.ADMIN) ? html : '<span></span>'

            }
        }
    }])
    .directive('nextBtn', ['$authModel', '$CONFIG', function ($authModel, $CONFIG) {
        return {
            restrict: 'E',
            replace: true,
            template: function (element, attrs) {
                var html =
                    '<a class="btn btn-rounded btn-lg waves-effect waves-light mt-1"' +
                    'data-ng-click="nextTab()">Next </a>';
                return $authModel.viewPermission($CONFIG.$ROLES.ADMIN) ? html : '<span></span>'

            }
        }
    }])
    .directive('uploadBtn', ['$authModel', '$CONFIG', function ($authModel, $CONFIG) {
        return {
            restrict: 'E',
            replace: true,
            template: function (element, attrs) {
                var html =
                    '<div class="col-md-4 text-center">' +
                    '<label class="dp-upload">' +
                    '<input type="file" ng-file-model="' + attrs.name + '" multiple>' +
                    '<i class="fa fa-upload"></i> <span>Upload doc</span>' +
                    '</label></div>';
                return !$authModel.viewPermission($CONFIG.$ROLES.ADMIN) ? html : '<span></span>'
            }
        }
    }])
    .directive('delImage', ['$authModel', '$CONFIG', function ($authModel, $CONFIG) {
        return {
            restrict: 'E',
            replace: true,
            template: function (element, attrs) {
                var html =
                    '<a class="remove_img"><i class="fa fa-close"></i></a>';
                return !$authModel.viewPermission($CONFIG.$ROLES.ADMIN) ? html : '<span></span>'
            }
        }
    }])
    .directive('sortBy', ['$authModel', '$CONFIG', function ($authModel, $CONFIG) {
        return {
            restrict: 'E',
            replace: true,
            transclude: true,
            template: function (element, attrs) {
                var html =
                    '<div class="col-md-8 text-right" data-ng-show="directives" ng-transclude>' +
                    '</div>';
                return $authModel.viewPermission($CONFIG.$ROLES.ADMIN) ? html : '<span></span>'
            }
        }
    }])
    .directive('itrStatus', ['$authModel', '$CONFIG', function ($authModel, $CONFIG) {
        return {
            restrict: 'E',
            replace: true,
            template: function (element, attrs) {
                var html =
                    '<div class="col-md-4" data-ng-show="directives">' +
                    '<md-input-container class="md-block"><label>Status</label>' +
                    '<md-select name="status" data-ng-disabled="disabled" data-ng-change="changeStatus()" ng-model="itr.status">' +
                    '<md-option ng-repeat="sta in status track by $index" ng-value="<%sta.value%>">' +
                    '<%sta.text%></md-option>' +
                    '<md-option ng-value="0">All' +
                    '</md-option></md-select></md-input-container></div>';
                return $authModel.viewPermission($CONFIG.$ROLES.ADMIN) ? html : '<span></span>'
            }
        }
    }])
    .directive('addCorpItr', ['$authModel', '$CONFIG', function ($authModel, $CONFIG) {
        return {
            restrict: 'E',
            replace: true,
            template: function (element, attrs) {
                var html =
                    '<div class="row" data-ng-if="itr_exists">' +
                    '<div class="col-sm-12 col-md-3 text-right">' +
                    '<a ui-sref="add-corp-itr" class="btn btn-primary">' +
                    'ADD ITR</a>' +
                    '</div></div>'
                return !$authModel.viewPermission($CONFIG.$ROLES.ADMIN) ? html : '<span></span>'
            }
        }
    }])

    .directive('itrCheck', ['$authModel', '$CONFIG', function ($authModel, $CONFIG) {
        return {
            restrict: 'E',
            replace: true,
            template: function (element, attrs) {
                var html =
                    '<fieldset class="form-group">' +
                    '<input type="checkbox" ng-checked="exists(row.id, itr.selected)" ng-click="toggle(row.id, itr.selected)" name="checkbox" ng-value="row.id" id="checkbox-<%$index%>">' +
                    '<label for="checkbox-<%$index%>"></label>' +
                    '</fieldset>';
                return $authModel.viewPermission($CONFIG.$ROLES.ADMIN) ? html : '<span></span>'
            }
        }
    }])
    .directive('fileModel', ['$parse', function ($parse) {
        return {
            restrict: 'A',
            link: function (scope, element, attrs) {
                var model = $parse(attrs.fileModel);
                var modelSetter = model.assign;
                element.bind('change', function () {
                    scope.$apply(function () {
                        modelSetter(scope, element[0].files);
                    });
                });
            }
        };
    }])

    .directive('ngFileModel', ['$parse', '$CONFIG', function ($parse, $CONFIG) {
        return {
            restrict: 'A',
            link: function (scope, element, attrs) {
                var model = $parse(attrs.ngFileModel);
                var isMultiple = attrs.multiple;
                var modelSetter = model.assign;
                var values = [];
                element.bind('change', function () {
                    angular.forEach(element[0].files, function (item) {
                        var value = {
                            // File Name
                            name: item.name,
                            //File Size
                            size: item.size,
                            //File URL to view
                            url: item.type == 'application/pdf' ? $CONFIG.PDF_DEFAULT_IMAGE : URL.createObjectURL(item),
                            // File Input Value
                            _file: item
                        };
                        values.push(value);
                    });
                    scope.$apply(function () {
                        if (isMultiple) {
                            modelSetter(scope, values);
                        } else {
                            modelSetter(scope, values[0]);
                        }
                    });
                });
            }
        };
    }])

    .directive('ngDropzone', ['$timeout', 'dropzoneOps', function ($timeout, dropzoneOps) {
        return {
            restrict: 'AE',
            template: '<div></div>',
            replace: true,
            scope: {
                options: '=?', //http://www.dropzonejs.com/#configuration-options
                callbacks: '=?', //http://www.dropzonejs.com/#events
                methods: '=?' //http://www.dropzonejs.com/#dropzone-methods
            },
            link: function (scope, iElem, iAttr) {
                //Set options for dropzone {override from dropzone options provider}
                scope.options = scope.options || {};

                var initOps = angular.extend({}, dropzoneOps, scope.options);


                //Instantiate dropzone with initOps
                var dropzone = new Dropzone(iElem[0], initOps);


                /*********************************************/


                //Instantiate Dropzone methods (Control actions)
                scope.methods = scope.methods || {};
                scope.methods.getDropzone = function () {
                    return dropzone; //Return dropzone instance
                };

                scope.methods.getAllFiles = function () {
                    return dropzone.files; //Return all files
                };

                var controlMethods = [
                    'removeFile', 'removeAllFiles', 'processQueue',
                    'getAcceptedFiles', 'getRejectedFiles', 'getQueuedFiles', 'getUploadingFiles',
                    'disable', 'enable', 'confirm', 'createThumbnailFromUrl'
                ];

                angular.forEach(controlMethods, function (methodName) {
                    scope.methods[methodName] = function () {
                        dropzone[methodName].apply(dropzone, arguments);
                        if (!scope.$$phase && !scope.$root.$$phase)
                            scope.$apply();
                    }
                });


                /*********************************************/


                //Set invents (callbacks)
                if (scope.callbacks) {
                    var callbackMethods = [
                        'drop', 'dragstart', 'dragend',
                        'dragenter', 'dragover', 'dragleave', 'addedfile', 'removedfile',
                        'thumbnail', 'error', 'processing', 'uploadprogress',
                        'sending', 'success', 'complete', 'canceled', 'maxfilesreached',
                        'maxfilesexceeded', 'processingmultiple', 'sendingmultiple', 'successmultiple',
                        'completemultiple', 'canceledmultiple', 'totaluploadprogress', 'reset', 'queuecomplete'
                    ];
                    angular.forEach(callbackMethods, function (method) {
                        var callback = (scope.callbacks[method] || angular.noop);
                        dropzone.on(method, function () {
                            callback.apply(null, arguments);
                            if (!scope.$$phase && !scope.$root.$$phase)
                                scope.$apply();
                        });
                    });
                }
            }
        }
    }])
    .provider('dropzoneOps', function () {
        /*
         *	Add default options here
         **/
        var defOps = {
            //Add your options here
        };

        return {
            setOptions: function (newOps) {
                angular.extend(defOps, newOps);
            },
            $get: function () {
                return defOps;
            }
        }
    })
/**
 * Created by Admin on 4/18/2017.
 */

angular.module("101housing").requires.push('dashboardTemplates');
app
    .constant()
    .controller('dashboardCtrl', ['$scope', '$rootScope', '$state', '$stateParams', '$filter', '$dashboardModel', function ($scope, $rootScope, $state, $stateParams, $filter, $dashboardModel) {
    }])
    .controller('passwordCtrl', ['$scope', '$dashboardModel', '$appModel', 'toastr', function ($scope, $dashboardModel, $appModel, toastr) {
        angular.extend($scope, {
            changePassword: function () {
                if ($scope.passwordForm.$valid) {
                    $appModel.progressBar(true, $scope);
                    changePassword($scope.user);
                }
            }
        });

        function changePassword(data) {
            $dashboardModel.changePassword(data).then(function (result) {
                if (result.data.success) {
                    toastr.success(result.data.message, 'Success!');
                    $scope.user = {};
                    $scope.passwordForm.$setPristine();
                    $scope.passwordForm.$setUntouched();
                } else {
                    toastr.warning(result.data.message, 'Warning!');
                }
                $appModel.progressBar(false, $scope);
            });
        }
    }])
    .controller('profileCtrl', ['$scope', '$rootScope', '$dashboardModel', '$filter', '$CONFIG', '$appModel', 'toastr', function ($scope, $rootScope, $dashboardModel, $filter, $CONFIG, $appModel, toastr) {
        getUserProfile();
        angular.extend($scope, {
            postProfile: function () {
                var myFormData = new FormData();
                angular.forEach($scope.profile.pan_image, function (value, key) {
                    myFormData.append('pan_image[]', value._file);
                });
                angular.forEach($scope.profile.previous_return_image, function (value, key) {
                    myFormData.append('previous_return_image[]', value._file);
                });
                angular.forEach($scope.profile.bank_statement, function (value, key) {
                    myFormData.append('bank_statement[]', value._file);
                });
                myFormData.append('ifsc_code', $scope.profile.ifsc_code);
                myFormData.append('name', $scope.profile.name);
                // myFormData.append('email', $scope.profile.email);
                // myFormData.append('mobile', $scope.profile.mobile);
                myFormData.append('residential_status', $scope.profile.residential_status);
                myFormData.append('employer_category', $scope.profile.employer_category);
                myFormData.append('address', $scope.profile.address);
                postUserProfile(myFormData);
            },
            btnText: 'Update',

            remove: function (item, obj) {
                if (confirm("Are You Sure to Delete?"))
                    if (!item.agent_id) {
                        var index = $scope.profile[obj].indexOf(item);
                        $scope.profile[obj].splice(index, 1);
                    } else {
                        var data = {
                            agent_id: item.agent_id,
                            category: item.category,
                            img_name: item.image
                        };
                        deleteImage(data, item, obj);
                    }
            }
        });

        function deleteImage(data, item, obj) {
            $dashboardModel.deleteITRImage(data).then(function (result) {
                if (result.data.success) {
                    var index = $scope.profile[obj].indexOf(item);
                    $scope.profile[obj].splice(index, 1);
                }
            })
        }

        function getUserProfile() {
            $dashboardModel.getUserProfile().then(function (result) {
                if (result.data.success) {
                    var profile = result.data.data;
                    angular.extend($scope, {
                        profile: {
                            name: profile.name,
                            email: profile.email,
                            mobile: profile.mobile,
                            residential_status: profile.residential_status,
                            employer_category: profile.employer_category,
                            ifsc_code: profile.ifsc_code == "null" ? '' : profile.ifsc_code,
                            address: profile.address == "null" ? '' : profile.address,
                            pan_image: $filter('parseImageCategory')(profile.images, $CONFIG.ITR_Image_Category.pan_image),
                            previous_return_image: $filter('parseImageCategory')(profile.images, $CONFIG.ITR_Image_Category.previous_return_image),
                            bank_statement: $filter('parseImageCategory')(profile.images, $CONFIG.ITR_Image_Category.bank_statement)
                        }
                    })
                }
            });
        }

        function postUserProfile(myFormData) {
            $dashboardModel.postUserProfile(myFormData).then(function (result) {
                if (result.data.success) {
                    $appModel.progressBar(false, $scope);
                    toastr.success(result.data.message, 'Success!');
                }
            });
        }

        $scope.$watchCollection(function () {
            return $appModel.loadMasterCategory;
        }, function (newval, oldval) {
            if ($appModel.loadMasterCategory.length > 0) {
                var loadMaster = $filter('parseParent')($appModel.loadMasterCategory, 0);
                $scope.residence = loadMaster.residential_status;
                $scope.employer = loadMaster.employer_category;
            }
        });
    }])
    .controller('ITRListCtrl', ['$scope', '$state', '$filter', 'resolveData', 'toastr', '$appModel', '$dashboardModel', 'localStorageService', function ($scope, $state, $filter, resolveData, toastr, $appModel, $dashboardModel, localStorageService) {
        var data = {
            ITR: localStorageService.get('itr_id')
        };
        if (data.hasOwnProperty('ITR') && data.ITR > 0)
            $dashboardModel.selectITR(data).then(function (result) {
                if (result.data.success) {
                    $state.go('add-itr', {id: result.data.data});
                    localStorageService.clearAll();
                }
            });
        if (!$dashboardModel.itrList.length > 0) {
            // $scope.show = true;
            // $scope.loader = true;
            $scope.not_found = true;
            $scope.message = 'Data Not Found';
            return false;
        }
        // $scope.disabled = true;
        angular.extend($scope, {
            filterdata: {
                minValue: 0,
                maxValue: 100000
            },
            status: {},
            itr: {selected: []},
            toggle: function (item, list) {
                toggleCheckbox(parseInt(item), list);
            },
            exists: function (item, list) {
                return list.indexOf(parseInt(item)) > -1;
            },
            editTabDialog: function (row) {
                $state.go('add-itr', {id: row.id});
            },
            sortby: function (item, order) {
                order = order ? 'desc' : 'asc';
                var data = angular.extend($scope.filterdata, {orderby: item, order: order});
                itrList(data, item, order);
            },

            changeStatus: function () {
                console.log($scope.itr)
                if ($scope.itr && $scope.itr.status > 0 && $scope.itr.selected.length > 0) {
                    var data = {
                        id: $scope.itr.selected,
                        status: $scope.itr.status
                    };
                    itrStatus(data);
                } else if (!$scope.itr.selected.length > 0 && $scope.itr) {
                    var status = {
                        status: $scope.itr.status
                    };
                    itrList(status);
                }
            }
        });
        function itrList(data) {
            data = {
                status: data.status,
                orderBy: data.orderby,
                order: data.order
            };
            $dashboardModel.ITRList(data).then(function (result) {
                if (!result.data.data.length > 0) {
                    $scope.no_item = true;
                    $scope.hide_list = true;
                } else {
                    $scope.hide_list = false;
                    $scope.no_item = false;
                }
            })
        }

        $scope.$watchCollection(function () {
            return $dashboardModel.itrList;
        }, function (newval, oldval) {
            if ($dashboardModel.itrList.length > 0) {
                $scope.ITR = $dashboardModel.itrList;
                $scope.not_found = $scope.ITR.length > 0 ? false : true;
                $scope.directives = $scope.ITR.length > 0 ? true : false;
            }
        });

        function toggleCheckbox(item, list) {
            var idx = list.indexOf(item);
            if (idx > -1) {
                list.splice(idx, 1);
            } else {
                list.push(item);
            }
        }

        function itrStatus(data) {
            $dashboardModel.itrStatus(data).then(function (result) {
                if (result.data.success) {
                    toastr.success("status Updated", 'Success!');
                }
                $appModel.progressBar(false, $scope);
            })
        }

        $scope.$watchCollection(function () {
            return $appModel.loadMasterCategory;
        }, function (newval, oldval) {
            if ($appModel.loadMasterCategory.length > 0) {
                var loadMaster = $filter('parseParent')($appModel.loadMasterCategory, 0);
                $scope.status = loadMaster.application_status;
            }
        });
    }])
    .controller('addITRCtrl', ['$scope', '$rootScope', '$state', '$stateParams', '$CONFIG', 'toastr', '$filter', '$API', '$timeout', '$appModel', '$authModel', 'resolveData', '$dashboardModel', function ($scope, $rootScope, $state, $stateParams, $CONFIG, toastr, $filter, $API, $timeout, $appModel, $authModel, resolveData, $dashboardModel) {
        getUserProfile();
        angular.extend($scope, {
            tabs: {
                max: 2,
                selectedIndex: 0,
                disable: true
            },
            first: true,
            showBtns: false,
            lastFile: null,
            dzMethods: {},
            dzOptions: {
                url: $API.POST_PROPERTY_IMAGE,
                dictDefaultMessage: '<i class="fa fa-plus"></i> Drop image or click to choose image',
                parallelUploads: 4,
                autoProcessQueue: false,
                acceptedFiles: 'image/jpeg, images/jpg, image/png',
                addRemoveLinks: true,
                uploadMultiple: true,
                dictCancelUpload: '',
                maxFilesize: '2'
                // maxFiles: 4,
            },
            dzCallbacks: {
                'addedfile': function (file, xhr, formData) {
                    $scope.showBtns = true;
                    $scope.lastFile = true;
                },
                'sendingmultiple': function (file, xhr, formData) {
                    formData.append("_token", csrfToken);
                    formData.append("pid", $scope.property.id);
                },
                'successmultiple': function (file, result) {
                    if (result.success) {
                        $scope.pop_gallery = {images: result.image};
                    }
                },
                'error': function (file, xhr) {
                    if (file.size > 2 * 1000) {
                        alert(xhr);
                    }
                    console.warn('File failed to upload from dropzone 2.', file, xhr);
                },
                'completemultiple': function (file) {
                    angular.forEach(file, function (value, key) {
                        $scope.dzMethods.removeFile(value);
                    });
                },
                'queuecomplete': function (file) {
                    $scope.showBtns = false;
                    $scope.lastFile = null;
                }
            },
            remove: function (item, obj) {
                if (confirm("Are you sure?"))
                    if (!item.itr_id && !item.agent_id) {
                        if (!obj.pan_image && !obj.previous_return_image && !obj.bank_statement) {
                            var index = $scope.itr[obj].indexOf(item);
                            $scope.itr[obj].splice(index, 1);
                        }
                    } else if (!item.agent_id && !item.itr_id && obj.pan_image || obj.previous_return_image || obj.bank_statement) {
                        var index = $scope.profile[obj].indexOf(item);
                        $scope.profile[obj].splice(index, 1);
                    }
                    else {
                        var data = {
                            itr_id: item.itr_id,
                            agent_id: item.agent_id,
                            category: item.category,
                            img_name: item.image
                        };
                        deleteImage(data, item, obj);
                    }
            },

            postProfile: function () {
                var myFormData = new FormData();
                angular.forEach($scope.user.pan_image, function (value, key) {
                    myFormData.append('pan_image[]', value._file);
                });
                angular.forEach($scope.user.previous_return_image, function (value, key) {
                    myFormData.append('previous_return_image[]', value._file);
                });
                angular.forEach($scope.user.bank_statement, function (value, key) {
                    myFormData.append('bank_statement[]', value._file);
                });
                myFormData.append('ifsc_code', $scope.user.ifsc_code);
                myFormData.append('name', $scope.user.name);
                myFormData.append('residential_status', $scope.user.residential_status);
                myFormData.append('employer_category', $scope.user.employer_category);
                myFormData.append('address', $scope.user.address);
                postUserProfile(myFormData);
            },
            submitITR1: function () {
                if ($scope.taxForm.$valid) {
                    $appModel.progressBar(true, $scope);
                    var myFormData = new FormData();
                    angular.forEach($scope.itr.form_16, function (value, key) {
                        myFormData.append('form_16[]', value._file);
                    });
                    angular.forEach($scope.itr.loan_certificate, function (value, key) {
                        myFormData.append('loan_certificate[]', value._file);
                    });
                    angular.forEach($scope.itr.interest_certificate, function (value, key) {
                        myFormData.append('interest_certificate[]', value._file);
                    });
                    angular.forEach($scope.itr.claim_80C, function (value, key) {
                        myFormData.append('claim_80C[]', value._file);
                    });
                    angular.forEach($scope.itr.claim_80D, function (value, key) {
                        myFormData.append('claim_80D[]', value._file);
                    });
                    angular.forEach($scope.itr.claim_80G, function (value, key) {
                        myFormData.append('claim_80G[]', value._file);
                    });
                    angular.forEach($scope.itr.other_deduction, function (value, key) {
                        myFormData.append('other_deduction[]', value._file);
                    });
                    angular.forEach($scope.itr.tax_challan, function (value, key) {
                        myFormData.append('tax_challan[]', value._file);
                    });
                    angular.forEach($scope.itr.form_26A, function (value, key) {
                        myFormData.append('form_26A[]', value._file);
                    });
                    myFormData.append('ITR', $scope.itr.ITR);
                    myFormData.append('form_16_amnt', $scope.itr.form_16_amnt);
                    myFormData.append('house_income', $scope.itr.house_income);
                    myFormData.append('interest_income', $scope.itr.interest_income);
                    myFormData.append('id', $scope.itr.id);
                    saveITR1(myFormData);
                }
            },
            submitITR2: function () {
                $appModel.progressBar(true, $scope);
                var myFormData = new FormData();
                angular.forEach($scope.itr.co_owned_prop_image, function (value, key) {
                    myFormData.append('co_owned_prop_image[]', value._file);
                });
                angular.forEach($scope.itr.partner_firm_image, function (value, key) {
                    myFormData.append('partner_firm_image[]', value._file);
                });
                angular.forEach($scope.itr.capital_gain_image, function (value, key) {
                    myFormData.append('capital_gain_image[]', value._file);
                });
                angular.forEach($scope.itr.othr_source_incm_image, function (value, key) {
                    myFormData.append('othr_source_incm_image[]', value._file);
                });
                angular.forEach($scope.itr.immovable_asset_image, function (value, key) {
                    myFormData.append('immovable_asset_image[]', value._file);
                });
                angular.forEach($scope.itr.outside_income_image, function (value, key) {
                    myFormData.append('outside_income_image[]', value._file);
                });
                angular.forEach($scope.itr.assets_partner_image, function (value, key) {
                    myFormData.append('assets_partner_image[]', value._file);
                });
                angular.forEach($scope.itr.othr_cntry_tax_paid_img, function (value, key) {
                    myFormData.append('othr_cntry_tax_paid_img[]', value._file);
                });
                myFormData.append('co_owned_prop', $scope.itr.co_owned_prop ? true : false);
                myFormData.append('partner_firms', $scope.itr.partner_firms);
                myFormData.append('capital_gains', $scope.itr.capital_gains);
                myFormData.append('other_source_income', $scope.itr.other_source_income);
                myFormData.append('immovable_assets', $scope.itr.immovable_assets);
                myFormData.append('outside_income', $scope.itr.outside_income);
                myFormData.append('assets_partner', $scope.itr.assets_partner);
                myFormData.append('other_cntry_tax', $scope.itr.other_cntry_tax);
                myFormData.append('return_filing_date', $filter('date')(new Date($scope.itr.return_filing_date), 'yyyy-MM-dd'));
                myFormData.append('loss_amnt', $scope.itr.loss_amnt);
                myFormData.append('jewellery_amnt', $scope.itr.jewellery_amnt);
                myFormData.append('paintings_amnt', $scope.itr.paintings_amnt);
                myFormData.append('vehicles_amnt', $scope.itr.vehicles_amnt);
                myFormData.append('bank_amnt', $scope.itr.bank_amnt);
                myFormData.append('share_amnt', $scope.itr.share_amnt);
                myFormData.append('loan_amnt', $scope.itr.loan_amnt);
                myFormData.append('cash_amnt', $scope.itr.cash_amnt);
                myFormData.append('other_liability_amnt', $scope.itr.other_liability_amnt);
                myFormData.append('id', $scope.itr.id);
                saveITR2(myFormData);
            },
            submitITR3: function () {
                $appModel.progressBar(true, $scope);
                var myFormData = new FormData();
                angular.forEach($scope.itr.complete_finance_image, function (value, key) {
                    myFormData.append('complete_finance_image[]', value._file);
                });
                angular.forEach($scope.itr.co_owned_prop_image, function (value, key) {
                    myFormData.append('co_owned_prop_image[]', value._file);
                });
                angular.forEach($scope.itr.partner_firm_image, function (value, key) {
                    myFormData.append('partner_firm_image[]', value._file);
                });
                angular.forEach($scope.itr.capital_gain_image, function (value, key) {
                    myFormData.append('capital_gain_image[]', value._file);
                });
                angular.forEach($scope.itr.othr_source_incm_image, function (value, key) {
                    myFormData.append('othr_source_incm_image[]', value._file);
                });
                angular.forEach($scope.itr.immovable_asset_image, function (value, key) {
                    myFormData.append('immovable_asset_image[]', value._file);
                });
                angular.forEach($scope.itr.outside_income_image, function (value, key) {
                    myFormData.append('outside_income_image[]', value._file);
                });
                angular.forEach($scope.itr.assets_partner_image, function (value, key) {
                    myFormData.append('assets_partner_image[]', value._file);
                });
                angular.forEach($scope.itr.othr_cntry_tax_paid_img, function (value, key) {
                    myFormData.append('othr_cntry_tax_paid_img[]', value._file);
                });
                angular.forEach($scope.itr.audit_report_img, function (value, key) {
                    myFormData.append('audit_report_img[]', value._file);
                });
                myFormData.append('business_nature', $scope.itr.business_nature);
                myFormData.append('co_owned_prop', $scope.itr.co_owned_prop);
                myFormData.append('partner_firms', $scope.itr.partner_firms);
                myFormData.append('capital_gains', $scope.itr.capital_gains);
                myFormData.append('other_source_income', $scope.itr.other_source_income);
                myFormData.append('immovable_assets', $scope.itr.immovable_assets);
                myFormData.append('outside_income', $scope.itr.outside_income);
                myFormData.append('assets_partner', $scope.itr.assets_partner);
                myFormData.append('other_cntry_tax', $scope.itr.other_cntry_tax);
                myFormData.append('audit_report', $scope.itr.audit_report);
                myFormData.append('loss_amnt', $scope.itr.loss_amnt);
                myFormData.append('jewellery_amnt', $scope.itr.jewellery_amnt);
                myFormData.append('paintings_amnt', $scope.itr.paintings_amnt);
                myFormData.append('vehicles_amnt', $scope.itr.vehicles_amnt);
                myFormData.append('bank_amnt', $scope.itr.bank_amnt);
                myFormData.append('return_filing_date', $filter('date')(new Date($scope.itr.return_filing_date), 'yyyy-MM-dd'));
                myFormData.append('share_amnt', $scope.itr.share_amnt);
                myFormData.append('loan_amnt', $scope.itr.loan_amnt);
                myFormData.append('cash_amnt', $scope.itr.cash_amnt);
                myFormData.append('other_liability_amnt', $scope.itr.other_liability_amnt);
                myFormData.append('id', $scope.itr.id);
                saveITR3(myFormData);
            },
            submitITR4: function () {
                $appModel.progressBar(true, $scope);
                var myFormData = new FormData();
                angular.forEach($scope.itr.othr_source_incm_image, function (value, key) {
                    myFormData.append('othr_source_incm_image[]', value._file);
                });
                angular.forEach($scope.itr.immovable_asset_image, function (value, key) {
                    myFormData.append('immovable_asset_image[]', value._file);
                });
                angular.forEach($scope.itr.assets_partner_image, function (value, key) {
                    myFormData.append('assets_partner_image[]', value._file);
                });
                myFormData.append('business_nature', $scope.itr.business_nature);
                myFormData.append('turnover', $scope.itr.turnover);
                myFormData.append('net_profit', $scope.itr.net_profit);
                myFormData.append('jewellery_amnt', $scope.itr.jewellery_amnt);
                myFormData.append('paintings_amnt', $scope.itr.paintings_amnt);
                myFormData.append('vehicles_amnt', $scope.itr.vehicles_amnt);
                myFormData.append('bank_amnt', $scope.itr.bank_amnt);
                myFormData.append('share_amnt', $scope.itr.share_amnt);
                myFormData.append('loan_amnt', $scope.itr.loan_amnt);
                myFormData.append('cash_amnt', $scope.itr.cash_amnt);
                myFormData.append('other_liability_amnt', $scope.itr.other_liability_amnt);
                myFormData.append('other_source_income', $scope.itr.other_source_income);
                myFormData.append('immovable_assets', $scope.itr.immovable_assets);
                myFormData.append('assets_partner', $scope.itr.assets_partner);
                myFormData.append('id', $scope.itr.id);
                saveITR4(myFormData);
            },
            nextTab: function () {
                $dashboardModel.nextTab($scope);
            },
            backTab: function () {
                $dashboardModel.backTab($scope);
            }
        });
        if (resolveData && resolveData.data.success) {
            var ITRDetails = resolveData.data.data;
            fillITR(ITRDetails);
            $scope.tabs.disable = false;
        }
        function fillITR(ITRDetails) {
            angular.extend($scope, {
                user: {
                    name: ITRDetails.user_details.name,
                    email: ITRDetails.user_details.email,
                    mobile: ITRDetails.user_details.mobile,
                    ifsc_code: ITRDetails.user_details.ifsc_code ? ITRDetails.user_details.ifsc_code : '',
                    residential_status: ITRDetails.user_details.residential_status,
                    employer_category: ITRDetails.user_details.employer_category,
                    address: ITRDetails.user_details.address ? ITRDetails.user_details.address : '',
                    pan_image: $filter('parseImageCategory')(ITRDetails.profile_images, $CONFIG.ITR_Image_Category.pan_image),
                    previous_return_image: $filter('parseImageCategory')(ITRDetails.profile_images, $CONFIG.ITR_Image_Category.previous_return_image),
                    bank_statement: $filter('parseImageCategory')(ITRDetails.profile_images, $CONFIG.ITR_Image_Category.bank_statement)

                },
                itr: {
                    id: ITRDetails.id,
                    ITR: ITRDetails.ITR,
                    form_16_amnt: ITRDetails.form_16_amnt == 0.00 ? '' : ITRDetails.form_16_amnt,
                    house_income: ITRDetails.house_income == 0.00 ? '' : ITRDetails.house_income,
                    interest_income: ITRDetails.interest_income == 0.00 ? '' : ITRDetails.interest_income,
                    form_16: $filter('parseImageCategory')(ITRDetails.itr_images, $CONFIG.ITR_Image_Category.form_16),
                    loan_certificate: $filter('parseImageCategory')(ITRDetails.itr_images, $CONFIG.ITR_Image_Category.loan_certificate),
                    interest_certificate: $filter('parseImageCategory')(ITRDetails.itr_images, $CONFIG.ITR_Image_Category.interest_certificate),
                    claim_80C: $filter('parseImageCategory')(ITRDetails.itr_images, $CONFIG.ITR_Image_Category.claim_80C),
                    claim_80D: $filter('parseImageCategory')(ITRDetails.itr_images, $CONFIG.ITR_Image_Category.claim_80D),
                    claim_80G: $filter('parseImageCategory')(ITRDetails.itr_images, $CONFIG.ITR_Image_Category.claim_80G),
                    other_deduction: $filter('parseImageCategory')(ITRDetails.itr_images, $CONFIG.ITR_Image_Category.other_deduction),
                    tax_challan: $filter('parseImageCategory')(ITRDetails.itr_images, $CONFIG.ITR_Image_Category.tax_challan),
                    form_26A: $filter('parseImageCategory')(ITRDetails.itr_images, $CONFIG.ITR_Image_Category.form_26A),
                    co_owned_prop: ITRDetails.co_owned_prop == 1 ? ITRDetails.co_owned_prop = true : ITRDetails.co_owned_prop = false,
                    co_owned_prop_image: $filter('parseImageCategory')(ITRDetails.itr_images, $CONFIG.ITR_Image_Category.co_owned_prop_image),
                    partner_firms: ITRDetails.partner_firms == 1 ? ITRDetails.partner_firms = true : ITRDetails.partner_firms = false,
                    partner_firm_image: $filter('parseImageCategory')(ITRDetails.itr_images, $CONFIG.ITR_Image_Category.partner_firm_image),
                    capital_gains: ITRDetails.capital_gains == 1 ? ITRDetails.capital_gains = true : ITRDetails.capital_gains = false,
                    capital_gain_image: $filter('parseImageCategory')(ITRDetails.itr_images, $CONFIG.ITR_Image_Category.capital_gain_image),
                    other_source_income: ITRDetails.other_source_income == 1 ? ITRDetails.other_source_income = true : ITRDetails.other_source_income = false,
                    othr_source_incm_image: $filter('parseImageCategory')(ITRDetails.itr_images, $CONFIG.ITR_Image_Category.othr_source_incm_image),
                    immovable_assets: ITRDetails.immovable_assets == 1 ? ITRDetails.immovable_assets = true : ITRDetails.immovable_assets = false,
                    immovable_asset_image: $filter('parseImageCategory')(ITRDetails.itr_images, $CONFIG.ITR_Image_Category.immovable_asset_image),
                    outside_income: ITRDetails.outside_income == 1 ? ITRDetails.outside_income = true : ITRDetails.outside_income = false,
                    outside_income_image: $filter('parseImageCategory')(ITRDetails.itr_images, $CONFIG.ITR_Image_Category.outside_income_image),
                    assets_partner: ITRDetails.assets_partner == 1 ? ITRDetails.assets_partner = true : ITRDetails.assets_partner = false,
                    assets_partner_image: $filter('parseImageCategory')(ITRDetails.itr_images, $CONFIG.ITR_Image_Category.assets_partner_image),
                    return_filing_date: ITRDetails.return_filing_date == "0000-00-00 00:00:00" ? '' : new Date(ITRDetails.return_filing_date),
                    loss_amnt: ITRDetails.loss_amnt == 0.00 ? '' : ITRDetails.loss_amnt,
                    other_cntry_tax: ITRDetails.other_cntry_tax == 1 ? ITRDetails.other_cntry_tax = true : ITRDetails.other_cntry_tax = false,
                    othr_cntry_tax_paid_img: $filter('parseImageCategory')(ITRDetails.itr_images, $CONFIG.ITR_Image_Category.othr_cntry_tax_paid_img),
                    jewellery_amnt: ITRDetails.jewellery_amnt == 0.00 ? '' : ITRDetails.jewellery_amnt,
                    paintings_amnt: ITRDetails.paintings_amnt == 0.00 ? '' : ITRDetails.paintings_amnt,
                    vehicles_amnt: ITRDetails.vehicles_amnt == 0.00 ? '' : ITRDetails.vehicles_amnt,
                    bank_amnt: ITRDetails.bank_amnt == 0.00 ? '' : ITRDetails.bank_amnt,
                    share_amnt: ITRDetails.share_amnt == 0.00 ? '' : ITRDetails.share_amnt,
                    loan_amnt: ITRDetails.loan_amnt == 0.00 ? '' : ITRDetails.loan_amnt,
                    cash_amnt: ITRDetails.cash_amnt == 0.00 ? '' : ITRDetails.cash_amnt,
                    other_liability_amnt: ITRDetails.other_liability_amnt == 0.00 ? '' : ITRDetails.other_liability_amnt,
                    complete_finance_image: $filter('parseImageCategory')(ITRDetails.itr_images, $CONFIG.ITR_Image_Category.complete_finance_image),
                    business_nature: ITRDetails.business_nature == "undefined" ? '' : ITRDetails.business_nature,
                    audit_report: ITRDetails.audit_report == 1 ? ITRDetails.audit_report = true : ITRDetails.audit_report = false,
                    audit_report_img: $filter('parseImageCategory')(ITRDetails.itr_images, $CONFIG.ITR_Image_Category.audit_report_img),
                    turnover: ITRDetails.turnover == 0.00 ? '' : ITRDetails.turnover,
                    net_profit: ITRDetails.net_profit == 0.00 ? '' : ITRDetails.net_profit
                }
            })
        }

        function saveITR1(data) {
            $dashboardModel.itr1details(data).then(function (result) {
                if (result.data.success) {
                    $scope.tabs.disable = false;
                    $timeout(function () {
                        $scope.nextTab();
                    });
                    $scope.itr.id = result.data.data;
                    if ($scope.itr.ITR == 2)
                        $scope.message = true;
                    toastr.success(result.data.message, 'Success!');
                }
                $appModel.progressBar(false, $scope);
            })
        }

        function saveITR2(data) {
            $dashboardModel.itr2details(data).then(function (result) {
                if (result.data.success) {
                    $scope.message = true;
                    toastr.success(result.data.message, 'Success!');
                }
                $appModel.progressBar(false, $scope);
            })
        }

        function saveITR3(data) {
            $dashboardModel.itr3details(data).then(function (result) {
                if (result.data.success) {
                    $scope.message = true;
                    toastr.success(result.data.message, 'Success!');
                }
                $appModel.progressBar(false, $scope);
            })
        }

        function saveITR4(data) {
            $dashboardModel.itr4details(data).then(function (result) {
                if (result.data.success) {
                    $scope.message = true;
                    toastr.success(result.data.message, 'Success!');
                }
                $appModel.progressBar(false, $scope);
            })
        }

        function getUserProfile() {
            if ($authModel.viewPermission($CONFIG.$ROLES.ADMIN)) {
                function fillITR(ITRDetails) {

                }
            }
            else {
                $dashboardModel.getUserProfile().then(function (result) {
                    if (result.data.success) {
                        var profile = result.data.data;
                        angular.extend($scope, {
                            user: {
                                name: profile.name,
                                email: profile.email,
                                mobile: profile.mobile,
                                residential_status: profile.residential_status,
                                employer_category: profile.employer_category,
                                ifsc_code: profile.ifsc_code == "null" ? '' : profile.ifsc_code,
                                address: profile.address == "null" ? '' : profile.address,
                                pan_image: $filter('parseImageCategory')(profile.images, $CONFIG.ITR_Image_Category.pan_image),
                                previous_return_image: $filter('parseImageCategory')(profile.images, $CONFIG.ITR_Image_Category.previous_return_image),
                                bank_statement: $filter('parseImageCategory')(profile.images, $CONFIG.ITR_Image_Category.bank_statement)
                            }
                        })
                    }
                });
            }
        }

        function postUserProfile(myFormData) {
            $dashboardModel.postUserProfile(myFormData).then(function (result) {
                if (result.data.success) {
                    $appModel.progressBar(false, $scope);
                    toastr.success(result.data.message, 'Success!');
                    $timeout(function () {
                        $scope.nextTab();
                    });
                }
            });
        }

        function deleteImage(data, item, obj) {
            $dashboardModel.deleteITRImage(data).then(function (result) {
                if (result.data.success) {
                    var index = $scope.itr[obj].indexOf(item);
                    $scope.itr[obj].splice(index, 1);
                }
            });
        }

        $scope.$watchCollection(function () {
            return $appModel.loadMasterCategory;
        }, function (newval, oldval) {
            if ($appModel.loadMasterCategory.length > 0) {
                var loadMaster = $filter('parseParent')($appModel.loadMasterCategory, 0);
                $scope.ITR = loadMaster.itr;
                $scope.residence = loadMaster.residential_status;
                $scope.employer = loadMaster.employer_category;
            }
        });
    }])
    .controller('corporateITRList', ['$scope', '$state', '$filter', 'resolveData', 'toastr', '$appModel', '$dashboardModel', 'localStorageService', function ($scope, $state, $filter, resolveData, toastr, $appModel, $dashboardModel, localStorageService) {
       /* if (!$dashboardModel.corpItrList.length > 0) {
            $scope.not_found = true;
            $scope.itr_exists = false;
            $scope.message = 'Data Not Found';
            return false;
        }*/
        // $scope.itr_exists = true;
        angular.extend($scope, {
            filterdata: {
                minValue: 0,
                maxValue: 100000
            },
            status: {},
            itr: {selected: []},
            toggle: function (item, list) {
                toggleCheckbox(parseInt(item), list);
            },
            exists: function (item, list) {
                return list.indexOf(parseInt(item)) > -1;
            },
            editTabDialog: function (row) {
                $state.go('add-corp-itr', {id: row.id});
            },
            sortby: function (item, order) {
                order = order ? 'desc' : 'asc';
                var data = angular.extend($scope.filterdata, {orderby: item, order: order});
                corpItrList(data, item, order);
            },

            changeStatus: function () {
                if ($scope.itr && $scope.itr.status > 0 && $scope.itr.selected.length > 0) {
                    var data = {
                        id: $scope.itr.selected,
                        status: $scope.itr.status
                    };
                    itrStatus(data);
                } else if (!$scope.itr.selected.length > 0 && $scope.itr) {
                    var status = {
                        status: $scope.itr.status
                    };
                    corpItrList(status);
                }
            }
        });

        function corpItrList(data) {
            data = {
                status: data.status,
                orderBy: data.orderby,
                order: data.order
            };
            $dashboardModel.CorporateITRList(data).then(function (result) {
                if (!result.data.data.length > 0) {
                    $scope.no_item = true;
                    $scope.hide_list = true;
                } else {
                    $scope.hide_list = false;
                    $scope.no_item = false;
                }
            })
        }

        function toggleCheckbox(item, list) {
            var idx = list.indexOf(item);
            if (idx > -1) {
                list.splice(idx, 1);
            } else {
                list.push(item);
            }
        }

        function itrStatus(data) {
            $dashboardModel.corpItrStatus(data).then(function (result) {
                if (result.data.success) {
                    toastr.success("status Updated", 'Success!');
                }
                $appModel.progressBar(false, $scope);
            })
        }

        $scope.$watchCollection(function () {
            return $dashboardModel.corpItrList;
        }, function (newval, oldval) {
            if ($dashboardModel.corpItrList.length > 0) {
                $scope.ITR = $dashboardModel.corpItrList;
                $scope.not_found = true;
                $scope.directives = true;
                $scope.itr_exists = true;
                $scope.message = 'Data Not Found';
            }
        });

        $scope.$watchCollection(function () {
            return $appModel.loadMasterCategory;
        }, function (newval, oldval) {
            if ($appModel.loadMasterCategory.length > 0) {
                var loadMaster = $filter('parseParent')($appModel.loadMasterCategory, 0);
                $scope.status = loadMaster.application_status;
            }
        });

    }])
    .controller('addCorporateITR', ['$scope', '$rootScope', '$state', '$stateParams', '$CONFIG', 'toastr', '$filter', '$API', '$timeout', '$appModel', '$authModel', '$dashboardModel', 'resolveData', function ($scope, $rootScope, $state, $stateParams, $CONFIG, toastr, $filter, $API, $timeout, $appModel, $authModel, $dashboardModel, resolveData) {
        angular.extend($scope, {
            company: {
                ITR: 20
            },
            tabs: {
                max: 2,
                selectedIndex: 0,
                disable: true
            },
            first: true,
            showBtns: false,
            lastFile: null,

            remove: function (item, obj) {
                if (confirm("Are You Sure?")) {
                    if (!item.itr_id) {
                        var index = $scope.company[obj].indexOf(item);
                        $scope.company[obj].splice(index, 1);
                    }
                    else {
                        var data = {
                            itr_id: item.itr_id,
                            category: item.category,
                            img_name: item.image
                        };
                        deleteImage(data, item, obj)
                    }
                }
            },
            corporateDetails: function () {
                if ($scope.DetailsForm.$valid) {
                    $appModel.progressBar(true, $scope);
                    var myFormData = new FormData();
                    angular.forEach($scope.company.pan_image, function (value, key) {
                        myFormData.append('pan_image[]', value._file);
                    });
                    angular.forEach($scope.company.adhar_image, function (value, key) {
                        myFormData.append('adhar_image[]', value._file);
                    });
                    angular.forEach($scope.company.bank_statement, function (value, key) {
                        myFormData.append('bank_statement[]', value._file);
                    });
                    myFormData.append('company_name', $scope.company.name);
                    myFormData.append('contact', $scope.company.contact);
                    myFormData.append('bank_name', $scope.company.bank_name);
                    myFormData.append('bank_ifsc', $scope.company.ifsc_code);
                    myFormData.append('company_pan', $scope.company.pan_no);
                    myFormData.append('company_adhar', $scope.company.adhar_no);
                    myFormData.append('company_add', $scope.company.address);
                    myFormData.append('id', $scope.company.id);
                    saveDetails(myFormData);
                }
            },

            submitITR5: function () {
                var myFormData = new FormData();
                angular.forEach($scope.company.audit_report_img, function (value, key) {
                    myFormData.append('audit_report_img[]', value._file);
                });
                angular.forEach($scope.company.previous_return_image, function (value, key) {
                    myFormData.append('previous_return_image[]', value._file);
                });
                angular.forEach($scope.company.form_26A, function (value, key) {
                    myFormData.append('form_26A[]', value._file);
                });
                angular.forEach($scope.company.financial_documents, function (value, key) {
                    myFormData.append('financial_documents[]', value._file);
                });
                angular.forEach($scope.company.income_computation, function (value, key) {
                    myFormData.append('income_computation[]', value._file);
                });
                angular.forEach($scope.company.share_holders, function (value, key) {
                    myFormData.append('share_holders[]', value._file);
                });
                myFormData.append('id', $scope.company.id);
                myFormData.append('ITR', $scope.company.ITR);
                saveITR5(myFormData);
            },

            nextTab: function () {
                $dashboardModel.nextTab($scope);
            },
            backTab: function () {
                $dashboardModel.backTab($scope);
            }
        });

        function saveDetails(data) {
            $dashboardModel.corporateDetails(data).then(function (result) {
                if (result.data.success) {
                    $scope.tabs.disable = false;
                    $timeout(function () {
                        $scope.nextTab();
                    });
                    $scope.company.id = result.data.data;
                    toastr.success(result.data.message, 'Success!');
                }
                $appModel.progressBar(false, $scope);
            })
        }

        function saveITR5(data) {
            $dashboardModel.itr5details(data).then(function (result) {
                if (result.data.success) {
                    $scope.message = true;
                    toastr.success(result.data.message, 'Success!');
                }
                $appModel.progressBar(false, $scope);
            })
        }

        function deleteImage(data, item, obj) {
            $dashboardModel.deleteCoprporateImage(data).then(function (result) {
                if (result.data.success) {
                    var index = $scope.company[obj].indexOf(item);
                    $scope.company[obj].splice(index, 1);
                }
            });
        }

        if (resolveData && resolveData.data.success) {
            var ITRDetails = resolveData.data.data;
            fillITR(ITRDetails);
            $scope.tabs.disable = false;
        }
        function fillITR(ITRDetails) {
            angular.extend($scope, {
                company: {
                    id: ITRDetails.id,
                    ITR: ITRDetails.ITR,
                    name: ITRDetails.company_name,
                    contact: ITRDetails.contact,
                    bank_name: ITRDetails.bank_name == "undefined" ? '' : ITRDetails.bank_name,
                    ifsc_code: ITRDetails.bank_ifsc == "undefined" ? '' : ITRDetails.bank_ifsc,
                    address: ITRDetails.company_add == "undefined" ? '' : ITRDetails.company_add,
                    pan_no: ITRDetails.company_pan == "undefined" ? '' : ITRDetails.company_pan,
                    adhar_no: ITRDetails.company_adhar == "undefined" ? '' : ITRDetails.company_adhar,
                    pan_image: $filter('parseImageCategory')(ITRDetails.itr_images, $CONFIG.ITR_Image_Category.pan_image),
                    adhar_image: $filter('parseImageCategory')(ITRDetails.itr_images, $CONFIG.ITR_Image_Category.adhar_image),
                    bank_statement: $filter('parseImageCategory')(ITRDetails.itr_images, $CONFIG.ITR_Image_Category.bank_statement),
                    audit_report_img: $filter('parseImageCategory')(ITRDetails.itr_images, $CONFIG.ITR_Image_Category.audit_report_img),
                    previous_return_image: $filter('parseImageCategory')(ITRDetails.itr_images, $CONFIG.ITR_Image_Category.previous_return_image),
                    form_26A: $filter('parseImageCategory')(ITRDetails.itr_images, $CONFIG.ITR_Image_Category.form_26A),
                    financial_documents: $filter('parseImageCategory')(ITRDetails.itr_images, $CONFIG.ITR_Image_Category.financial_documents),
                    income_computation: $filter('parseImageCategory')(ITRDetails.itr_images, $CONFIG.ITR_Image_Category.income_computation),
                    share_holders: $filter('parseImageCategory')(ITRDetails.itr_images, $CONFIG.ITR_Image_Category.share_holders),
                }
            })
        }

        $scope.$watchCollection(function () {
            return $appModel.loadMasterCategory;
        }, function (newval, oldval) {
            if ($appModel.loadMasterCategory.length > 0) {
                var loadMaster = $filter('parseParent')($appModel.loadMasterCategory, 0);
                $scope.ITR = loadMaster.itr;
            }
        });
    }])
    .controller('gstFilesCtrl', ['$scope', '$state', '$filter', 'resolveData', 'toastr', '$appModel', '$dashboardModel', 'localStorageService', function ($scope, $state, $filter, resolveData, toastr, $appModel, $dashboardModel, localStorageService) {
        localStorageService.clearAll();
        if (!$dashboardModel.GSTFiles.length > 0) {
            $scope.not_found = true;
            $scope.message = 'Data Not Found';
            return false;
        }
        angular.extend($scope, {
            filterdata: {
                minValue: 0,
                maxValue: 100000
            },
            status: {},
            itr: {selected: []},
            toggle: function (item, list) {
                toggleCheckbox(parseInt(item), list);
            },
            exists: function (item, list) {
                return list.indexOf(parseInt(item)) > -1;
            },
            editTabDialog: function (row) {
                $state.go('upload-gst', {id: row.agent_id});
            },
            sortby: function (item, order) {
                order = order ? 'desc' : 'asc';
                var data = angular.extend($scope.filterdata, {orderby: item, order: order});
                itrList(data, item, order);
            },

            changeStatus: function () {
                if ($scope.itr && $scope.itr.status > 0 && $scope.itr.selected.length > 0) {
                    var data = {
                        id: $scope.itr.selected,
                        status: $scope.itr.status
                    };
                    itrStatus(data);
                } else if (!$scope.itr.selected.length > 0 && $scope.itr) {
                    var status = {
                        status: $scope.itr.status
                    };
                    itrList(status);
                }
            }
        });
        /*  function itrList(data) {
         data = {
         status: data.status,
         orderBy: data.orderby,
         order: data.order
         };
         $dashboardModel.ITRList(data).then(function (result) {
         if (!result.data.data.length > 0) {
         $scope.no_item = true;
         $scope.hide_list = true;
         } else {
         $scope.hide_list = false;
         $scope.no_item = false;
         }
         })
         }

         $scope.$watchCollection(function () {
         return $dashboardModel.itrList;
         }, function (newval, oldval) {
         if ($dashboardModel.itrList.length > 0) {
         $scope.ITR = $dashboardModel.itrList;
         $scope.not_found = $scope.ITR.length > 0 ? false : true;
         $scope.directives = $scope.ITR.length > 0 ? true : false;
         }
         });

         function toggleCheckbox(item, list) {
         var idx = list.indexOf(item);
         if (idx > -1) {
         list.splice(idx, 1);
         } else {
         list.push(item);
         }
         }

         function itrStatus(data) {
         $dashboardModel.itrStatus(data).then(function (result) {
         if (result.data.success) {
         toastr.success("status Updated", 'Success!');
         }
         $appModel.progressBar(false, $scope);
         })
         }

         $scope.$watchCollection(function () {
         return $appModel.loadMasterCategory;
         }, function (newval, oldval) {
         if ($appModel.loadMasterCategory.length > 0) {
         var loadMaster = $filter('parseParent')($appModel.loadMasterCategory, 0);
         $scope.status = loadMaster.application_status;
         }
         });*/

        $scope.$watchCollection(function () {
            return $dashboardModel.GSTFiles;
        }, function (newval, oldval) {
            if ($dashboardModel.GSTFiles.length > 0) {
                $scope.GST = $dashboardModel.GSTFiles;
            }
        });
    }])
    .controller('uploadGSTCtrl', ['$scope', '$rootScope', '$state', '$stateParams', '$CONFIG', 'toastr', '$filter', '$API', '$timeout', '$appModel', '$authModel', '$dashboardModel', 'resolveData', function ($scope, $rootScope, $state, $stateParams, $CONFIG, toastr, $filter, $API, $timeout, $appModel, $authModel, $dashboardModel, resolveData) {
        angular.extend($scope, {
            company: {
                ITR: 20
            },
            tabs: {
                max: 2,
                selectedIndex: 0,
                disable: true
            },
            first: true,
            showBtns: false,
            lastFile: null,

            remove: function (item, obj) {
                if (confirm("Are You Sure?")) {
                    if (!item.agent_id) {
                        var index = $scope.gst[obj].indexOf(item);
                        $scope.gst[obj].splice(index, 1);
                    }
                    else {
                        var data = {
                            agent_id: item.agent_id,
                            category: item.category,
                            img_name: item.image
                        };
                        deleteImage(data, item, obj)
                    }
                }
            },
            uploadGST: function () {
                if ($scope.gst == undefined) {
                    confirm('please select a file')
                } else {
                    var myFormData = new FormData();
                    angular.forEach($scope.gst.gst_files, function (value, key) {
                        myFormData.append('gst_files[]', value._file);
                    });
                    uploadGST(myFormData);
                }
            },

            nextTab: function () {
                $dashboardModel.nextTab($scope);
            },
            backTab: function () {
                $dashboardModel.backTab($scope);
            }
        });

        function uploadGST(data) {
            $dashboardModel.uploadGST(data).then(function (result) {
                if (result.data.success) {
                    $scope.message = true;
                    toastr.success(result.data.message, 'Success!');
                }
                $appModel.progressBar(false, $scope);
            })
        }

        function deleteImage(data, item, obj) {
            $dashboardModel.deleteGSTImage(data).then(function (result) {
                if (result.data.success) {
                    var index = $scope.gst[obj].indexOf(item);
                    $scope.gst[obj].splice(index, 1);
                }
            });
        }

        if (resolveData && resolveData.data.success) {
            var GSTFiles = resolveData.data.data;
            fillGST(GSTFiles);
            $scope.tabs.disable = false;
        }
        function fillGST(GSTFiles) {
            angular.extend($scope, {
                gst: {
                    gst_files: GSTFiles.gst_images
                }
            })
        }

        $scope.$watchCollection(function () {
            return $appModel.loadMasterCategory;
        }, function (newval, oldval) {
            if ($appModel.loadMasterCategory.length > 0) {
                var loadMaster = $filter('parseParent')($appModel.loadMasterCategory, 0);
                $scope.ITR = loadMaster.itr;
            }
        });
    }])


/**
 * Created by Admin on 4/18/2017.
 */
app
    .factory('$dashboardModel', ['$http', '$API', '$appModel', '$authModel', '$CONFIG', function ($http, $API, $appModel, $authModel, $CONFIG) {
        var $dashboardModel = {};
        // $dashboardModel.loadMasterCategory = {};
        // loadAllCategory();
        $dashboardModel.itrList = {};
        $dashboardModel.corpItrList = {};
        $dashboardModel.GSTFiles = {};

        $dashboardModel.postUserProfile = function (data) {
            return $http({
                headers: {
                    'Content-Type': undefined
                },
                url: $API.API_POST_USER_PROFILE,
                method: 'POST',
                data: data,
                transformRequest: angular.identity,
            }).success(function (response) {
                return response;
            }).error(function (data, status, headers) {
                return $appModel.error(data, status);
            });
        };

        $dashboardModel.getUserProfile = function () {
            return $http({
                headers: {
                    'Content-Type': 'application/json'
                },
                url: $API.API_GET_USER_PROFILE,
                method: 'GET',
            }).success(function (response) {
                return response;
            }).error(function (data, status, headers) {
                return $appModel.error(data, status);
            });
        };

        $dashboardModel.changePassword = function (data) {
            return $http({
                headers: {
                    'Content-Type': 'application/json'
                },
                url: $API.API_POST_CHANGE_PASSWORD,
                method: 'POST',
                data: data
            }).success(function (response) {
                return response;
            }).error(function (data, status, headers) {
                return $appModel.error(data, status);
            });
        };

        $dashboardModel.ITRList = function (data) {
            return $http({
                headers: {
                    'Content-Type': 'application/json'
                },
                url: $API.API_ITR_LIST,
                method: 'GET',
                params: data
            }).success(function (response) {
                if (response.success) {
                    $dashboardModel.itrList = response.data;
                }
                return response;
            }).error(function (data, status, headers) {
                return $appModel.error(data, status);
            });
        };

        $dashboardModel.editITR = function (id) {
            return $http({
                headers: {
                    'Content-Type': 'application/json'
                },
                url: $API.API_GET_EDIT_ITR + id,
                method: 'GET'
            }).success(function (response) {
                return response;
            }).error(function (data, status, headers) {
                return $appModel.error(data, status);
            });
        };

        $dashboardModel.itrStatus = function (data) {
            return $http({
                headers: {
                    'Content-Type': 'application/json'
                },
                url: $API.API_POST_ITR_STATUS,
                method: 'POST',
                data: data
            }).success(function (response) {
                if (response.success) {
                    $dashboardModel.itrList = response.data;

                }
                return response;
            }).error(function (data, status, headers) {
                return $appModel.error(data, status);
            });
        };

        $dashboardModel.selectITR = function (data) {
            return $http({
                headers: {
                    'Content-Type': 'application/json'
                },
                url: $API.API_POST_SELECT_ITR,
                method: 'POST',
                data: data
            }).success(function (response) {
                return response;
            }).error(function (data, status, headers) {
                return $appModel.error(data, status);
            });
        };


        $dashboardModel.itr1details = function (data) {
            return $http({
                headers: {
                    'Content-Type': undefined
                },
                url: $API.API_POST_ITR1_DETAILS,
                method: 'POST',
                data: data,
                transformRequest: angular.identity
            }).success(function (response) {
                return response;
            }).error(function (data, status, headers) {
                return $appModel.error(data, status);
            });
        };

        $dashboardModel.itr2details = function (data) {
            return $http({
                headers: {
                    'Content-Type': undefined
                },
                url: $API.API_POST_ITR2_DETAILS,
                method: 'POST',
                data: data,
                transformRequest: angular.identity
            }).success(function (response) {
                return response;
            }).error(function (data, status, headers) {
                return $appModel.error(data, status);
            });
        };

        $dashboardModel.itr3details = function (data) {
            return $http({
                headers: {
                    'Content-Type': undefined
                },
                url: $API.API_POST_ITR3_DETAILS,
                method: 'POST',
                data: data,
                transformRequest: angular.identity
            }).success(function (response) {
                return response;
            }).error(function (data, status, headers) {
                return $appModel.error(data, status);
            });
        };

        $dashboardModel.itr4details = function (data) {
            return $http({
                headers: {
                    'Content-Type': undefined
                },
                url: $API.API_POST_ITR4_DETAILS,
                method: 'POST',
                data: data,
                transformRequest: angular.identity
            }).success(function (response) {
                return response;
            }).error(function (data, status, headers) {
                return $appModel.error(data, status);
            });
        };

        $dashboardModel.deleteITRImage = function (data) {
            return $http({
                headers: {
                    'Content-Type': 'application/json'
                },
                url: $API.API_DELET_IMAGE,
                method: 'DELETE',
                data: data,
            }).success(function (response) {
                return response;
            }).error(function (data, status, headers) {
                return console.log(data);
            });
        };

        $dashboardModel.corporateDetails = function (data) {
            return $http({
                headers: {
                    'Content-Type': undefined
                },
                url: $API.API_POST_CORPORATE_DETAILS,
                method: 'POST',
                data: data,
                transformRequest: angular.identity
            }).success(function (response) {
                return response;
            }).error(function (data, status, headers) {
                return $appModel.error(data, status);
            });
        };
        $dashboardModel.itr5details = function (data) {
            return $http({
                headers: {
                    'Content-Type': undefined
                },
                url: $API.API_POST_ITR5_DETAILS,
                method: 'POST',
                data: data,
                transformRequest: angular.identity
            }).success(function (response) {
                return response;
            }).error(function (data, status, headers) {
                return $appModel.error(data, status);
            });
        };

        $dashboardModel.CorporateITRList = function (data) {
            return $http({
                headers: {
                    'Content-Type': 'application/json'
                },
                url: $API.API_CORP_ITR_LIST,
                method: 'GET',
                params: data
            }).success(function (response) {
                if (response.success) {
                    $dashboardModel.corpItrList = response.data;
                }
                return response;
            }).error(function (data, status, headers) {
                return $appModel.error(data, status);
            });
        };

        $dashboardModel.editCorpITR = function (id) {
            return $http({
                headers: {
                    'Content-Type': 'application/json'
                },
                url: $API.API_EDIT_CORPORATE_ITR + id,
                method: 'GET'
            }).success(function (response) {
                return response;
            }).error(function (data, status, headers) {
                return $appModel.error(data, status);
            });
        };

        $dashboardModel.deleteCoprporateImage = function (data) {
            return $http({
                headers: {
                    'Content-Type': 'application/json'
                },
                url: $API.API_DELET_CORP_IMAGE,
                method: 'DELETE',
                data: data
            }).success(function (response) {
                return response;
            }).error(function (data, status, headers) {
                return console.log(data);
            });
        };

        $dashboardModel.gstFiles = function (data) {
            return $http({
                headers: {
                    'Content-Type': 'application/json'
                },
                url: $API.API_GET_GST_FILES,
                method: 'GET',
                params: data
            }).success(function (response) {
                if (response.success) {
                    $dashboardModel.GSTFiles = response.data;
                }
                return response;
            }).error(function (data, status, headers) {
                return $appModel.error(data, status);
            });
        };

        $dashboardModel.editGST = function (id) {
            return $http({
                headers: {
                    'Content-Type': 'application/json'
                },
                url: $API.API_EDIT_GST_FILE + id,
                method: 'GET'
            }).success(function (response) {
                return response;
            }).error(function (data, status, headers) {
                return $appModel.error(data, status);
            });
        };

        $dashboardModel.uploadGST = function (data) {
            return $http({
                headers: {
                    'Content-Type': undefined
                },
                url: $API.API_UPLOAD_GST_FILES,
                method: 'POST',
                data: data,
                transformRequest: angular.identity
            }).success(function (response) {
                return response;
            }).error(function (data, status, headers) {
                return $appModel.error(data, status);
            });
        };
        $dashboardModel.deleteGSTImage = function (data) {
            return $http({
                headers: {
                    'Content-Type': 'application/json'
                },
                url: $API.API_DELETE_GST_IMAGE,
                method: 'DELETE',
                data: data
            }).success(function (response) {
                return response;
            }).error(function (data, status, headers) {
                return console.log(data);
            });
        };

        $dashboardModel.corpItrStatus = function (data) {
            return $http({
                headers: {
                    'Content-Type': 'application/json'
                },
                url: $API.API_CORP_ITR_STATUS,
                method: 'POST',
                data: data
            }).success(function (response) {
                if (response.success) {
                    $dashboardModel.corpItrList = response.data;
                }
                return response;
            }).error(function (data, status, headers) {
                return $appModel.error(data, status);
            });
        };




        $dashboardModel.nextTab = function (scope) {
            var index = (scope.tabs.selectedIndex == scope.tabs.max) ? 0 : scope.tabs.selectedIndex + 1;
            scope.tabs.selectedIndex = index;
        };
        $dashboardModel.backTab = function (scope) {
            var index = (scope.tabs.selectedIndex == scope.tabs.max) ? scope.tabs.selectedIndex - 1 : scope.tabs.selectedIndex - 1;
            scope.tabs.selectedIndex = index;
        };

        /*  function loadAllCategory() {
         return $http({
         headers: {
         'Content-Type': 'application/json'
         },
         url: $API.API_AUTH_GET_ALL_CATEGORY,
         method: 'GET'
         }).success(function (response) {
         if (response.success) {
         $dashboardModel.loadMasterCategory = response.data;
         }
         return response;
         }).error(function (data, status, headers) {
         return console.log(data);
         });
         }*/

        return $dashboardModel;
    }])
//# sourceMappingURL=dashboard.min.js.map
